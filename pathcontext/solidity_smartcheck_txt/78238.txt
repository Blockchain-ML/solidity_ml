F:\Blockchain\dataset_new_byID\78238.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 494
column: 18
content: A.balance==b

ruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 500
column: 18
content: A.balance!=b

ruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 506
column: 18
content: A.balance==0

ruleId: SOLIDITY_BALANCE_EQUALITY
patternId: 5094ad
severity: 1
line: 512
column: 18
content: A.balance!=0

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 26
column: 4
content: functionassertEqual(stringA,stringB,stringmessage)constantreturns(boolresult){result=_stringsEqual(A,B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 35
column: 4
content: functionassertNotEqual(stringA,stringB,stringmessage)constantreturns(boolresult){result=!_stringsEqual(A,B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 44
column: 4
content: functionassertEmpty(stringstr,stringmessage)constantreturns(boolresult){result=_stringsEqual(str,STRING_NULL);if(result)_report(result,message);else_report(result,_appendTagged(_tag(str,"Tested"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 53
column: 4
content: functionassertNotEmpty(stringstr,stringmessage)constantreturns(boolresult){result=!_stringsEqual(str,STRING_NULL);if(result)_report(result,message);else_report(result,_appendTagged(_tag(str,"Tested"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 64
column: 4
content: functionassertEqual(bytes32A,bytes32B,stringmessage)constantreturns(boolresult){result=(A==B);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 70
column: 4
content: functionassertNotEqual(bytes32A,bytes32B,stringmessage)constantreturns(boolresult){result=(A!=B);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 76
column: 4
content: functionassertZero(bytes32bts,stringmessage)constantreturns(boolresult){result=(bts==BYTES32_NULL);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 82
column: 4
content: functionassertNotZero(bytes32bts,stringmessage)constantreturns(boolresult){result=(bts!=BYTES32_NULL);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 90
column: 4
content: functionassertEqual(addressA,addressB,stringmessage)constantreturns(boolresult){result=(A==B);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 95
column: 4
content: functionassertNotEqual(addressA,addressB,stringmessage)constantreturns(boolresult){result=(A!=B);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 101
column: 4
content: functionassertZero(addressaddr,stringmessage)constantreturns(boolresult){result=(addr==ADDRESS_NULL);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 107
column: 4
content: functionassertNotZero(addressaddr,stringmessage)constantreturns(boolresult){result=(addr!=ADDRESS_NULL);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 115
column: 4
content: functionassertTrue(boolb,stringmessage)constantreturns(boolresult){result=b;_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 121
column: 4
content: functionassert(boolb,stringmessage)constantreturns(boolresult){result=b;_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 127
column: 4
content: functionassertFalse(boolb,stringmessage)constantreturns(boolresult){result=!b;_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 133
column: 4
content: functionassertEqual(boolA,boolB,stringmessage)constantreturns(boolresult){result=(A==B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 142
column: 4
content: functionassertNotEqual(boolA,boolB,stringmessage)constantreturns(boolresult){result=(A!=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 153
column: 4
content: functionassertEqual(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A==B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 162
column: 4
content: functionassertNotEqual(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A!=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 171
column: 4
content: functionassertGT(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A>B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 180
column: 4
content: functionassertGTOE(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A>=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 189
column: 4
content: functionassertLT(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A<B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 198
column: 4
content: functionassertLTOE(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A<=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 207
column: 4
content: functionassertZero(uintnumber,stringmessage)constantreturns(boolresult){result=(number==0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(number,"Tested"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 216
column: 4
content: functionassertNotZero(uintnumber,stringmessage)constantreturns(boolresult){result=(number!=0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(number,"Tested"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 227
column: 4
content: functionassertEqual(intA,intB,stringmessage)constantreturns(boolresult){result=(A==B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 236
column: 4
content: functionassertNotEqual(intA,intB,stringmessage)constantreturns(boolresult){result=(A!=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 245
column: 4
content: functionassertGT(intA,intB,stringmessage)constantreturns(boolresult){result=(A>B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 254
column: 4
content: functionassertGTOE(intA,intB,stringmessage)constantreturns(boolresult){result=(A>=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 263
column: 4
content: functionassertLT(intA,intB,stringmessage)constantreturns(boolresult){result=(A<B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 272
column: 4
content: functionassertLTOE(intA,intB,stringmessage)constantreturns(boolresult){result=(A<=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 281
column: 4
content: functionassertZero(intnumber,stringmessage)constantreturns(boolresult){result=(number==0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(number,"Tested"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 290
column: 4
content: functionassertNotZero(intnumber,stringmessage)constantreturns(boolresult){result=(number!=0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(number,"Tested"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 301
column: 4
content: functionassertEqual(uint[]arrA,uint[]arrB,stringmessage)constantreturns(boolresult){result=arrA.length==arrB.length;if(result){for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}}_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 315
column: 4
content: functionassertNotEqual(uint[]arrA,uint[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 329
column: 4
content: functionassertLengthEqual(uint[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 338
column: 4
content: functionassertLengthNotEqual(uint[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 349
column: 4
content: functionassertEqual(int[]arrA,int[]arrB,stringmessage)constantreturns(boolresult){result=arrA.length==arrB.length;if(result){for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}}_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 363
column: 4
content: functionassertNotEqual(int[]arrA,int[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 377
column: 4
content: functionassertLengthEqual(int[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 386
column: 4
content: functionassertLengthNotEqual(int[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 397
column: 4
content: functionassertEqual(address[]arrA,address[]arrB,stringmessage)constantreturns(boolresult){result=arrA.length==arrB.length;if(result){for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}}_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 411
column: 4
content: functionassertNotEqual(address[]arrA,address[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 425
column: 4
content: functionassertLengthEqual(address[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 434
column: 4
content: functionassertLengthNotEqual(address[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 445
column: 4
content: functionassertEqual(bytes32[]arrA,bytes32[]arrB,stringmessage)constantreturns(boolresult){result=arrA.length==arrB.length;if(result){for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}}_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 459
column: 4
content: functionassertNotEqual(bytes32[]arrA,bytes32[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 473
column: 4
content: functionassertLengthEqual(bytes32[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 482
column: 4
content: functionassertLengthNotEqual(bytes32[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 493
column: 4
content: functionassertBalanceEqual(addressA,uintb,stringmessage)constantreturns(boolresult){result=(A.balance==b);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 499
column: 4
content: functionassertBalanceNotEqual(addressA,uintb,stringmessage)constantreturns(boolresult){result=(A.balance!=b);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 505
column: 4
content: functionassertBalanceZero(addressA,stringmessage)constantreturns(boolresult){result=(A.balance==0);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 511
column: 4
content: functionassertBalanceNotZero(addressA,stringmessage)constantreturns(boolresult){result=(A.balance!=0);_report(result,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 519
column: 4
content: functionassertErrorsEqual(uint16errorCode1,uint16errorCode2,stringmessage)constantreturns(boolresult){result=(errorCode1==errorCode2);if(result)_report(result,message);else_report(result,_appendTagged(_tag(uint(errorCode1),"Tested"),_tag(uint(errorCode2),"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 528
column: 4
content: functionassertErrorsNotEqual(uint16errorCode1,uint16errorCode2,stringmessage)constantreturns(boolresult){result=(errorCode1!=errorCode2);if(result)_report(result,message);else_report(result,_appendTagged(_tag(uint(errorCode1),"Tested"),_tag(uint(errorCode2),"Against"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 537
column: 4
content: functionassertError(uint16errorCode,stringmessage)constantreturns(boolresult){result=(errorCode!=0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(uint(errorCode),"Tested"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 546
column: 4
content: functionassertNoError(uint16errorCode,stringmessage)constantreturns(boolresult){result=(errorCode==0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(uint(errorCode),"Tested"),message));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 557
column: 4
content: function_report(boolresult,stringmessage)internalconstant{if(result)TestEvent(true,"");elseTestEvent(false,message);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 605
column: 4
content: function_itoa(intn,uint8radix)internalconstantreturns(string){if(n==0||radix<2||radix>16)return'0';bytesmemorybts=newbytes(256);uinti;boolneg=false;if(n<0){n=-n;neg=true;}while(n>0){bts[i++]=_utoa(uint8(n%radix));n/=radix;}uintsize=i;uintj=0;bytesmemoryrev;if(neg){size++;j=1;rev=newbytes(size);rev[0]=MINUS;}elserev=newbytes(size);for(;j<size;j++)rev[j]=bts[size-j-1];returnstring(rev);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 638
column: 4
content: function_utoa(uintn,uint8radix)internalconstantreturns(string){if(n==0||radix<2||radix>16)return'0';bytesmemorybts=newbytes(256);uinti;while(n>0){bts[i++]=_utoa(uint8(n%radix));n/=radix;}bytesmemoryrev=newbytes(i);for(uintj=0;j<i;j++)rev[j]=bts[i-j-1];returnstring(rev);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 655
column: 4
content: function_utoa(uint8u)internalconstantreturns(byte){if(u<10)returnbyte(u+ZERO);elseif(u<16)returnbyte(u-10+A);elsereturn0;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 665
column: 4
content: function_ltoa(boolval)internalconstantreturns(string){bytesmemoryb;if(val){b=newbytes(4);b[0]='t';b[1]='r';b[2]='u';b[3]='e';returnstring(b);}else{b=newbytes(5);b[0]='f';b[1]='a';b[2]='l';b[3]='s';b[4]='e';returnstring(b);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 304
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 318
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 352
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 366
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 400
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 414
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 448
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 462
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 592
column: 8
content: for(uinti=0;i<ba.length;i++){if(ba[i]!=bb[i])returnfalse;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 315
column: 4
content: functionassertNotEqual(uint[]arrA,uint[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 329
column: 4
content: functionassertLengthEqual(uint[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 338
column: 4
content: functionassertLengthNotEqual(uint[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 363
column: 4
content: functionassertNotEqual(int[]arrA,int[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 377
column: 4
content: functionassertLengthEqual(int[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 386
column: 4
content: functionassertLengthNotEqual(int[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 411
column: 4
content: functionassertNotEqual(address[]arrA,address[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 425
column: 4
content: functionassertLengthEqual(address[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 434
column: 4
content: functionassertLengthNotEqual(address[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 459
column: 4
content: functionassertNotEqual(bytes32[]arrA,bytes32[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 473
column: 4
content: functionassertLengthEqual(bytes32[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 482
column: 4
content: functionassertLengthNotEqual(bytes32[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 304
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 318
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 352
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 366
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 400
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 414
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 448
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 462
column: 12
content: for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 572
column: 8
content: for(uinti=0;i<minLength;i++)if(ba[i]<bb[i])return-1;elseif(ba[i]>bb[i])return1;

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 592
column: 8
content: for(uinti=0;i<ba.length;i++){if(ba[i]!=bb[i])returnfalse;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 702
column: 8
content: for(i=0;i<tl;i++)newB[j++]=tagB[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 706
column: 8
content: for(i=0;i<vl;i++)newB[j++]=valueB[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 744
column: 8
content: for(i=0;i<sl;i++)newB[j++]=strB[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 748
column: 8
content: for(i=0;i<tl;i++)newB[j++]=taggedB[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 771
column: 8
content: for(i=0;i<sl;i++)newB[j++]=strB[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 775
column: 8
content: for(i=0;i<t0l;i++)newB[j++]=tagged0B[i];

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 779
column: 8
content: for(i=0;i<t1l;i++)newB[j++]=tagged1B[i];

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 557
column: 34
content: stringmessage

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 586
column: 27
content: stringa

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 586
column: 37
content: stringb

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 600
column: 26
content: stringstr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 605
column: 66
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 638
column: 67
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 665
column: 56
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 689
column: 18
content: stringvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 689
column: 32
content: stringtag

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 689
column: 62
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 713
column: 29
content: stringtag

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 713
column: 59
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 719
column: 30
content: stringtag

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 719
column: 60
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 725
column: 30
content: stringtag

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 725
column: 60
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 731
column: 27
content: stringtagged

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 731
column: 42
content: stringstr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 731
column: 72
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 756
column: 27
content: stringtagged0

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 756
column: 43
content: stringtagged1

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 756
column: 59
content: stringstr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 756
column: 89
content: string

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 714
column: 8
content: varnstr=_itoa(value,10)

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 720
column: 8
content: varnstr=_utoa(value,10)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 26
column: 4
content: functionassertEqual(stringA,stringB,stringmessage)constantreturns(boolresult){result=_stringsEqual(A,B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 35
column: 4
content: functionassertNotEqual(stringA,stringB,stringmessage)constantreturns(boolresult){result=!_stringsEqual(A,B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 44
column: 4
content: functionassertEmpty(stringstr,stringmessage)constantreturns(boolresult){result=_stringsEqual(str,STRING_NULL);if(result)_report(result,message);else_report(result,_appendTagged(_tag(str,"Tested"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 53
column: 4
content: functionassertNotEmpty(stringstr,stringmessage)constantreturns(boolresult){result=!_stringsEqual(str,STRING_NULL);if(result)_report(result,message);else_report(result,_appendTagged(_tag(str,"Tested"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 64
column: 4
content: functionassertEqual(bytes32A,bytes32B,stringmessage)constantreturns(boolresult){result=(A==B);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 70
column: 4
content: functionassertNotEqual(bytes32A,bytes32B,stringmessage)constantreturns(boolresult){result=(A!=B);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 76
column: 4
content: functionassertZero(bytes32bts,stringmessage)constantreturns(boolresult){result=(bts==BYTES32_NULL);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 82
column: 4
content: functionassertNotZero(bytes32bts,stringmessage)constantreturns(boolresult){result=(bts!=BYTES32_NULL);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 90
column: 4
content: functionassertEqual(addressA,addressB,stringmessage)constantreturns(boolresult){result=(A==B);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 95
column: 4
content: functionassertNotEqual(addressA,addressB,stringmessage)constantreturns(boolresult){result=(A!=B);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 101
column: 4
content: functionassertZero(addressaddr,stringmessage)constantreturns(boolresult){result=(addr==ADDRESS_NULL);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 107
column: 4
content: functionassertNotZero(addressaddr,stringmessage)constantreturns(boolresult){result=(addr!=ADDRESS_NULL);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 115
column: 4
content: functionassertTrue(boolb,stringmessage)constantreturns(boolresult){result=b;_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 121
column: 4
content: functionassert(boolb,stringmessage)constantreturns(boolresult){result=b;_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 127
column: 4
content: functionassertFalse(boolb,stringmessage)constantreturns(boolresult){result=!b;_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 133
column: 4
content: functionassertEqual(boolA,boolB,stringmessage)constantreturns(boolresult){result=(A==B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 142
column: 4
content: functionassertNotEqual(boolA,boolB,stringmessage)constantreturns(boolresult){result=(A!=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 153
column: 4
content: functionassertEqual(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A==B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 162
column: 4
content: functionassertNotEqual(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A!=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 171
column: 4
content: functionassertGT(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A>B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 180
column: 4
content: functionassertGTOE(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A>=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 189
column: 4
content: functionassertLT(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A<B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 198
column: 4
content: functionassertLTOE(uintA,uintB,stringmessage)constantreturns(boolresult){result=(A<=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 207
column: 4
content: functionassertZero(uintnumber,stringmessage)constantreturns(boolresult){result=(number==0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(number,"Tested"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 216
column: 4
content: functionassertNotZero(uintnumber,stringmessage)constantreturns(boolresult){result=(number!=0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(number,"Tested"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 227
column: 4
content: functionassertEqual(intA,intB,stringmessage)constantreturns(boolresult){result=(A==B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 236
column: 4
content: functionassertNotEqual(intA,intB,stringmessage)constantreturns(boolresult){result=(A!=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 245
column: 4
content: functionassertGT(intA,intB,stringmessage)constantreturns(boolresult){result=(A>B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 254
column: 4
content: functionassertGTOE(intA,intB,stringmessage)constantreturns(boolresult){result=(A>=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 263
column: 4
content: functionassertLT(intA,intB,stringmessage)constantreturns(boolresult){result=(A<B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 272
column: 4
content: functionassertLTOE(intA,intB,stringmessage)constantreturns(boolresult){result=(A<=B);if(result)_report(result,message);else_report(result,_appendTagged(_tag(A,"Tested"),_tag(B,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 281
column: 4
content: functionassertZero(intnumber,stringmessage)constantreturns(boolresult){result=(number==0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(number,"Tested"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 290
column: 4
content: functionassertNotZero(intnumber,stringmessage)constantreturns(boolresult){result=(number!=0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(number,"Tested"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 301
column: 4
content: functionassertEqual(uint[]arrA,uint[]arrB,stringmessage)constantreturns(boolresult){result=arrA.length==arrB.length;if(result){for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}}_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 315
column: 4
content: functionassertNotEqual(uint[]arrA,uint[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 329
column: 4
content: functionassertLengthEqual(uint[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 338
column: 4
content: functionassertLengthNotEqual(uint[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 349
column: 4
content: functionassertEqual(int[]arrA,int[]arrB,stringmessage)constantreturns(boolresult){result=arrA.length==arrB.length;if(result){for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}}_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 363
column: 4
content: functionassertNotEqual(int[]arrA,int[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 377
column: 4
content: functionassertLengthEqual(int[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 386
column: 4
content: functionassertLengthNotEqual(int[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 397
column: 4
content: functionassertEqual(address[]arrA,address[]arrB,stringmessage)constantreturns(boolresult){result=arrA.length==arrB.length;if(result){for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}}_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 411
column: 4
content: functionassertNotEqual(address[]arrA,address[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 425
column: 4
content: functionassertLengthEqual(address[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 434
column: 4
content: functionassertLengthNotEqual(address[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 445
column: 4
content: functionassertEqual(bytes32[]arrA,bytes32[]arrB,stringmessage)constantreturns(boolresult){result=arrA.length==arrB.length;if(result){for(uinti=0;i<arrA.length;i++){if(arrA[i]!=arrB[i]){result=false;break;}}}_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 459
column: 4
content: functionassertNotEqual(bytes32[]arrA,bytes32[]arrB,stringmessage)constantreturns(boolresult){varr=arrA.length==arrB.length;if(r){for(uinti=0;i<arrA.length;i++){if(arrA[i]==arrB[i]){r=true;break;}}}_report(!r,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 473
column: 4
content: functionassertLengthEqual(bytes32[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength==length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 482
column: 4
content: functionassertLengthNotEqual(bytes32[]arr,uintlength,stringmessage)constantreturns(boolresult){uintarrLength=arr.length;if(arrLength!=arr.length)_report(result,"");else_report(result,_appendTagged(_tag(arrLength,"Tested"),_tag(length,"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 493
column: 4
content: functionassertBalanceEqual(addressA,uintb,stringmessage)constantreturns(boolresult){result=(A.balance==b);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 499
column: 4
content: functionassertBalanceNotEqual(addressA,uintb,stringmessage)constantreturns(boolresult){result=(A.balance!=b);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 505
column: 4
content: functionassertBalanceZero(addressA,stringmessage)constantreturns(boolresult){result=(A.balance==0);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 511
column: 4
content: functionassertBalanceNotZero(addressA,stringmessage)constantreturns(boolresult){result=(A.balance!=0);_report(result,message);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 519
column: 4
content: functionassertErrorsEqual(uint16errorCode1,uint16errorCode2,stringmessage)constantreturns(boolresult){result=(errorCode1==errorCode2);if(result)_report(result,message);else_report(result,_appendTagged(_tag(uint(errorCode1),"Tested"),_tag(uint(errorCode2),"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 528
column: 4
content: functionassertErrorsNotEqual(uint16errorCode1,uint16errorCode2,stringmessage)constantreturns(boolresult){result=(errorCode1!=errorCode2);if(result)_report(result,message);else_report(result,_appendTagged(_tag(uint(errorCode1),"Tested"),_tag(uint(errorCode2),"Against"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 537
column: 4
content: functionassertError(uint16errorCode,stringmessage)constantreturns(boolresult){result=(errorCode!=0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(uint(errorCode),"Tested"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 546
column: 4
content: functionassertNoError(uint16errorCode,stringmessage)constantreturns(boolresult){result=(errorCode==0);if(result)_report(result,message);else_report(result,_appendTagged(_tag(uint(errorCode),"Tested"),message));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 565
column: 4
content: function_compareStrings(stringa,stringb)returns(intresult){bytesmemoryba=bytes(a);bytesmemorybb=bytes(b);uintminLength=ba.length;if(bb.length<minLength)minLength=bb.length;for(uinti=0;i<minLength;i++)if(ba[i]<bb[i])return-1;elseif(ba[i]>bb[i])return1;if(ba.length<bb.length)return-1;elseif(ba.length>bb.length)return1;elsereturn0;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 6
column: 4
content: addressconstantADDRESS_NULL=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 9
column: 4
content: bytes32constantBYTES32_NULL=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 12
column: 4
content: stringconstantSTRING_NULL="";

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 14
column: 4
content: uint8constantZERO=uint8(byte('0'));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 15
column: 4
content: uint8constantA=uint8(byte('a'));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 17
column: 4
content: byteconstantMINUS=byte('-');

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 18
column: 4
content: byteconstantSPACE=byte(' ');

SOLIDITY_VISIBILITY :65
SOLIDITY_DEPRECATED_CONSTRUCTIONS :62
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :12
SOLIDITY_VAR :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :9
SOLIDITY_UPGRADE_TO_050 :23
SOLIDITY_GAS_LIMIT_IN_LOOPS :17
SOLIDITY_BALANCE_EQUALITY :4
