F:\Blockchain\dataset_new_byID\75934.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 28
column: 63
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 28
column: 68
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 40
column: 35
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 40
column: 40
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 77
column: 63
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 77
column: 68
content: 0x3

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 126
column: 71
content: 0x1a77ed

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 138
column: 116
content: 0xdead

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 142
column: 78
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 144
column: 31
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 145
column: 31
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 146
column: 31
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 148
column: 47
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 149
column: 79
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 150
column: 79
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 151
column: 79
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 152
column: 79
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 153
column: 79
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 154
column: 79
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 156
column: 79
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 157
column: 79
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 158
column: 79
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 159
column: 79
content: 0x2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 160
column: 79
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 170
column: 26
content: 0xdead

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 182
column: 31
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 194
column: 31
content: 0x1

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 16
column: 2
content: functionbeforeEach(){throwProxy=newThrowProxy(address(this));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 20
column: 2
content: functiondeployAndSetANT(AragonTokenSalesale){ANTa=newANT(newMiniMeTokenFactory());a.changeController(sale);a.setCanCreateGrants(sale,true);sale.setANT(a,newANPlaceholder(address(sale),a),newSaleWallet(sale.aragonDevMultisig(),sale.finalBlock(),address(sale)));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 27
column: 2
content: functiontestCreateSale(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,0x1,0x2,3,1,2);Assert.isFalse(sale.isActivated(),"Sale should be activated");Assert.equal(sale.totalCollected(),0,"Should start with 0 funds collected");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 34
column: 2
content: functiontestCantInitiateIncorrectSale(){TestTokenPresale(throwProxy).throwIfStartPastBlocktime();throwProxy.assertThrows("Should throw when starting a sale in a past block");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 39
column: 2
content: functionthrowIfStartPastBlocktime(){newAragonTokenSaleMock(0,20,0x1,0x2,3,1,2);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 43
column: 2
content: functiontestActivateSale(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);deployAndSetANT(sale);sale.activateSale();Assert.isTrue(sale.isActivated(),"Should be activated");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 50
column: 2
content: functiontestCannotActivateBeforeDeployingANT(){TestTokenPresale(throwProxy).throwsWhenActivatingBeforeDeployingANT();throwProxy.assertThrows("Should have thrown when activating before deploying ANT");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 55
column: 2
content: functionthrowsWhenActivatingBeforeDeployingANT(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);sale.activateSale();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 60
column: 2
content: functiontestCannotRedeployANT(){TestTokenPresale(throwProxy).throwsWhenRedeployingANT();throwProxy.assertThrows("Should have thrown when redeploying ANT");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 65
column: 2
content: functionthrowsWhenRedeployingANT(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);deployAndSetANT(sale);deployAndSetANT(sale);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 71
column: 2
content: functiontestOnlyMultisigCanDeployANT(){TestTokenPresale(throwProxy).throwsWhenNonMultisigDeploysANT();throwProxy.assertThrows("Should have thrown when deploying ANT from not multisig");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 76
column: 2
content: functionthrowsWhenNonMultisigDeploysANT(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,0x1,0x3,3,1,2);deployAndSetANT(sale);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 81
column: 2
content: functiontestThrowsIfPlaceholderIsBad(){TestTokenPresale(throwProxy).throwsWhenNetworkPlaceholderIsBad();throwProxy.assertThrows("Should have thrown when placeholder is not correct");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 86
column: 2
content: functionthrowsWhenNetworkPlaceholderIsBad(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);ANTa=newANT(newMiniMeTokenFactory());a.changeController(sale);sale.setANT(a,newANPlaceholder(address(sale),address(sale)),newSaleWallet(sale.aragonDevMultisig(),sale.finalBlock(),address(sale)));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 93
column: 2
content: functiontestThrowsIfSaleIsNotTokenController(){TestTokenPresale(throwProxy).throwsWhenSaleIsNotTokenController();throwProxy.assertThrows("Should have thrown when sale is not token controller");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 98
column: 2
content: functionthrowsWhenSaleIsNotTokenController(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);ANTa=newANT(newMiniMeTokenFactory());sale.setANT(a,newANPlaceholder(address(sale),a),newSaleWallet(sale.aragonDevMultisig(),sale.finalBlock(),address(sale)));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 105
column: 2
content: functiontestThrowsSaleWalletIncorrectBlock(){TestTokenPresale(throwProxy).throwsSaleWalletIncorrectBlock();throwProxy.assertThrows("Should have thrown sale wallet releases in incorrect block");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 110
column: 2
content: functionthrowsSaleWalletIncorrectBlock(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);ANTa=newANT(newMiniMeTokenFactory());a.changeController(sale);sale.setANT(a,newANPlaceholder(address(sale),a),newSaleWallet(sale.aragonDevMultisig(),sale.finalBlock()-1,address(sale)));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 117
column: 2
content: functiontestThrowsSaleWalletIncorrectMultisig(){TestTokenPresale(throwProxy).throwsSaleWalletIncorrectMultisig();throwProxy.assertThrows("Should have thrown when sale wallet has incorrect multisig");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 122
column: 2
content: functionthrowsSaleWalletIncorrectMultisig(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);ANTa=newANT(newMiniMeTokenFactory());a.changeController(sale);sale.setANT(a,newANPlaceholder(address(sale),a),newSaleWallet(0x1a77ed,sale.finalBlock(),address(sale)));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 129
column: 2
content: functiontestThrowsSaleWalletIncorrectSaleAddress(){TestTokenPresale(throwProxy).throwsSaleWalletIncorrectSaleAddress();throwProxy.assertThrows("Should have thrown when sale wallet has incorrect sale address");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 134
column: 2
content: functionthrowsSaleWalletIncorrectSaleAddress(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);ANTa=newANT(newMiniMeTokenFactory());a.changeController(sale);sale.setANT(a,newANPlaceholder(address(sale),a),newSaleWallet(sale.aragonDevMultisig(),sale.finalBlock(),0xdead));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 141
column: 2
content: functiontestSetPresaleTokens(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),0x2,3,1,2);deployAndSetANT(sale);sale.allocatePresaleTokens(0x1,100finney,uint64(now+12weeks),uint64(now+24weeks));sale.allocatePresaleTokens(0x2,30finney,uint64(now+12weeks),uint64(now+24weeks));sale.allocatePresaleTokens(0x2,6finney,uint64(now+8weeks),uint64(now+24weeks));sale.allocatePresaleTokens(address(this),20finney,uint64(now+12weeks),uint64(now+24weeks));Assert.equal(ERC20(sale.token()).balanceOf(0x1),100finney,'Should have correct balance after allocation');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x1,uint64(now)),0,'Should have 0 tokens transferable now');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x1,uint64(now+12weeks-1)),0,'Should have 0 tokens transferable just before cliff');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x1,uint64(now+12weeks)),50finney,'Should have some tokens transferable after cliff');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x1,uint64(now+18weeks)),75finney,'Should have some tokens transferable during vesting');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x1,uint64(now+21weeks)),87500szabo,'Should have some tokens transferable during vesting');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x1,uint64(now+24weeks)),100finney,'Should have all tokens transferable after vesting');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x2,uint64(now)),0,'Should have all tokens transferable after vesting');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x2,uint64(now+8weeks)),2finney,'Should have all tokens transferable after vesting');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x2,uint64(now+12weeks)),18finney,'Should have all tokens transferable after vesting');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x2,uint64(now+24weeks)),36finney,'Should have all tokens transferable after vesting');Assert.equal(MiniMeIrrevocableVestedToken(sale.token()).transferableTokens(0x1,uint64(now+24weeks)),100finney,'Should have all tokens transferable after vesting');Assert.equal(ERC20(sale.token()).totalSupply(),156finney,'Should have correct supply after allocation');Assert.equal(ERC20(sale.token()).balanceOf(this),20finney,'Should have correct balance');TestTokenPresale(throwProxy).throwsWhenTransferingPresaleTokensBeforeCliff(sale.token());throwProxy.assertThrows("Should have thrown when transfering presale tokens");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 169
column: 2
content: functionthrowsWhenTransferingPresaleTokensBeforeCliff(addresstoken){ERC20(token).transfer(0xdead,1);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 173
column: 2
content: functiontestCannotSetPresaleTokensAfterActivation(){TestTokenPresale(throwProxy).throwIfSetPresaleTokensAfterActivation();throwProxy.assertThrows("Should have thrown when setting tokens after activation");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 178
column: 2
content: functionthrowIfSetPresaleTokensAfterActivation(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);deployAndSetANT(sale);sale.activateSale();sale.allocatePresaleTokens(0x1,100,uint64(now+12weeks),uint64(now+24weeks));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 185
column: 2
content: functiontestCannotSetPresaleTokensAfterSaleStarts(){TestTokenPresale(throwProxy).throwIfSetPresaleTokensAfterSaleStarts();throwProxy.assertThrows("Should have thrown when setting tokens after sale started");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 190
column: 2
content: functionthrowIfSetPresaleTokensAfterSaleStarts(){AragonTokenSaleMocksale=newAragonTokenSaleMock(10,20,address(this),address(this),3,1,2);deployAndSetANT(sale);sale.setMockedBlockNumber(13);sale.allocatePresaleTokens(0x1,100,uint64(now+12weeks),uint64(now+24weeks));}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 12
column: 2
content: ANTtoken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 14
column: 2
content: ThrowProxythrowProxy;

SOLIDITY_VISIBILITY :30
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ADDRESS_HARDCODED :27
