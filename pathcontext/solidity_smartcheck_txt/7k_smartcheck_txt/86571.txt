F:\Blockchain\solidity_dataset_work\7k_dataset_ByID\86571.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 48
column: 25
content: 0x705872bebffA94C20f82E8F2e17E4cCff0c71A2C

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 25
column: 29
content: invested[msg.sender]*5/100*(block.number-atBlock[msg.sender])

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 27
column: 21
content: amount*((block.number-6401132)/118000)

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 11
column: 4
content: functionbytesToAddress(bytesbys)privatepurereturns(addressaddr){assembly{addr:=mload(add(bys,20))}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 5
column: 0
content: contractExpoInvest{mapping(address=>uint256)invested;mapping(address=>uint256)atBlock;functionbytesToAddress(bytesbys)privatepurereturns(addressaddr){assembly{addr:=mload(add(bys,20))}}function()payable{if(invested[msg.sender]!=0){uint256amount=invested[msg.sender]*5/100*(block.number-atBlock[msg.sender])/5900;amount+=amount*((block.number-6401132)/118000);addresssender=msg.sender;if(amount>address(this).balance){sender.send(address(this).balance);}elsesender.send(amount);}atBlock[msg.sender]=block.number;invested[msg.sender]+=msg.value;addressreferrer=bytesToAddress(msg.data);if(invested[referrer]>0&&referrer!=msg.sender){invested[msg.sender]+=msg.value/10;invested[referrer]+=msg.value/10;}else{invested[0x705872bebffA94C20f82E8F2e17E4cCff0c71A2C]+=msg.value/10;}}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 11
column: 4
content: functionbytesToAddress(bytesbys)privatepurereturns(addressaddr){assembly{addr:=mload(add(bys,20))}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 11
column: 28
content: bytesbys

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 12
column: 8
content: assembly{addr:=mload(add(bys,20))}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 18
column: 4
content: function()payable{if(invested[msg.sender]!=0){uint256amount=invested[msg.sender]*5/100*(block.number-atBlock[msg.sender])/5900;amount+=amount*((block.number-6401132)/118000);addresssender=msg.sender;if(amount>address(this).balance){sender.send(address(this).balance);}elsesender.send(amount);}atBlock[msg.sender]=block.number;invested[msg.sender]+=msg.value;addressreferrer=bytesToAddress(msg.data);if(invested[referrer]>0&&referrer!=msg.sender){invested[msg.sender]+=msg.value/10;invested[referrer]+=msg.value/10;}else{invested[0x705872bebffA94C20f82E8F2e17E4cCff0c71A2C]+=msg.value/10;}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 7
column: 4
content: mapping(address=>uint256)invested;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 9
column: 4
content: mapping(address=>uint256)atBlock;

SOLIDITY_VISIBILITY :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_DIV_MUL :2
SOLIDITY_SHOULD_NOT_BE_PURE :1
