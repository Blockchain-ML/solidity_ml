F:\Blockchain\solidity_dataset_work\7k_dataset_ByID\84470.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 49
column: 19
content: 0xffffffffffffffffffffffffffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 51
column: 40
content: 0x100000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 53
column: 19
content: 0xffffffffffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 55
column: 40
content: 0x10000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 57
column: 19
content: 0xffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 59
column: 40
content: 0x100000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 61
column: 19
content: 0xffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 63
column: 40
content: 0x10000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 65
column: 19
content: 0xff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 106
column: 20
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 108
column: 26
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 110
column: 26
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 112
column: 26
content: 0xF8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 114
column: 26
content: 0xFC

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 176
column: 16
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 178
column: 22
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 180
column: 22
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 218
column: 16
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 221
column: 22
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 222
column: 22
content: 0x1F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 224
column: 22
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 225
column: 22
content: 0x0F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 228
column: 22
content: 0x07

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 239
column: 35
content: 0xFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 240
column: 20
content: 0xC0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 240
column: 28
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 244
column: 36
content: 0x3F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 812
column: 43
content: 0x30

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 813
column: 36
content: 0x57

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 920
column: 43
content: 0x30

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 921
column: 36
content: 0x57

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 289
column: 28
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 289
column: 51
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 375
column: 35
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 379
column: 43
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 415
column: 35
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 419
column: 43
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 773
column: 4
content: functiongetBalance()constantreturns(uint){returnaddress(this).balance;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 785
column: 4
content: functionstringToUint(strings)constantprivatereturns(uintresult){bytesmemoryb=bytes(s);uinti;result=0;for(i=0;i<b.length;i++){uintc=uint(b[i]);if(c>=48&&c<=57){result=result*10+(c-48);}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 942
column: 4
content: functiongetBalance()constantreturns(uint){returnaddress(this).balance;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 513
column: 8
content: for(uinti=0;i<parts.length;i++)length+=parts[i]._len;

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 520
column: 8
content: for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 590
column: 8
content: for(uinti=0;i<parts.length;i++){countPercentage=countPercentage+stringToUint(s.split(delim).toString());}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 625
column: 8
content: for(uinti=0;i<listOfHeirs.length;i++){if(keccak256(senderStringAddress)==keccak256(s.split(delim).toString())){itsHeir=true;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 647
column: 8
content: for(uinti=0;i<arrayOfWitnesses.length;i++){if(keccak256(senderStringAddress)==keccak256(s.split(delim).toString())){itsWitness=true;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 789
column: 8
content: for(i=0;i<b.length;i++){uintc=uint(b[i]);if(c>=48&&c<=57){result=result*10+(c-48);}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 201
column: 4
content: functionnextRune(sliceself)internalpurereturns(sliceret){nextRune(self,ret);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 251
column: 4
content: functionkeccak(sliceself)internalpurereturns(bytes32ret){assembly{ret:=keccak256(mload(add(self,32)),mload(self))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 460
column: 4
content: functionsplit(sliceself,sliceneedle)internalpurereturns(slicetoken){split(self,needle,token);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 479
column: 4
content: functionrsplit(sliceself,sliceneedle)internalpurereturns(slicetoken){rsplit(self,needle,token);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 484
column: 4
content: functioncount(sliceself,sliceneedle)internalpurereturns(uintcnt){uintptr=findPtr(self._len,self._ptr,needle._len,needle._ptr)+needle._len;while(ptr<=self._ptr+self._len){cnt++;ptr=findPtr(self._len-(ptr-self._ptr),ptr,needle._len,needle._ptr)+needle._len;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 513
column: 8
content: for(uinti=0;i<parts.length;i++)length+=parts[i]._len;

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 520
column: 8
content: for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 590
column: 8
content: for(uinti=0;i<parts.length;i++){countPercentage=countPercentage+stringToUint(s.split(delim).toString());}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 625
column: 8
content: for(uinti=0;i<listOfHeirs.length;i++){if(keccak256(senderStringAddress)==keccak256(s.split(delim).toString())){itsHeir=true;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 647
column: 8
content: for(uinti=0;i<arrayOfWitnesses.length;i++){if(keccak256(senderStringAddress)==keccak256(s.split(delim).toString())){itsWitness=true;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 789
column: 8
content: for(i=0;i<b.length;i++){uintc=uint(b[i]);if(c>=48&&c<=57){result=result*10+(c-48);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 365
column: 23
content: ptrdata!=needledata

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 405
column: 23
content: ptrdata!=needledata

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 417
column: 23
content: ptr>=selfptr

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 486
column: 15
content: ptr<=self._ptr+self._len

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 16
column: 4
content: functionmemcpy(uintdest,uintsrc,uintlen)privatepure{for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 36
column: 4
content: functiontoSlice(stringself)internalpurereturns(slice){uintptr;assembly{ptr:=add(self,0x20)}returnslice(bytes(self).length,ptr);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 72
column: 4
content: functiontoSliceB32(bytes32self)internalpurereturns(sliceret){assembly{letptr:=mload(0x40)mstore(0x40,add(ptr,0x20))mstore(ptr,self)mstore(add(ret,0x20),ptr)}ret._len=len(self);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 89
column: 4
content: functiontoString(sliceself)internalpurereturns(string){stringmemoryret=newstring(self._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 99
column: 4
content: functionlen(sliceself)internalpurereturns(uintl){uintptr=self._ptr-31;uintend=ptr+self._len;for(l=0;ptr<end;l++){uint8b;assembly{b:=and(mload(ptr),0xFF)}if(b<0x80){ptr+=1;}elseif(b<0xE0){ptr+=2;}elseif(b<0xF0){ptr+=3;}elseif(b<0xF8){ptr+=4;}elseif(b<0xFC){ptr+=5;}else{ptr+=6;}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 128
column: 4
content: functioncompare(sliceself,sliceother)internalpurereturns(int){uintshortest=self._len;if(other._len<self._len)shortest=other._len;uintselfptr=self._ptr;uintotherptr=other._ptr;for(uintidx=0;idx<shortest;idx+=32){uinta;uintb;assembly{a:=mload(selfptr)b:=mload(otherptr)}if(a!=b){uint256mask=uint256(-1);if(shortest<32){mask=~(2**(8*(32-shortest+idx))-1);}uint256diff=(a&mask)-(b&mask);if(diff!=0)returnint(diff);}selfptr+=32;otherptr+=32;}returnint(self._len)-int(other._len);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 164
column: 4
content: functionnextRune(sliceself,slicerune)internalpurereturns(slice){rune._ptr=self._ptr;if(self._len==0){rune._len=0;returnrune;}uintl;uintb;assembly{b:=and(mload(sub(mload(add(self,32)),31)),0xFF)}if(b<0x80){l=1;}elseif(b<0xE0){l=2;}elseif(b<0xF0){l=3;}else{l=4;}if(l>self._len){rune._len=self._len;self._ptr+=self._len;self._len=0;returnrune;}self._ptr+=l;self._len-=l;rune._len=l;returnrune;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 206
column: 4
content: functionord(sliceself)internalpurereturns(uintret){if(self._len==0){return0;}uintword;uintlength;uintdivisor=2**248;assembly{word:=mload(mload(add(self,32)))}uintb=word/divisor;if(b<0x80){ret=b;length=1;}elseif(b<0xE0){ret=b&0x1F;length=2;}elseif(b<0xF0){ret=b&0x0F;length=3;}else{ret=b&0x07;length=4;}if(length>self._len){return0;}for(uinti=1;i<length;i++){divisor=divisor/256;b=(word/divisor)&0xFF;if(b&0xC0!=0x80){return0;}ret=(ret*64)|(b&0x3F);}returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 251
column: 4
content: functionkeccak(sliceself)internalpurereturns(bytes32ret){assembly{ret:=keccak256(mload(add(self,32)),mload(self))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 258
column: 4
content: functionstartsWith(sliceself,sliceneedle)internalpurereturns(bool){if(self._len<needle._len){returnfalse;}if(self._ptr==needle._ptr){returntrue;}boolequal;assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}returnequal;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 278
column: 4
content: functionbeyond(sliceself,sliceneedle)internalpurereturns(slice){if(self._len<needle._len){returnself;}boolequal=true;if(self._ptr!=needle._ptr){assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(sha3(selfptr,length),sha3(needleptr,length))}}if(equal){self._len-=needle._len;self._ptr+=needle._len;}returnself;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 302
column: 4
content: functionendsWith(sliceself,sliceneedle)internalpurereturns(bool){if(self._len<needle._len){returnfalse;}uintselfptr=self._ptr+self._len-needle._len;if(selfptr==needle._ptr){returntrue;}boolequal;assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}returnequal;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 324
column: 4
content: functionuntil(sliceself,sliceneedle)internalpurereturns(slice){if(self._len<needle._len){returnself;}uintselfptr=self._ptr+self._len-needle._len;boolequal=true;if(selfptr!=needle._ptr){assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}}if(equal){self._len-=needle._len;}returnself;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 350
column: 4
content: functionfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr=selfptr;uintidx;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}uintend=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr>=end)returnselfptr+selflen;ptr++;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr;}else{bytes32hash;assembly{hash:=sha3(needleptr,needlelen)}for(idx=0;idx<=selflen-needlelen;idx++){bytes32testHash;assembly{testHash:=sha3(ptr,needlelen)}if(hash==testHash)returnptr;ptr+=1;}}}returnselfptr+selflen;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 391
column: 4
content: functionrfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}ptr=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr<=selfptr)returnselfptr;ptr--;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr+needlelen;}else{bytes32hash;assembly{hash:=sha3(needleptr,needlelen)}ptr=selfptr+(selflen-needlelen);while(ptr>=selfptr){bytes32testHash;assembly{testHash:=sha3(ptr,needlelen)}if(hash==testHash)returnptr+needlelen;ptr-=1;}}}returnselfptr;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 498
column: 4
content: functionconcat(sliceself,sliceother)internalpurereturns(string){stringmemoryret=newstring(self._len+other._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);memcpy(retptr+self._len,other._ptr,other._len);returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 508
column: 4
content: functionjoin(sliceself,slice[]parts)internalpurereturns(string){if(parts.length==0)return"";uintlength=self._len*(parts.length-1);for(uinti=0;i<parts.length;i++)length+=parts[i]._len;stringmemoryret=newstring(length);uintretptr;assembly{retptr:=add(ret,32)}for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}returnret;}

ruleId: SOLIDITY_TRANSFER_IN_LOOP
patternId: 8jdj43
severity: 2
line: 679
column: 12
content: for(uinti=0;i<witnessesLength;i++){varwitnessAddress=parseAddr(witnessesList.split(";".toSlice()).toString());witnessAddress.transfer(getWitnessWeiCost());}

ruleId: SOLIDITY_TRANSFER_IN_LOOP
patternId: 8jdj43
severity: 2
line: 721
column: 12
content: for(i=0;i<listLength-1;i++){parseAddr(users.split(";".toSlice()).toString()).transfer(((this.balance*stringToUint(percentages.split(";".toSlice()).toString()))/100000));}

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 738
column: 12
content: call.value(_value)(_data)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 36
column: 21
content: stringself

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 89
column: 57
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 498
column: 68
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 508
column: 30
content: slice[]parts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 508
column: 68
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 785
column: 26
content: strings

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 797
column: 57
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 817
column: 23
content: string_a

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 19
column: 12
content: assembly{mstore(dest,mload(src))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 28
column: 8
content: assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 38
column: 8
content: assembly{ptr:=add(self,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 74
column: 8
content: assembly{letptr:=mload(0x40)mstore(0x40,add(ptr,0x20))mstore(ptr,self)mstore(add(ret,0x20),ptr)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 92
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 105
column: 12
content: assembly{b:=and(mload(ptr),0xFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 138
column: 12
content: assembly{a:=mload(selfptr)b:=mload(otherptr)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 175
column: 8
content: assembly{b:=and(mload(sub(mload(add(self,32)),31)),0xFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 216
column: 8
content: assembly{word:=mload(mload(add(self,32)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 252
column: 8
content: assembly{ret:=keccak256(mload(add(self,32)),mload(self))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 268
column: 8
content: assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 285
column: 12
content: assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(sha3(selfptr,length),sha3(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 314
column: 8
content: assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 332
column: 12
content: assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 359
column: 16
content: assembly{needledata:=and(mload(needleptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 363
column: 16
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 369
column: 20
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 375
column: 16
content: assembly{hash:=sha3(needleptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 379
column: 20
content: assembly{testHash:=sha3(ptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 399
column: 16
content: assembly{needledata:=and(mload(needleptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 403
column: 16
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 409
column: 20
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 415
column: 16
content: assembly{hash:=sha3(needleptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 419
column: 20
content: assembly{testHash:=sha3(ptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 501
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 518
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 587
column: 8
content: varparts=newuint256[](s.count(delim)+1)

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 671
column: 12
content: varwitnessesLength=witnessesList.count(";".toSlice())+1

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 574
column: 4
content: functionMyWill(address_owner,string_listHeirs,string_listHeirsPercentages,string_listWitnesses,address_club,uint256_gasPrice,uint256_gasCost){club=_club;owner=_owner;gasPrice=_gasPrice;gasCost=_gasCost;status=Status.CREATED;listHeirs=_listHeirs;listHeirsPercentages=_listHeirsPercentages;listWitnesses=_listWitnesses;vars=_listHeirsPercentages.toSlice().copy();vardelim=";".toSlice();varparts=newuint256[](s.count(delim)+1);uint256countPercentage;for(uinti=0;i<parts.length;i++){countPercentage=countPercentage+stringToUint(s.split(delim).toString());}require(countPercentage==100000);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 665
column: 4
content: function()payableonlyAlive{if(status==Status.CREATED){varwitnessesList=listWitnesses.toSlice().copy();varwitnessesLength=witnessesList.count(";".toSlice())+1;varneeded=getWitnessWeiCost()*witnessesLength+getCreationWeiCost();require(msg.value>needed);club.transfer(getCreationWeiCost());for(uinti=0;i<witnessesLength;i++){varwitnessAddress=parseAddr(witnessesList.split(";".toSlice()).toString());witnessAddress.transfer(getWitnessWeiCost());}status=Status.ALIVE;Deposit(msg.sender,msg.value);}else{Deposit(msg.sender,msg.value);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 695
column: 4
content: functionownerDied()onlyWitnessonlyAlive{require(this.balance>0);mapHeirsVoteOwnerHasDied[addressToString(msg.sender)]=true;varusers=listWitnesses.toSlice().copy();uint256listLength=users.count(";".toSlice())+1;uint8count=0;for(uinti=0;i<listLength;i++){if(mapHeirsVoteOwnerHasDied[users.split(";".toSlice()).toString()]==true){count=count+1;}}if(count==listLength){users=listHeirs.toSlice().copy();varpercentages=listHeirsPercentages.toSlice().copy();listLength=users.count(";".toSlice())+1;for(i=0;i<listLength-1;i++){parseAddr(users.split(";".toSlice()).toString()).transfer(((this.balance*stringToUint(percentages.split(";".toSlice()).toString()))/100000));}parseAddr(users.split(";".toSlice()).toString()).transfer(this.balance);status=Status.DEAD;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 745
column: 4
content: functionisOwner()returns(bool){returnmsg.sender==owner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 749
column: 4
content: functiongetStatus()returns(Status){returnstatus;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 753
column: 4
content: functiongetCreationWeiCost()returns(uint256){returngasPrice*gasCost;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 757
column: 4
content: functiongetWitnessWeiCost()returns(uint256){return(1000000*gasPrice);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 761
column: 4
content: functiongetHeirs()returns(string,string){return(listHeirs,listHeirsPercentages);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 765
column: 4
content: functiongetWitnesses()returns(string){returnlistWitnesses;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 769
column: 4
content: functiongetWitnessesCount()returns(uint){returnlistWitnesses.toSlice().copy().count(";".toSlice())+1;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 773
column: 4
content: functiongetBalance()constantreturns(uint){returnaddress(this).balance;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 777
column: 4
content: functionhasVoted()returns(bool){returnmapHeirsVoteOwnerHasDied[addressToString(msg.sender)];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 853
column: 4
content: functionBackToLife(){club=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 858
column: 4
content: functioncreateLastWill(address_owner,string_listHeirs,string_listHeirsPercentages,string_listWitnesses,uint256_gasPrice,uint256_gasCost){addressowner=_owner;vars=_listHeirs.toSlice().copy();if(!s.endsWith(";".toSlice())){_listHeirs.toSlice().concat(";".toSlice());}s=_listWitnesses.toSlice().copy();if(!s.endsWith(";".toSlice())){_listWitnesses.toSlice().concat(";".toSlice());}s=_listHeirsPercentages.toSlice().copy();if(!s.endsWith(";".toSlice())){_listHeirsPercentages.toSlice().concat(";".toSlice());}s=_listWitnesses.toSlice().copy();vardelim=";".toSlice();uint256listWitnessLength=s.count(delim)+1;addressmyWillAddress=newMyWill(owner,_listHeirs,_listHeirsPercentages,_listWitnesses,club,_gasPrice,_gasCost);varmyWillAddressString=addressToString(myWillAddress);mapOwnerStringContract[owner]=mapOwnerStringContract[owner].toSlice().concat(myWillAddressString.toSlice()).toSlice().concat(";".toSlice());}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 901
column: 4
content: functiongetContracts(addressowner)returns(string){returnmapOwnerStringContract[owner];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 905
column: 4
content: functionaddressToString(addressx)returns(string){bytesmemorys=newbytes(42);s[0]="0";s[1]="x";for(uinti=0;i<20;i++){byteb=byte(uint8(uint(x)/(2**(8*(19-i)))));bytehi=byte(uint8(b)/16);bytelo=byte(uint8(b)-16*uint8(hi));s[2+2*i]=char(hi);s[2+2*i+1]=char(lo);}returnstring(s);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 919
column: 4
content: functionchar(byteb)returns(bytec){if(b<10)returnbyte(uint8(b)+0x30);elsereturnbyte(uint8(b)+0x57);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 942
column: 4
content: functiongetBalance()constantreturns(uint){returnaddress(this).balance;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 543
column: 4
content: addressclub;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 546
column: 4
content: uint256gasPrice;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 547
column: 4
content: uint256gasCost;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 550
column: 4
content: addressowner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 553
column: 4
content: stringlistWitnesses;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 556
column: 4
content: stringlistHeirs;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 557
column: 4
content: stringlistHeirsPercentages;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 560
column: 4
content: mapping(string=>bool)mapHeirsVoteOwnerHasDied;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 564
column: 4
content: Statusstatus;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 848
column: 4
content: addressclub;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 850
column: 4
content: mapping(address=>string)mapOwnerStringContract;

SOLIDITY_VISIBILITY :29
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :5
SOLIDITY_EXTRA_GAS_IN_LOOPS :6
SOLIDITY_ADDRESS_HARDCODED :31
SOLIDITY_UPGRADE_TO_050 :8
SOLIDITY_GAS_LIMIT_IN_LOOPS :10
SOLIDITY_UNCHECKED_CALL :1
SOLIDITY_SHOULD_NOT_BE_PURE :17
SOLIDITY_DEPRECATED_CONSTRUCTIONS :9
SOLIDITY_VAR :2
SOLIDITY_USING_INLINE_ASSEMBLY :26
SOLIDITY_TRANSFER_IN_LOOP :2
