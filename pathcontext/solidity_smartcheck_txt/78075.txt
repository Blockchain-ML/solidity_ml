F:\Blockchain\dataset_new_byID\78075.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 29
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 47
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 57
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 78
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 96
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 106
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 119
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 137
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 152
column: 30
content: 0x1234

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 28
column: 30
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 77
column: 30
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 118
column: 30
content: 0x0

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 6
column: 0
content: contractAccessControlTest{AccessControlTestMocksubject;CallProxysubjectCallProxy;functionbeforeEach()public{subject=newAccessControlTestMock();subjectCallProxy=newCallProxy(subject);}functiontestIAmCeo()external{Assert.equal(subject.executiveOfficerAddress(),address(this),"CEO should initialize to contract deployer");}functiontestCEOAddress()external{addresszeroAddress=0x0;addresssomeAddress=0x1234;subject.setExecutiveOfficer(subjectCallProxy);AccessControlTestMock(address(subjectCallProxy)).setExecutiveOfficer(zeroAddress);Assert.isFalse(subjectCallProxy.callResult(),"Should net be able to set CEO to zero address");AccessControlTestMock(address(subjectCallProxy)).setExecutiveOfficer(someAddress);Assert.isTrue(subjectCallProxy.callResult(),"CEO should set to a new value");Assert.equal(subject.executiveOfficerAddress(),someAddress,"CEO new value should be correct");}functiontestCEOAccess()external{addresssomeAddress=0x1234;subject.anExecutiveTask();subject.setOperatingOfficer(someAddress);subject.setFinancialOfficer(someAddress);subject.setExecutiveOfficer(someAddress);}functiontestNotCEOAccess()external{addresssomeAddress=0x1234;subject.setExecutiveOfficer(someAddress);AccessControlTestMock(address(subjectCallProxy)).anExecutiveTask();Assert.isFalse(subjectCallProxy.callResult(),"The not CEO should not be able to run an executive task");AccessControlTestMock(address(subjectCallProxy)).setExecutiveOfficer(someAddress);Assert.isFalse(subjectCallProxy.callResult(),"The not CEO should not be able to assign new CEO");AccessControlTestMock(address(subjectCallProxy)).setOperatingOfficer(someAddress);Assert.isFalse(subjectCallProxy.callResult(),"The not CEO should not be able to assign new COO");AccessControlTestMock(address(subjectCallProxy)).setFinancialOfficer(someAddress);Assert.isFalse(subjectCallProxy.callResult(),"The not CEO should not be able to assign new CFO");}functiontestCOOAddress()external{addresszeroAddress=0x0;addresssomeAddress=0x1234;subject.setExecutiveOfficer(subjectCallProxy);AccessControlTestMock(address(subjectCallProxy)).setOperatingOfficer(zeroAddress);Assert.isFalse(subjectCallProxy.callResult(),"Should not be able to set COO to zero address");AccessControlTestMock(address(subjectCallProxy)).setOperatingOfficer(someAddress);Assert.isTrue(subjectCallProxy.callResult(),"Should be able to set COO to some address");Assert.equal(subject.operatingOfficerAddress(),someAddress,"COO should set to a new value");}functiontestCOOAccess()external{addresssomeAddress=0x1234;subject.setOperatingOfficer(address(this));subject.setExecutiveOfficer(someAddress);subject.anOperatingTask();}functiontestNotCOOAccess()external{addresssomeAddress=0x1234;subject.setExecutiveOfficer(someAddress);AccessControlTestMock(address(subjectCallProxy)).anOperatingTask();Assert.isFalse(subjectCallProxy.callResult(),"The not COO should not be able to run an operating task");}functiontestCFOAddress()external{addresszeroAddress=0x0;addresssomeAddress=0x1234;subject.setExecutiveOfficer(subjectCallProxy);AccessControlTestMock(address(subjectCallProxy)).setFinancialOfficer(zeroAddress);Assert.isFalse(subjectCallProxy.callResult(),"Should not be able to set CFO to zero address");AccessControlTestMock(address(subjectCallProxy)).setFinancialOfficer(someAddress);Assert.isTrue(subjectCallProxy.callResult(),"Should be able to set CFO to some address");Assert.equal(subject.financialOfficerAddress(),someAddress,"CFO should set to a new value");}functiontestCFOAccess()external{addresssomeAddress=0x1234;subject.setFinancialOfficer(address(this));subject.setExecutiveOfficer(someAddress);subject.aFinancialTask();subject.withdrawBalance();}function()externalpayable{}functiontestNotCFOAccess()external{addresssomeAddress=0x1234;subject.setFinancialOfficer(someAddress);AccessControlTestMock(address(subjectCallProxy)).aFinancialTask();Assert.isFalse(subjectCallProxy.callResult(),"The not CFO should not be able to run a financial task");AccessControlTestMock(address(subjectCallProxy)).withdrawBalance();Assert.isFalse(subjectCallProxy.callResult(),"The not CFO should not be able to run a financial task");}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 7
column: 4
content: AccessControlTestMocksubject;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 8
column: 4
content: CallProxysubjectCallProxy;

SOLIDITY_VISIBILITY :2
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ADDRESS_HARDCODED :12
