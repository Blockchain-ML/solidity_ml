F:\Blockchain\dataset_new_byID\78507.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 12
column: 4
content: functioninit(buffermemorybuf,uintcapacity)internalpurereturns(buffermemory){if(capacity%32!=0){capacity+=32-(capacity%32);}buf.capacity=capacity;assembly{letptr:=mload(0x40)mstore(buf,ptr)mstore(ptr,0)mstore(0x40,add(32,add(ptr,capacity)))}returnbuf;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 49
column: 4
content: functiontruncate(buffermemorybuf)internalpurereturns(buffermemory){assembly{letbufptr:=mload(buf)mstore(bufptr,0)}returnbuf;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 58
column: 4
content: functionwrite(buffermemorybuf,uintoff,bytesmemorydata,uintlen)internalpurereturns(buffermemory){require(len<=data.length);if(off+len>buf.capacity){resize(buf,max(buf.capacity,len+off)*2);}uintdest;uintsrc;assembly{letbufptr:=mload(buf)letbuflen:=mload(bufptr)dest:=add(add(bufptr,32),off)ifgt(add(len,off),buflen){mstore(bufptr,add(len,off))}src:=add(data,32)}for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}returnbuf;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 112
column: 4
content: functionwriteUint8(buffermemorybuf,uintoff,uint8data)internalpurereturns(buffermemory){if(off>=buf.capacity){resize(buf,buf.capacity*2);}assembly{letbufptr:=mload(buf)letbuflen:=mload(bufptr)letdest:=add(add(bufptr,off),32)mstore8(dest,data)ifeq(off,buflen){mstore(bufptr,add(buflen,1))}}returnbuf;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 139
column: 4
content: functionwrite(buffermemorybuf,uintoff,bytes32data,uintlen)privatepurereturns(buffermemory){if(len+off>buf.capacity){resize(buf,(len+off)*2);}uintmask=256**len-1;data=data>>(8*(32-len));assembly{letbufptr:=mload(buf)letdest:=add(add(bufptr,off),len)mstore(dest,or(and(mload(dest),not(mask)),data))ifgt(add(off,len),mload(bufptr)){mstore(bufptr,add(off,len))}}returnbuf;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 177
column: 4
content: functionwriteInt(buffermemorybuf,uintoff,uintdata,uintlen)privatepurereturns(buffermemory){if(len+off>buf.capacity){resize(buf,(len+off)*2);}uintmask=256**len-1;assembly{letbufptr:=mload(buf)letdest:=add(add(bufptr,off),len)mstore(dest,or(and(mload(dest),not(mask)),data))ifgt(add(off,len),mload(bufptr)){mstore(bufptr,add(off,len))}}returnbuf;}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 18
column: 8
content: assembly{letptr:=mload(0x40)mstore(buf,ptr)mstore(ptr,0)mstore(0x40,add(32,add(ptr,capacity)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 50
column: 8
content: assembly{letbufptr:=mload(buf)mstore(bufptr,0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 67
column: 8
content: assembly{letbufptr:=mload(buf)letbuflen:=mload(bufptr)dest:=add(add(bufptr,32),off)ifgt(add(len,off),buflen){mstore(bufptr,add(len,off))}src:=add(data,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 83
column: 12
content: assembly{mstore(dest,mload(src))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 92
column: 8
content: assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 117
column: 8
content: assembly{letbufptr:=mload(buf)letbuflen:=mload(bufptr)letdest:=add(add(bufptr,off),32)mstore8(dest,data)ifeq(off,buflen){mstore(bufptr,add(buflen,1))}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 147
column: 8
content: assembly{letbufptr:=mload(buf)letdest:=add(add(bufptr,off),len)mstore(dest,or(and(mload(dest),not(mask)),data))ifgt(add(off,len),mload(bufptr)){mstore(bufptr,add(off,len))}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 183
column: 8
content: assembly{letbufptr:=mload(buf)letdest:=add(add(bufptr,off),len)mstore(dest,or(and(mload(dest),not(mask)),data))ifgt(add(off,len),mload(bufptr)){mstore(bufptr,add(off,len))}}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_USING_INLINE_ASSEMBLY :8
SOLIDITY_SHOULD_NOT_BE_PURE :6
