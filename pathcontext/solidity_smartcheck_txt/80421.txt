F:\Blockchain\dataset_new_byID\80421.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 712
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 715
column: 15
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 751
column: 11
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 12
column: 12
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 42
column: 12
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 765
column: 10
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1068
column: 8
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1095
column: 8
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1099
column: 8
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1147
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1148
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1149
column: 44
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1175
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1176
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1236
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1237
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1238
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 1239
column: 45
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 10
column: 4
content: functioninvmod(uinta,uintp)internalconstantreturns(uint){if(a==0||a==p||p==0)throw;if(a>p)a=a%p;intt1;intt2=1;uintr1=p;uintr2=a;uintq;while(r2!=0){q=r1/r2;(t1,t2,r1,r2)=(t2,t1-int(q)*t2,r2,r1-q*r2);}if(t1<0)return(p-uint(-t1));returnuint(t1);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 36
column: 4
content: functionexpmod(uintb,uinte,uintm)internalconstantreturns(uintr){if(b==0)return0;if(e==0)return1;if(m==0)throw;r=1;uintbit=2**255;bit=bit;assembly{loop:jumpi(end,iszero(bit))r:=mulmod(mulmod(r,r,m),exp(b,iszero(iszero(and(e,bit)))),m)r:=mulmod(mulmod(r,r,m),exp(b,iszero(iszero(and(e,div(bit,2))))),m)r:=mulmod(mulmod(r,r,m),exp(b,iszero(iszero(and(e,div(bit,4))))),m)r:=mulmod(mulmod(r,r,m),exp(b,iszero(iszero(and(e,div(bit,8))))),m)bit:=div(bit,16)jump(loop)end:}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 66
column: 4
content: functiontoZ1(uint[3]memoryP,uintzInv,uintz2Inv,uintprime)internalconstant{P[0]=mulmod(P[0],z2Inv,prime);P[1]=mulmod(P[1],mulmod(zInv,z2Inv,prime),prime);P[2]=1;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 77
column: 4
content: functiontoZ1(uint[3]PJ,uintprime)internalconstant{uintzInv=invmod(PJ[2],prime);uintzInv2=mulmod(zInv,zInv,prime);PJ[0]=mulmod(PJ[0],zInv2,prime);PJ[1]=mulmod(PJ[1],mulmod(zInv,zInv2,prime),prime);PJ[2]=1;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 112
column: 4
content: functiononCurve(uint[2]P)internalconstantreturns(bool){uintp=pp;if(0==P[0]||P[0]==p||0==P[1]||P[1]==p)returnfalse;uintLHS=mulmod(P[1],P[1],p);uintRHS=addmod(mulmod(mulmod(P[0],P[0],p),P[0],p),7,p);returnLHS==RHS;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 122
column: 4
content: functionisPubKey(uint[2]memoryP)internalconstantreturns(boolisPK){isPK=onCurve(P);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 128
column: 4
content: functionisPubKey(uint[3]memoryP)internalconstantreturns(boolisPK){uint[2]memorya_P;a_P[0]=P[0];a_P[1]=P[1];isPK=onCurve(a_P);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 136
column: 4
content: functionvalidateSignature(bytes32message,uint[2]rs,uint[2]Q)internalconstantreturns(bool){uintn=nn;uintp=pp;if(rs[0]==0||rs[0]>=n||rs[1]==0||rs[1]>lowSmax)returnfalse;if(!isPubKey(Q))returnfalse;uintsInv=ECCMath_noconflict.invmod(rs[1],n);uint[3]memoryu1G=_mul(mulmod(uint(message),sInv,n),[Gx,Gy]);uint[3]memoryu2Q=_mul(mulmod(rs[0],sInv,n),Q);uint[3]memoryP=_add(u1G,u2Q);if(P[2]==0)returnfalse;uintPx=ECCMath_noconflict.invmod(P[2],p);Px=mulmod(P[0],mulmod(Px,Px,p),p);returnPx%n==rs[0];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 158
column: 4
content: functioncompress(uint[2]P)internalconstantreturns(uint8yBit,uintx){x=P[0];yBit=P[1]&1==1?1:0;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 164
column: 4
content: functiondecompress(uint8yBit,uintx)internalconstantreturns(uint[2]P){uintp=pp;vary2=addmod(mulmod(x,mulmod(x,x,p),p),7,p);vary_=ECCMath_noconflict.expmod(y2,(p+1)/4,p);uintcmp=yBit^y_&1;P[0]=x;P[1]=(cmp==0)?y_:p-y_;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 176
column: 4
content: function_add(uint[3]memoryP,uint[3]memoryQ)internalconstantreturns(uint[3]memoryR){if(P[2]==0)returnQ;if(Q[2]==0)returnP;uintp=pp;uint[4]memoryzs;zs[0]=mulmod(P[2],P[2],p);zs[1]=mulmod(P[2],zs[0],p);zs[2]=mulmod(Q[2],Q[2],p);zs[3]=mulmod(Q[2],zs[2],p);uint[4]memoryus=[mulmod(P[0],zs[2],p),mulmod(P[1],zs[3],p),mulmod(Q[0],zs[0],p),mulmod(Q[1],zs[1],p)];if(us[0]==us[2]){if(us[1]!=us[3])return;else{return_double(P);}}uinth=addmod(us[2],p-us[0],p);uintr=addmod(us[3],p-us[1],p);uinth2=mulmod(h,h,p);uinth3=mulmod(h2,h,p);uintRx=addmod(mulmod(r,r,p),p-h3,p);Rx=addmod(Rx,p-mulmod(2,mulmod(us[0],h2,p),p),p);R[0]=Rx;R[1]=mulmod(r,addmod(mulmod(us[0],h2,p),p-Rx,p),p);R[1]=addmod(R[1],p-mulmod(us[1],h3,p),p);R[2]=mulmod(h,mulmod(P[2],Q[2],p),p);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 215
column: 4
content: function_addMixed(uint[3]memoryP,uint[2]memoryQ)internalconstantreturns(uint[3]memoryR){if(P[2]==0)return[Q[0],Q[1],1];if(Q[1]==0)returnP;uintp=pp;uint[2]memoryzs;zs[0]=mulmod(P[2],P[2],p);zs[1]=mulmod(P[2],zs[0],p);uint[4]memoryus=[P[0],P[1],mulmod(Q[0],zs[0],p),mulmod(Q[1],zs[1],p)];if(us[0]==us[2]){if(us[1]!=us[3]){P[0]=0;P[1]=0;P[2]=0;return;}else{_double(P);return;}}uinth=addmod(us[2],p-us[0],p);uintr=addmod(us[3],p-us[1],p);uinth2=mulmod(h,h,p);uinth3=mulmod(h2,h,p);uintRx=addmod(mulmod(r,r,p),p-h3,p);Rx=addmod(Rx,p-mulmod(2,mulmod(us[0],h2,p),p),p);R[0]=Rx;R[1]=mulmod(r,addmod(mulmod(us[0],h2,p),p-Rx,p),p);R[1]=addmod(R[1],p-mulmod(us[1],h3,p),p);R[2]=mulmod(h,P[2],p);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 255
column: 4
content: function_addMixedM(uint[3]memoryP,uint[2]memoryQ)internalconstant{if(P[1]==0){P[0]=Q[0];P[1]=Q[1];P[2]=1;return;}if(Q[1]==0)return;uintp=pp;uint[2]memoryzs;zs[0]=mulmod(P[2],P[2],p);zs[1]=mulmod(P[2],zs[0],p);uint[4]memoryus=[P[0],P[1],mulmod(Q[0],zs[0],p),mulmod(Q[1],zs[1],p)];if(us[0]==us[2]){if(us[1]!=us[3]){P[0]=0;P[1]=0;P[2]=0;return;}else{_doubleM(P);return;}}uinth=addmod(us[2],p-us[0],p);uintr=addmod(us[3],p-us[1],p);uinth2=mulmod(h,h,p);uinth3=mulmod(h2,h,p);uintRx=addmod(mulmod(r,r,p),p-h3,p);Rx=addmod(Rx,p-mulmod(2,mulmod(us[0],h2,p),p),p);P[0]=Rx;P[1]=mulmod(r,addmod(mulmod(us[0],h2,p),p-Rx,p),p);P[1]=addmod(P[1],p-mulmod(us[1],h3,p),p);P[2]=mulmod(h,P[2],p);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 301
column: 4
content: function_double(uint[3]memoryP)internalconstantreturns(uint[3]memoryQ){uintp=pp;if(P[2]==0)return;uintPx=P[0];uintPy=P[1];uintPy2=mulmod(Py,Py,p);uints=mulmod(4,mulmod(Px,Py2,p),p);uintm=mulmod(3,mulmod(Px,Px,p),p);varQx=addmod(mulmod(m,m,p),p-addmod(s,s,p),p);Q[0]=Qx;Q[1]=addmod(mulmod(m,addmod(s,p-Qx,p),p),p-mulmod(8,mulmod(Py2,Py2,p),p),p);Q[2]=mulmod(2,mulmod(Py,P[2],p),p);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 317
column: 4
content: function_doubleM(uint[3]memoryP)internalconstant{uintp=pp;if(P[2]==0)return;uintPx=P[0];uintPy=P[1];uintPy2=mulmod(Py,Py,p);uints=mulmod(4,mulmod(Px,Py2,p),p);uintm=mulmod(3,mulmod(Px,Px,p),p);varPxTemp=addmod(mulmod(m,m,p),p-addmod(s,s,p),p);P[0]=PxTemp;P[1]=addmod(mulmod(m,addmod(s,p-PxTemp,p),p),p-mulmod(8,mulmod(Py2,Py2,p),p),p);P[2]=mulmod(2,mulmod(Py,P[2],p),p);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 335
column: 4
content: function_mul(uintd,uint[2]memoryP)internalconstantreturns(uint[3]memoryQ){uintp=pp;if(d==0)return;uintdwPtr;uinti;assembly{letdm:=0dwPtr:=mload(0x40)mstore(0x40,add(dwPtr,512))loop:jumpi(loop_end,iszero(d))jumpi(even,iszero(and(d,1)))dm:=mod(d,32)mstore8(add(dwPtr,i),dm)d:=add(sub(d,dm),mul(gt(dm,16),32))even:d:=div(d,2)i:=add(i,1)jump(loop)loop_end:}dwPtr=dwPtr;uint[3][8]memoryPREC;PREC[0]=[P[0],P[1],1];varX=_double(PREC[0]);PREC[1]=_addMixed(X,P);PREC[2]=_add(X,PREC[1]);PREC[3]=_add(X,PREC[2]);PREC[4]=_add(X,PREC[3]);PREC[5]=_add(X,PREC[4]);PREC[6]=_add(X,PREC[5]);PREC[7]=_add(X,PREC[6]);uint[16]memoryINV;INV[0]=PREC[1][2];INV[1]=mulmod(PREC[2][2],INV[0],p);INV[2]=mulmod(PREC[3][2],INV[1],p);INV[3]=mulmod(PREC[4][2],INV[2],p);INV[4]=mulmod(PREC[5][2],INV[3],p);INV[5]=mulmod(PREC[6][2],INV[4],p);INV[6]=mulmod(PREC[7][2],INV[5],p);INV[7]=ECCMath_noconflict.invmod(INV[6],p);INV[8]=INV[7];INV[15]=mulmod(INV[5],INV[8],p);for(uintk=6;k>=2;k--){INV[8]=mulmod(PREC[k+1][2],INV[8],p);INV[8+k]=mulmod(INV[k-2],INV[8],p);}INV[9]=mulmod(PREC[2][2],INV[8],p);for(k=0;k<7;k++){ECCMath_noconflict.toZ1(PREC[k+1],INV[k+9],mulmod(INV[k+9],INV[k+9],p),p);}while(i>0){uintdj;uintpIdx;i--;assembly{dj:=byte(0,mload(add(dwPtr,i)))}_doubleM(Q);if(dj>16){pIdx=(31-dj)/2;_addMixedM(Q,[PREC[pIdx][0],p-PREC[pIdx][1]]);}elseif(dj>0){pIdx=(dj-1)/2;_addMixedM(Q,[PREC[pIdx][0],PREC[pIdx][1]]);}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 523
column: 4
content: for(uintformula=0;formula<points.length;formula++){uintnumerator=1;uintdenominator=1;for(uintcount=0;count<points.length;count++){if(formula!=count){uintstartpos=pos[formula];uintnextpos=pos[count];numerator=mulmod(numerator,nextpos,prime);denominator=mulmod(denominator,submod(startpos,nextpos,prime),prime);}}uintndd=mulmod(numerator,ECCMath_noconflict.invmod(denominator,prime),prime);if(formula==0){accum=Secp256k1_noconflict._mul(ndd,points[formula].points);}else{accum=Secp256k1_noconflict._add(accum,Secp256k1_noconflict._mul(ndd,points[formula].points));}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 529
column: 6
content: for(uintcount=0;count<points.length;count++){if(formula!=count){uintstartpos=pos[formula];uintnextpos=pos[count];numerator=mulmod(numerator,nextpos,prime);denominator=mulmod(denominator,submod(startpos,nextpos,prime),prime);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 610
column: 4
content: for(uinti=0;i<coef.length;i++){coef[i]=addmod(uint(sha256(i,r)),1,nn);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 615
column: 4
content: for(i=1;i<=n;i++){uintv=1;for(uintj=1;j<=n;j++){if(i!=j){if(v==1){v=mulmod(1,ECCMath_noconflict.invmod(submod(i,j,nn),nn),nn);}else{v=mulmod(v,mulmod(1,ECCMath_noconflict.invmod(submod(i,j,nn),nn),nn),nn);}}}uintaccum=coef[0];for(j=1;j<coef.length;j++){uintcoef_xexp=mulmod(coef[j-1],ECCMath_noconflict.expmod(i,j,nn),nn);accum=addmod(accum,coef_xexp,nn);}uintcode=mulmod(v,accum,nn);uint[2]commitment=commitments[i-1];if(i==1){res=Secp256k1_noconflict._mul(code,commitment);}else{res=Secp256k1_noconflict._add(res,Secp256k1_noconflict._mul(code,commitment));}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 620
column: 6
content: for(uintj=1;j<=n;j++){if(i!=j){if(v==1){v=mulmod(1,ECCMath_noconflict.invmod(submod(i,j,nn),nn),nn);}else{v=mulmod(v,mulmod(1,ECCMath_noconflict.invmod(submod(i,j,nn),nn),nn),nn);}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 637
column: 6
content: for(j=1;j<coef.length;j++){uintcoef_xexp=mulmod(coef[j-1],ECCMath_noconflict.expmod(i,j,nn),nn);accum=addmod(accum,coef_xexp,nn);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 732
column: 6
content: for(uintexp=1;exp<coef.length;exp++){uintxexp=ECCMath_noconflict.expmod(x,exp,prime);uintcoef_xexp=mulmod(coef[exp],xexp,prime);accum=addmod(accum,coef_xexp,prime);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 523
column: 4
content: for(uintformula=0;formula<points.length;formula++){uintnumerator=1;uintdenominator=1;for(uintcount=0;count<points.length;count++){if(formula!=count){uintstartpos=pos[formula];uintnextpos=pos[count];numerator=mulmod(numerator,nextpos,prime);denominator=mulmod(denominator,submod(startpos,nextpos,prime),prime);}}uintndd=mulmod(numerator,ECCMath_noconflict.invmod(denominator,prime),prime);if(formula==0){accum=Secp256k1_noconflict._mul(ndd,points[formula].points);}else{accum=Secp256k1_noconflict._add(accum,Secp256k1_noconflict._mul(ndd,points[formula].points));}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 529
column: 6
content: for(uintcount=0;count<points.length;count++){if(formula!=count){uintstartpos=pos[formula];uintnextpos=pos[count];numerator=mulmod(numerator,nextpos,prime);denominator=mulmod(denominator,submod(startpos,nextpos,prime),prime);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 610
column: 4
content: for(uinti=0;i<coef.length;i++){coef[i]=addmod(uint(sha256(i,r)),1,nn);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 11
column: 8
content: if(a==0||a==p||p==0)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 41
column: 8
content: if(m==0)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 764
column: 6
content: if(!Secp256k1_noconflict.isPubKey(xG)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1067
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c_affine)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1094
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c1)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1098
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c2)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1147
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c1)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1148
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c2)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1149
column: 4
content: if(!Secp256k1_noconflict.isPubKey(t)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1175
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c1)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1176
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c2)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1236
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c1)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1237
column: 4
content: if(!Secp256k1_noconflict.isPubKey(c2)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1238
column: 4
content: if(!Secp256k1_noconflict.isPubKey(t1)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1239
column: 4
content: if(!Secp256k1_noconflict.isPubKey(t2)){throw;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 158
column: 59
content: (uint8yBit,uintx)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 46
column: 8
content: assembly{loop:jumpi(end,iszero(bit))r:=mulmod(mulmod(r,r,m),exp(b,iszero(iszero(and(e,bit)))),m)r:=mulmod(mulmod(r,r,m),exp(b,iszero(iszero(and(e,div(bit,2))))),m)r:=mulmod(mulmod(r,r,m),exp(b,iszero(iszero(and(e,div(bit,4))))),m)r:=mulmod(mulmod(r,r,m),exp(b,iszero(iszero(and(e,div(bit,8))))),m)bit:=div(bit,16)jump(loop)end:}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 343
column: 8
content: assembly{letdm:=0dwPtr:=mload(0x40)mstore(0x40,add(dwPtr,512))loop:jumpi(loop_end,iszero(d))jumpi(even,iszero(and(d,1)))dm:=mod(d,32)mstore8(add(dwPtr,i),dm)d:=add(sub(d,dm),mul(gt(dm,16),32))even:d:=div(d,2)i:=add(i,1)jump(loop)loop_end:}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 402
column: 12
content: assembly{dj:=byte(0,mload(add(dwPtr,i)))}

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 166
column: 8
content: vary2=addmod(mulmod(x,mulmod(x,x,p),p),7,p)

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 167
column: 8
content: vary_=ECCMath_noconflict.expmod(y2,(p+1)/4,p)

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 366
column: 8
content: varX=_double(PREC[0])

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 450
column: 2
content: functionLocalCrypto(){G[0]=Gx;G[1]=Gy;Y[0]=Yx;Y[1]=Yy;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 459
column: 2
content: functionsubmod(uinta,uintb,uintprime)returns(uint){uinta_nn;if(a>b){a_nn=a;}else{a_nn=a+prime;}uintc=addmod(a_nn-b,0,prime);returnc;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 474
column: 2
content: functioncreatePubKeyWithY(uintr)returns(uint[2]key){uint[3]memoryjacob_key=Secp256k1_noconflict._mul(r,Y);ECCMath_noconflict.toZ1(jacob_key,pp);key[0]=jacob_key[0];key[1]=jacob_key[1];returnkey;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 484
column: 2
content: functionmul(uintr,uint[2]gen)returns(uint[2]res){uint[3]memorytemp=Secp256k1_noconflict._mul(r,gen);ECCMath_noconflict.toZ1(temp,pp);res[0]=temp[0];res[1]=temp[1];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 492
column: 2
content: functionmulG(uintr)returns(uint[2]res){uint[3]memorytemp=Secp256k1_noconflict._mul(r,G);ECCMath_noconflict.toZ1(temp,pp);res[0]=temp[0];res[1]=temp[1];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 499
column: 2
content: functionmulY(uintr)returns(uint[2]res){uint[3]memorytemp=Secp256k1_noconflict._mul(r,Y);ECCMath_noconflict.toZ1(temp,pp);res[0]=temp[0];res[1]=temp[1];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 506
column: 2
content: functiongetG()returns(uint[2]){returnG;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 510
column: 2
content: functiongetY()returns(uint[2]){returnY;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 515
column: 2
content: functionjoinShares(uint[2]share1,uint[2]share2,uint[2]share3,uint[3]pos)returns(uint[3]accum){uintprime=nn;ECPoint[]memorypoints=newECPoint[](3);points[0]=ECPoint(share1);points[1]=ECPoint(share2);points[2]=ECPoint(share3);for(uintformula=0;formula<points.length;formula++){uintnumerator=1;uintdenominator=1;for(uintcount=0;count<points.length;count++){if(formula!=count){uintstartpos=pos[formula];uintnextpos=pos[count];numerator=mulmod(numerator,nextpos,prime);denominator=mulmod(denominator,submod(startpos,nextpos,prime),prime);}}uintndd=mulmod(numerator,ECCMath_noconflict.invmod(denominator,prime),prime);if(formula==0){accum=Secp256k1_noconflict._mul(ndd,points[formula].points);}else{accum=Secp256k1_noconflict._add(accum,Secp256k1_noconflict._mul(ndd,points[formula].points));}}ECCMath_noconflict.toZ1(accum,pp);returnaccum;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 559
column: 2
content: functioncreateDiscreteLogEqualityGivenE(uintw,uinta,uint[2]gen1,uint[2]gen2,uinte)returns(uint[2]a1,uint[2]a2,uintz){uint[3]memoryj_a1=Secp256k1_noconflict._mul(w,gen1);uint[3]memoryj_a2=Secp256k1_noconflict._mul(w,gen2);ECCMath_noconflict.toZ1(j_a1,pp);ECCMath_noconflict.toZ1(j_a2,pp);a1[0]=j_a1[0];a1[1]=j_a1[1];a2[0]=j_a2[0];a2[1]=j_a2[1];z=submod(w,mulmod(a,e,nn));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 575
column: 2
content: functioncreateDiscreteLogEqualityWithoutEZ(uintw,uint[2]gen1,uint[2]gen2)returns(uint[2]a1,uint[2]a2){uint[3]memoryj_a1=Secp256k1_noconflict._mul(w,gen1);uint[3]memoryj_a2=Secp256k1_noconflict._mul(w,gen2);ECCMath_noconflict.toZ1(j_a1,pp);ECCMath_noconflict.toZ1(j_a2,pp);a1[0]=j_a1[0];a1[1]=j_a1[1];a2[0]=j_a2[0];a2[1]=j_a2[1];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 594
column: 2
content: functionstoreCommitmentTESTING(uintid,uint[2]commitment){commitments[id]=commitment;n=n+1;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 603
column: 2
content: functionvalidateCommitments(uintr,uintt)returns(bool){uint[3]memoryres;uint[]memorycoef=newuint[](n-t-1);for(uinti=0;i<coef.length;i++){coef[i]=addmod(uint(sha256(i,r)),1,nn);}for(i=1;i<=n;i++){uintv=1;for(uintj=1;j<=n;j++){if(i!=j){if(v==1){v=mulmod(1,ECCMath_noconflict.invmod(submod(i,j,nn),nn),nn);}else{v=mulmod(v,mulmod(1,ECCMath_noconflict.invmod(submod(i,j,nn),nn),nn),nn);}}}uintaccum=coef[0];for(j=1;j<coef.length;j++){uintcoef_xexp=mulmod(coef[j-1],ECCMath_noconflict.expmod(i,j,nn),nn);accum=addmod(accum,coef_xexp,nn);}uintcode=mulmod(v,accum,nn);uint[2]commitment=commitments[i-1];if(i==1){res=Secp256k1_noconflict._mul(code,commitment);}else{res=Secp256k1_noconflict._add(res,Secp256k1_noconflict._mul(code,commitment));}}if(res[0]==0&&res[1]==0){returntrue;}else{returnfalse;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 664
column: 2
content: functioncreateDiscreteLogEquality(uintw,uinta,uint[2]gen1,uint[2]gen2,uint[2]c1,uint[2]c2)returns(uint[2]a1,uint[2]a2,uintz){uint[3]memoryj_a1=Secp256k1_noconflict._mul(w,gen1);uint[3]memoryj_a2=Secp256k1_noconflict._mul(w,gen2);ECCMath_noconflict.toZ1(j_a1,pp);ECCMath_noconflict.toZ1(j_a2,pp);a1[0]=j_a1[0];a1[1]=j_a1[1];a2[0]=j_a2[0];a2[1]=j_a2[1];uinte=uint(sha256(msg.sender,a1,a2,gen1,gen2,c1,c2));z=submod(w,mulmod(a,e,nn));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 682
column: 2
content: functionverifyDiscreteLogEquality(uintz,uint[2]gen1,uint[2]gen2,uint[2]c1,uint[2]c2,uint[2]a1,uint[2]a2)returns(bool){uinte=uint(sha256(msg.sender,a1,a2,gen1,gen2,c1,c2));uint[3]memorytemp=Secp256k1_noconflict._mul(z,gen1);uint[3]memorytemp2=Secp256k1_noconflict._mul(e,c1);uint[3]memoryzGeX=Secp256k1_noconflict._add(temp,temp2);ECCMath_noconflict.toZ1(zGeX,pp);if(a1[0]!=zGeX[0]||a1[1]!=zGeX[1]){returnfalse;}temp=Secp256k1_noconflict._mul(z,gen2);temp2=Secp256k1_noconflict._mul(e,c2);uint[3]memoryzHeY=Secp256k1_noconflict._add(temp,temp2);ECCMath_noconflict.toZ1(zHeY,pp);if(a2[0]!=zHeY[0]||a2[1]!=zHeY[1]){returnfalse;}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 711
column: 2
content: functionhashchain(uintpreimage,uintindex)returns(uint){uinth=uint(sha3(preimage));for(uinti=0;i<index;i++){h=uint(sha3(h));}returnh;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 723
column: 2
content: functioncreateShares(uint[]coef,uintavailable)returns(uint[6]shares){uintprime=nn;for(uintx=1;x<=available;x++){uintaccum=coef[0];for(uintexp=1;exp<coef.length;exp++){uintxexp=ECCMath_noconflict.expmod(x,exp,prime);uintcoef_xexp=mulmod(coef[exp],xexp,prime);accum=addmod(accum,coef_xexp,prime);}shares[x-1]=accum;}returnshares;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 745
column: 2
content: functiongetMsgSender()returns(address){returnmsg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 750
column: 2
content: functioncommitToVote(uint[4]params,uint[2]xG,uint[2]yG,uint[2]y,uint[2]a1,uint[2]b1,uint[2]a2,uint[2]b2)returns(bytes32){returnsha3(msg.sender,params,xG,yG,y,a1,b1,a2,b2);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 758
column: 2
content: functioncreateZKP(uintx,uintv,uint[2]xG)returns(uint[4]res){uint[2]memoryG;G[0]=Gx;G[1]=Gy;if(!Secp256k1_noconflict.isPubKey(xG)){throw;}uint[3]memoryvG=Secp256k1_noconflict._mul(v,G);ECCMath_noconflict.toZ1(vG,pp);bytes32b_c=sha256(msg.sender,Gx,Gy,xG,vG);uintc=uint(b_c);uintxc=mulmod(x,c,nn);uintr=submod(v,xc);res[0]=r;res[1]=vG[0];res[2]=vG[1];res[3]=vG[2];return;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 792
column: 2
content: functionsubmod(uinta,uintb)returns(uint){uinta_nn;if(a>b){a_nn=a;}else{a_nn=a+nn;}uintc=addmod(a_nn-b,0,nn);returnc;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 808
column: 2
content: functionverifyZKP(uint[2]xG,uintr,uint[3]vG)returns(bool){uint[2]memoryG;G[0]=Gx;G[1]=Gy;if(!Secp256k1_noconflict.isPubKey(xG)||!Secp256k1_noconflict.isPubKey(vG)){returnfalse;}bytes32b_c=sha256(msg.sender,Gx,Gy,xG,vG);uintc=uint(b_c);uint[3]memoryrG=Secp256k1_noconflict._mul(r,G);uint[3]memoryxcG=Secp256k1_noconflict._mul(c,xG);uint[3]memoryrGxcG=Secp256k1_noconflict._add(rG,xcG);ECCMath_noconflict.toZ1(rGxcG,pp);if(rGxcG[0]==vG[0]&&rGxcG[1]==vG[1]){returntrue;}else{returnfalse;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 841
column: 2
content: functioncreate1outof2ZKPNoVote(uint[2]xG,uint[2]yG,uintw,uintr2,uintd2,uintx)returns(uint[10]res,uint[4]res2){uint[2]memorytemp_affine1;uint[2]memorytemp_affine2;uint[3]memorytemp1=Secp256k1_noconflict._mul(x,yG);ECCMath_noconflict.toZ1(temp1,pp);res[0]=temp1[0];res[1]=temp1[1];temp1=Secp256k1_noconflict._mul(w,G);ECCMath_noconflict.toZ1(temp1,pp);res[2]=temp1[0];res[3]=temp1[1];temp1=Secp256k1_noconflict._mul(w,yG);ECCMath_noconflict.toZ1(temp1,pp);res[4]=temp1[0];res[5]=temp1[1];temp1=Secp256k1_noconflict._mul(r2,G);temp1=Secp256k1_noconflict._add(temp1,Secp256k1_noconflict._mul(d2,xG));ECCMath_noconflict.toZ1(temp1,pp);res[6]=temp1[0];res[7]=temp1[1];temp_affine1[0]=G[0];temp_affine1[1]=pp-G[1];temp_affine2[0]=res[0];temp_affine2[1]=res[1];temp1=Secp256k1_noconflict._add(Secp256k1_noconflict._mul(d2,temp_affine2),Secp256k1_noconflict._mul(d2,temp_affine1));temp1=Secp256k1_noconflict._add(Secp256k1_noconflict._mul(r2,yG),temp1);ECCMath_noconflict.toZ1(temp1,pp);res[8]=temp1[0];res[9]=temp1[1];bytes32b_c=sha256(msg.sender,xG,res);temp1[0]=submod(uint(b_c),d2);temp1[1]=submod(w,mulmod(x,temp1[0],nn));res2[0]=temp1[0];res2[1]=d2;res2[2]=temp1[1];res2[3]=r2;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 914
column: 2
content: functioncreate1outof2ZKPYesVote(uint[2]xG,uint[2]yG,uintw,uintr1,uintd1,uintx)returns(uint[10]res,uint[4]res2){uint[3]memorytemp1=Secp256k1_noconflict._mul(x,yG);Secp256k1_noconflict._addMixedM(temp1,G);ECCMath_noconflict.toZ1(temp1,pp);res[0]=temp1[0];res[1]=temp1[1];temp1=Secp256k1_noconflict._mul(r1,G);temp1=Secp256k1_noconflict._add(temp1,Secp256k1_noconflict._mul(d1,xG));ECCMath_noconflict.toZ1(temp1,pp);res[2]=temp1[0];res[3]=temp1[1];temp1=Secp256k1_noconflict._mul(r1,yG);uint[2]memorytemp;temp[0]=res[0];temp[1]=res[1];temp1=Secp256k1_noconflict._add(temp1,Secp256k1_noconflict._mul(d1,temp));ECCMath_noconflict.toZ1(temp1,pp);res[4]=temp1[0];res[5]=temp1[1];temp1=Secp256k1_noconflict._mul(w,G);ECCMath_noconflict.toZ1(temp1,pp);res[6]=temp1[0];res[7]=temp1[1];temp1=Secp256k1_noconflict._mul(w,yG);ECCMath_noconflict.toZ1(temp1,pp);res[8]=temp1[0];res[9]=temp1[1];bytes32b_c=sha256(msg.sender,xG,res);uintc=uint(b_c);temp[0]=submod(c,d1);temp[1]=submod(w,mulmod(x,temp[0],nn));res2[0]=d1;res2[1]=temp[0];res2[2]=r1;res2[3]=temp[1];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 974
column: 2
content: functionverify1outof2ZKP(uint[4]params,uint[2]xG,uint[2]yG,uint[2]y,uint[2]a1,uint[2]b1,uint[2]a2,uint[2]b2)returns(bool){uint[2]memorytemp1;uint[3]memorytemp2;uint[3]memorytemp3;if(!Secp256k1_noconflict.isPubKey(xG)||!Secp256k1_noconflict.isPubKey(yG)||!Secp256k1_noconflict.isPubKey(y)||!Secp256k1_noconflict.isPubKey(a1)||!Secp256k1_noconflict.isPubKey(b1)||!Secp256k1_noconflict.isPubKey(a2)||!Secp256k1_noconflict.isPubKey(b2)){returnfalse;}if(uint(sha256(msg.sender,xG,y,a1,b1,a2,b2))!=addmod(params[0],params[1],nn)){returnfalse;}temp2=Secp256k1_noconflict._mul(params[2],G);temp3=Secp256k1_noconflict._add(temp2,Secp256k1_noconflict._mul(params[0],xG));ECCMath_noconflict.toZ1(temp3,pp);if(a1[0]!=temp3[0]||a1[1]!=temp3[1]){returnfalse;}temp2=Secp256k1_noconflict._mul(params[2],yG);temp3=Secp256k1_noconflict._add(temp2,Secp256k1_noconflict._mul(params[0],y));ECCMath_noconflict.toZ1(temp3,pp);if(b1[0]!=temp3[0]||b1[1]!=temp3[1]){returnfalse;}temp2=Secp256k1_noconflict._mul(params[3],G);temp3=Secp256k1_noconflict._add(temp2,Secp256k1_noconflict._mul(params[1],xG));ECCMath_noconflict.toZ1(temp3,pp);if(a2[0]!=temp3[0]||a2[1]!=temp3[1]){returnfalse;}temp1[0]=G[0];temp1[1]=pp-G[1];temp3[0]=y[0];temp3[1]=y[1];temp3[2]=1;temp2=Secp256k1_noconflict._addMixed(temp3,temp1);ECCMath_noconflict.toZ1(temp2,pp);temp1[0]=temp2[0];temp1[1]=temp2[1];temp2=Secp256k1_noconflict._mul(params[1],temp1);temp3=Secp256k1_noconflict._add(Secp256k1_noconflict._mul(params[3],yG),temp2);ECCMath_noconflict.toZ1(temp3,pp);if(b2[0]!=temp3[0]||b2[1]!=temp3[1]){returnfalse;}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1052
column: 2
content: functioncreateCommitment(uintr,uintb)returns(uint[2]){uint[3]memorybG=Secp256k1_noconflict._mul(b,G);uint[3]memoryrY=Secp256k1_noconflict._mul(r,Y);uint[3]memoryc=Secp256k1_noconflict._add(bG,rY);ECCMath_noconflict.toZ1(c,pp);uint[2]memoryc_affine;c_affine[0]=c[0];c_affine[1]=c[1];if(!Secp256k1_noconflict.isPubKey(c_affine)){throw;}returnc_affine;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1075
column: 2
content: functionopenCommitment(uint[2]c,uintr,uintb)returns(bool){uint[2]memoryc_computed=createCommitment(r,b);if(c[0]==c_computed[0]&&c[1]==c_computed[1]){returntrue;}returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1092
column: 2
content: functioncreateEqualityProof(uintr1,uintr2,uintr3,uint[2]c1,uint[2]c2)returns(uint[2]t,uintn){if(!Secp256k1_noconflict.isPubKey(c1)){throw;}if(!Secp256k1_noconflict.isPubKey(c2)){throw;}uint[3]memoryr3Y=Secp256k1_noconflict._mul(r3,Y);ECCMath_noconflict.toZ1(r3Y,pp);t[0]=r3Y[0];t[1]=r3Y[1];uinth=uint(sha256(msg.sender,G,Y,c1,c2,t));uintsubr1r2=submod(r1,r2);uintmodrh=mulmod(subr1r2,h,nn);n=addmod(modrh,r3,nn);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1117
column: 2
content: functioncomputeFirstHalfEquality(uint[2]c1,uint[2]c2,uinth,uint[2]t)returns(uint[2]left){uint[3]memorynegative_c2;negative_c2[0]=c2[0];negative_c2[1]=pp-c2[1];negative_c2[2]=1;uint[3]memoryadded_commitments_jacob=Secp256k1_noconflict._addMixed(negative_c2,c1);ECCMath_noconflict.toZ1(added_commitments_jacob,pp);uint[2]memoryadded_commitments;added_commitments[0]=added_commitments_jacob[0];added_commitments[1]=added_commitments_jacob[1];uint[3]memoryleft_jacob=Secp256k1_noconflict._addMixed(Secp256k1_noconflict._mul(h,added_commitments),t);ECCMath_noconflict.toZ1(left_jacob,pp);left[0]=left_jacob[0];left[1]=left_jacob[1];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1146
column: 2
content: functionverifyEqualityProof(uintn,uint[2]c1,uint[2]c2,uint[2]t)returns(bool){if(!Secp256k1_noconflict.isPubKey(c1)){throw;}if(!Secp256k1_noconflict.isPubKey(c2)){throw;}if(!Secp256k1_noconflict.isPubKey(t)){throw;}uinth=uint(sha256(msg.sender,G,Y,c1,c2,t));uint[2]memoryleft=computeFirstHalfEquality(c1,c2,h,t);uint[3]memoryright=Secp256k1_noconflict._mul(n,Y);ECCMath_noconflict.toZ1(right,pp);if(left[0]==right[0]&&left[1]==right[1]){returntrue;}else{returnfalse;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1173
column: 2
content: functioncreateInequalityProof(uintb1,uintb2,uintr1,uintr2,uintr3,uintr4,uint[2]c1,uint[2]c2)returns(uint[2]t1,uint[2]t2,uintn1,uintn2){if(!Secp256k1_noconflict.isPubKey(c1)){throw;}if(!Secp256k1_noconflict.isPubKey(c2)){throw;}uint[3]memorytemp=Secp256k1_noconflict._mul(r3,G);ECCMath_noconflict.toZ1(temp,pp);t1[0]=temp[0];t1[1]=temp[1];temp=Secp256k1_noconflict._mul(r4,Y);ECCMath_noconflict.toZ1(temp,pp);t2[0]=temp[0];t2[1]=temp[1];uinth=uint(sha256(msg.sender,G,Y,c1,c2,t1,t2));n1=submod(b1,b2);uinthelper=mulmod(n1,h,nn);n1=addmod(helper,r3,nn);n2=submod(r1,r2);helper=mulmod(n2,h,nn);n2=addmod(helper,r4,nn);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1206
column: 2
content: functioncomputeSecondHalfInequality(uint[2]c1,uint[2]c2,uint[2]t2,uinth)returns(uint[3]right){uint[3]memorynegative_c2;negative_c2[0]=c2[0];negative_c2[1]=pp-c2[1];negative_c2[2]=1;uint[3]memoryadded_commitments_jacob=Secp256k1_noconflict._addMixed(negative_c2,c1);ECCMath_noconflict.toZ1(added_commitments_jacob,pp);uint[2]memoryadded_commitments;added_commitments[0]=added_commitments_jacob[0];added_commitments[1]=added_commitments_jacob[1];uint[3]memoryh_mul_c1c2=Secp256k1_noconflict._mul(h,added_commitments);right=Secp256k1_noconflict._addMixed(h_mul_c1c2,t2);ECCMath_noconflict.toZ1(right,pp);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1235
column: 2
content: functionverifyInequalityProof(uint[2]c1,uint[2]c2,uint[2]t1,uint[2]t2,uintn1,uintn2)returns(bool){if(!Secp256k1_noconflict.isPubKey(c1)){throw;}if(!Secp256k1_noconflict.isPubKey(c2)){throw;}if(!Secp256k1_noconflict.isPubKey(t1)){throw;}if(!Secp256k1_noconflict.isPubKey(t2)){throw;}uinth=uint(sha256(msg.sender,G,Y,c1,c2,t1,t2));uint[3]memoryright=computeSecondHalfInequality(c1,c2,t2,h);uint[3]memoryn2Y=Secp256k1_noconflict._mul(n2,Y);ECCMath_noconflict.toZ1(n2Y,pp);if(n2Y[0]!=right[0]&&n2Y[1]!=right[1]){uint[3]memoryh_c1c2_t2_t1=Secp256k1_noconflict._addMixed(right,t1);ECCMath_noconflict.toZ1(h_c1c2_t2_t1,pp);right[0]=h_c1c2_t2_t1[0];right[1]=h_c1c2_t2_t1[1];uint[3]memoryn1Gn2Y=Secp256k1_noconflict._add(Secp256k1_noconflict._mul(n1,G),n2Y);ECCMath_noconflict.toZ1(n1Gn2Y,pp);if(n1Gn2Y[0]==right[0]&&n1Gn2Y[1]==right[1]){returntrue;}}returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 92
column: 4
content: uintconstantpp=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 95
column: 4
content: uintconstantGx=0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 96
column: 4
content: uintconstantGy=0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 99
column: 4
content: uintconstantnn=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 105
column: 4
content: uintconstantlowSmax=0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 423
column: 2
content: uintconstantpp=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 426
column: 2
content: uintconstantGx=0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 427
column: 2
content: uintconstantGy=0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 430
column: 2
content: uintconstantYx=98038005178408974007512590727651089955354106077095278304532603697039577112780;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 431
column: 2
content: uintconstantYy=1801119347122147381158502909947365828020117721497557484744596940174906898953;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 434
column: 2
content: uintconstantnn=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 436
column: 2
content: uint[2]G;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 437
column: 2
content: uint[2]Y;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 592
column: 2
content: uintn=0;

SOLIDITY_VISIBILITY :47
SOLIDITY_DEPRECATED_CONSTRUCTIONS :34
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :15
SOLIDITY_VAR :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :7
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_SHOULD_RETURN_STRUCT :1
