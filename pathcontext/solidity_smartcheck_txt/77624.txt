F:\Blockchain\dataset_new_byID\77624.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 10
column: 2
content: functionsetup(){value1=bytes32(msg.sender);value2=bytes32(address(this));value3=bytes32(uint(92389489234692734827398));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 16
column: 2
content: functiontest_oneValidEqBytes32(){assertEq(value1,value1);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 20
column: 2
content: functiontest_oneValidEqBytes32Message(){assertEq(value2,value2,"value 2 should be value 2");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 24
column: 2
content: functiontest_twoValidEqBytes32(){assertEq(value1,value1,"value 1 should be value 1");assertEq(value3,value3,"some message");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 29
column: 2
content: functiontest_threeValidEqBytes32(){assertEq(value1,value1,"value 1 should be value 1");assertEq(value2,value2,"value 2 should be value 2");assertEq(value3,value3,"value 3 should be value 3");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 35
column: 2
content: functiontest_fourValidEqBytes32(){assertEq(value1,value1,"value 1 should be value 1");assertEq(value2,value2,"value 2 should be value 2");assertEq(value3,value3,"value 3 should be value 3");assertEq(bytes32(uint(23948423239)),bytes32(uint(23948423239)),"random value should be random value");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 42
column: 2
content: functiontest_oneInvalidEqBytes32(){assertEq(value2,value1);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 46
column: 2
content: functiontest_oneInvalidEqBytes32Message(){assertEq(value2,value1,"2 should not be 1");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 50
column: 2
content: functiontest_twoInvalidEqBytes32Message(){assertEq(value2,value1,"2 should not be 1");assertEq(value3,value1,"3 should not be 1");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 55
column: 2
content: functiontest_threeInvalidEqBytes32Message(){assertEq(value1,value2,"1 should not be 2");assertEq(value3,value1,"3 should not be 1");assertEq(value2,value3,"2 should not be 3");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 61
column: 2
content: functiontest_fourInvalidEqBytes32Message(){assertEq(value2,value3,"2 should not be 3");assertEq(bytes32(uint(3)),value1,"randon 3 should not be 1");assertEq(value2,value3,"2 should not be 3");assertEq(value2,bytes32(uint(3)),"2 should not be 3");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 68
column: 2
content: functiontest_mixValidEqBytes32Message(){assertEq(value2,value1,"2 should not be 1");assertEq(value2,value2,"2 should be 2");assertEq(value2,value3,"2 should not be 3");assertEq(bytes32(uint(3)),bytes32(uint(3)),"randon 3 should be randon 3");assertEq(value2,bytes32(uint(3)),"2 should not be 3");}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 6
column: 2
content: bytes32value1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 7
column: 2
content: bytes32value2;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 8
column: 2
content: bytes32value3;

SOLIDITY_VISIBILITY :15
SOLIDITY_PRAGMAS_VERSION :1
