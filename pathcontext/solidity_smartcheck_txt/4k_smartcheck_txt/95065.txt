F:\Blockchain\solidity_dataset_work\4k_dataset\95065.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 250
column: 18
content: 0x942e8b22

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 251
column: 18
content: 0x36372b07

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 152
column: 1
content: functionapprove(addressspender,uint256amount)externalpayablereturns(boolsuccess){allowed[msg.sender][spender]=amount;emitApproval(msg.sender,spender,amount);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 195
column: 2
content: for(uint256i=0;i<users.length;i+=1){uint256balance=balances[users[i]];for(uint256j=i;j>0;j-=1){if(balances[_users[j-1]]<balance){_users[j]=_users[j-1];}else{break;}}_users[j]=users[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 219
column: 2
content: for(uint256i=0;i<users.length;i+=1){if(balances[users[i]]>balance){rank+=1;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 195
column: 2
content: for(uint256i=0;i<users.length;i+=1){uint256balance=balances[users[i]];for(uint256j=i;j>0;j-=1){if(balances[_users[j-1]]<balance){_users[j]=_users[j-1];}else{break;}}_users[j]=users[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 219
column: 2
content: for(uint256i=0;i<users.length;i+=1){if(balances[users[i]]>balance){rank+=1;}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 59
column: 0
content: contractRankCoinisERC20,ERC165{usingSafeMathforuint256;eventChangeName(addressindexeduser,stringname);eventChangeMessage(addressindexeduser,stringmessage);stringconstantpublicNAME="RankCoin";stringconstantpublicSYMBOL="RC";uint8constantpublicDECIMALS=18;uint256constantpublicTOTAL_SUPPLY=100000000000*(10**uint256(DECIMALS));addresspublicauthor;mapping(address=>uint256)publicbalances;mapping(address=>mapping(address=>uint256))publicallowed;address[]publicusers;mapping(address=>string)publicnames;mapping(address=>string)publicmessages;functiongetUserCount()viewpublicreturns(uint256){returnusers.length;}mapping(address=>bool)internaluserToIsExisted;constructor()public{author=msg.sender;balances[author]=TOTAL_SUPPLY;emitTransfer(0x0,author,TOTAL_SUPPLY);}functioncheckAddressMisused(addresstarget)internalviewreturns(bool){returntarget==address(0)||target==address(this);}functionname()externalviewreturns(string){returnNAME;}functionsymbol()externalviewreturns(string){returnSYMBOL;}functiondecimals()externalviewreturns(uint8){returnDECIMALS;}functiontotalSupply()externalviewreturns(uint256){returnTOTAL_SUPPLY;}functionbalanceOf(addressuser)externalviewreturns(uint256balance){returnbalances[user];}functiontransfer(addressto,uint256amount)externalpayablereturns(boolsuccess){require(checkAddressMisused(to)!=true);require(amount<=balances[msg.sender]);balances[msg.sender]=balances[msg.sender].sub(amount);balances[to]=balances[to].add(amount);if(to!=author&&userToIsExisted[to]!=true){users.push(to);userToIsExisted[to]=true;}emitTransfer(msg.sender,to,amount);returntrue;}functionapprove(addressspender,uint256amount)externalpayablereturns(boolsuccess){allowed[msg.sender][spender]=amount;emitApproval(msg.sender,spender,amount);returntrue;}functionallowance(addressuser,addressspender)externalviewreturns(uint256remaining){returnallowed[user][spender];}functiontransferFrom(addressfrom,addressto,uint256amount)externalpayablereturns(boolsuccess){require(checkAddressMisused(to)!=true);require(amount<=balances[from]);require(amount<=allowed[from][msg.sender]);balances[from]=balances[from].sub(amount);balances[to]=balances[to].add(amount);if(to!=author&&userToIsExisted[to]!=true){users.push(to);userToIsExisted[to]=true;}allowed[from][msg.sender]=allowed[from][msg.sender].sub(amount);emitTransfer(from,to,amount);returntrue;}functiongetUsersByBalance()viewpublicreturns(address[]){address[]memory_users=newaddress[](users.length);for(uint256i=0;i<users.length;i+=1){uint256balance=balances[users[i]];for(uint256j=i;j>0;j-=1){if(balances[_users[j-1]]<balance){_users[j]=_users[j-1];}else{break;}}_users[j]=users[i];}return_users;}functiongetRank(addressuser)viewpublicreturns(uint256){uint256rank=1;uint256balance=balances[user];for(uint256i=0;i<users.length;i+=1){if(balances[users[i]]>balance){rank+=1;}}returnrank;}functionsetName(string_name)public{names[msg.sender]=_name;emitChangeName(msg.sender,_name);}functionsetMessage(stringmessage)public{messages[msg.sender]=message;emitChangeMessage(msg.sender,message);}functionsupportsInterface(bytes4interfaceID)externalviewreturns(bool){returninterfaceID==this.supportsInterface.selector||interfaceID==0x942e8b22||interfaceID==0x36372b07;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 60
column: 1
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 192
column: 51
content: address[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 229
column: 18
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 237
column: 21
content: stringmessage

SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UPGRADE_TO_050 :3
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_ERC20_APPROVE :1
