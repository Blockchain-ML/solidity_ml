F:\Blockchain\solidity_dataset_work\4k_dataset\92284.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 14
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}if(err)Err("times func overflow");}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 33
column: 2
content: functiondividedBy(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{switchiszero(b)case0{res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)}}Err("tried to divide by zero");return(true,0);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 52
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 71
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}if(err)Err("minus func underflow");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 14
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}if(err)Err("times func overflow");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 52
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 71
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}if(err)Err("minus func underflow");}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 15
column: 4
content: assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 34
column: 4
content: assembly{switchiszero(b)case0{res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 53
column: 4
content: assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 72
column: 4
content: assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 14
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}if(err)Err("times func overflow");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 33
column: 2
content: functiondividedBy(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{switchiszero(b)case0{res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)}}Err("tried to divide by zero");return(true,0);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 52
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 71
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}if(err)Err("minus func underflow");}

SOLIDITY_VISIBILITY :4
SOLIDITY_DEPRECATED_CONSTRUCTIONS :4
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_USING_INLINE_ASSEMBLY :4
