F:\Blockchain\solidity_dataset_work\4k_dataset\96053.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 40
column: 8
content: for(uinti=0;i<targets.length;i++){changeRegistrationStatus(targets[i],amounts[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 40
column: 8
content: for(uinti=0;i<targets.length;i++){changeRegistrationStatus(targets[i],amounts[i]);}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 35
column: 40
content: address[]targets

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 35
column: 59
content: uint256[]amounts

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 15
column: 4
content: functionWhitelistedDistributionStrategy(ERC20_token,uint256_rate,uint256_whitelisted_rate)VestedTokenDistributionStrategy(_token,_rate){rate_for_investor=_whitelisted_rate;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 47
column: 4
content: functioncalculateTokenAmount(uint256_weiAmount,addressbeneficiary)viewreturns(uint256tokens){if(_weiAmount>=registeredAmount[beneficiary]&&registeredAmount[beneficiary]>0){tokens=_weiAmount.mul(rate_for_investor);}else{tokens=super.calculateTokenAmount(_weiAmount,beneficiary);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 57
column: 4
content: functionwhitelistRegisteredAmount(addressbeneficiary)viewreturns(uint256amount){amount=registeredAmount[beneficiary];}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 10
column: 4
content: uint256rate_for_investor;

SOLIDITY_VISIBILITY :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_UPGRADE_TO_050 :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
