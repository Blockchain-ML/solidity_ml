F:\Blockchain\solidity_dataset_work\4k_dataset\95438.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 235
column: 36
content: 0xe18e9ce082B1609ebFAE090c6e5Cbb65eDaC5855

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 85
column: 6
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 133
column: 21
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 151
column: 2
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 230
column: 9
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 12
column: 4
content: functionbalanceOf(address_owner)constantreturns(uint256balance);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 36
column: 4
content: functionallowance(address_owner,address_spender)constantreturns(uint256remaining);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 67
column: 2
content: functionmax64(uint64a,uint64b)internalconstantreturns(uint64){returna>=b?a:b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 71
column: 2
content: functionmin64(uint64a,uint64b)internalconstantreturns(uint64){returna<b?a:b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 75
column: 2
content: functionmax256(uint256a,uint256b)internalconstantreturns(uint256){returna>=b?a:b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 79
column: 2
content: functionmin256(uint256a,uint256b)internalconstantreturns(uint256){returna<b?a:b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 213
column: 1
content: functionfeePerUnitOfCoin(uintround)publicconstantreturns(uintfee){returnsafeDiv(roundFees[round],recordedCoinSupplyForRound[round]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 127
column: 5
content: for(uinti=0;i<numFactories;i++){if(msg.sender==mintingFactories[i]){isFactory=true;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 171
column: 2
content: for(uinti=lastClaimedRound[_owner]+1;i<=latestRound;i++){uintfeeForRound=balances[_owner]*feePerUnitOfCoin(i);if(feeForRound>claimedFees[i][_owner]){feeForRound=safeSub(feeForRound,claimedFees[i][_owner]);}else{feeForRound=0;}claimedFees[i][_owner]=safeAdd(claimedFees[i][_owner],feeForRound);totalFees=safeAdd(totalFees,feeForRound);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 199
column: 2
content: for(uinti=lastClaimedRound[_owner]+1;i<=latestRound;i++){uintfeeForRound=balances[_owner]*feePerUnitOfCoin(i);if(feeForRound>claimedFees[i][_owner]){uintunclaimedFees=min256(numCoins*feePerUnitOfCoin(i),safeSub(feeForRound,claimedFees[i][_owner]));reserves=safeAdd(reserves,unclaimedFees);claimedFees[i][_owner]=safeAdd(claimedFees[i][_owner],unclaimedFees);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 208
column: 2
content: for(uintx=lastClaimedRound[_receipient]+1;x<=latestRound;x++){claimedFees[x][_receipient]=safeAdd(claimedFees[x][_receipient],numCoins*feePerUnitOfCoin(x));}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 241
column: 4
content: functionsetExchange(addressexchange)onlyOwner{exchangeAddress=exchange;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 244
column: 4
content: functionsetDAO(addressdao)onlyOwner{daoAddress=dao;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 84
column: 4
content: if(!assertion){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 133
column: 5
content: if(!isFactory)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 150
column: 2
content: if(msg.data.length!=size+4){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 229
column: 5
content: if(msg.sender!=exchangeAddress&&msg.sender!=daoAddress){throw;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 12
column: 4
content: functionbalanceOf(address_owner)constantreturns(uint256balance);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 18
column: 4
content: functiontransfer(address_to,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 25
column: 4
content: functiontransferFrom(address_from,address_to,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 31
column: 4
content: functionapprove(address_spender,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 36
column: 4
content: functionallowance(address_owner,address_spender)constantreturns(uint256remaining);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 98
column: 4
content: functionOwned(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 104
column: 4
content: functionchangeOwner(address_newOwner)onlyOwner{newOwner=_newOwner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 108
column: 4
content: functionacceptOwnership(){if(msg.sender==newOwner){owner=newOwner;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 120
column: 1
content: functionaddMintingFactory(address_factory)onlyOwner{mintingFactories.push(_factory);numFactories+=1;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 136
column: 1
content: functionexchangeTransfer(address_to,uint_value);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 156
column: 1
content: functionreduceReserves(uintvalue)onlyPayloadSize(1*32)onlyOwner{reserves=safeSub(reserves,value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 160
column: 1
content: functionaddReserves(uintvalue)onlyPayloadSize(1*32)onlyOwner{reserves=safeAdd(reserves,value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 164
column: 1
content: functiondepositFees(uintvalue)onlyPayloadSize(1*32)onlyOwner{latestRound+=1;recordedCoinSupplyForRound[latestRound]=totalSupply;roundFees[latestRound]=value;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 169
column: 1
content: functionclaimFees(address_owner)onlyPayloadSize(1*32)onlyOwnerreturns(uinttotalFees){totalFees=0;for(uinti=lastClaimedRound[_owner]+1;i<=latestRound;i++){uintfeeForRound=balances[_owner]*feePerUnitOfCoin(i);if(feeForRound>claimedFees[i][_owner]){feeForRound=safeSub(feeForRound,claimedFees[i][_owner]);}else{feeForRound=0;}claimedFees[i][_owner]=safeAdd(claimedFees[i][_owner],feeForRound);totalFees=safeAdd(totalFees,feeForRound);}lastClaimedRound[_owner]=latestRound;returntotalFees;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 186
column: 1
content: functionclaimFeesForRound(address_owner,uintround)onlyPayloadSize(2*32)onlyOwnerreturns(uintfeeForRound){feeForRound=balances[_owner]*feePerUnitOfCoin(round);if(feeForRound>claimedFees[round][_owner]){feeForRound=safeSub(feeForRound,claimedFees[round][_owner]);}else{feeForRound=0;}claimedFees[round][_owner]=safeAdd(claimedFees[round][_owner],feeForRound);returnfeeForRound;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 217
column: 3
content: functionmintTokens(address_owner,uintamount)onlyFactory{lastClaimedRound[msg.sender]=latestRound;totalSupply=safeAdd(totalSupply,amount);balances[_owner]+=amount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 234
column: 1
content: functionSphereTokenFactory(){sphereToken=CollectibleFeeToken(0xe18e9ce082B1609ebFAE090c6e5Cbb65eDaC5855);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 237
column: 1
content: functionmint(addresstarget,uintamount)onlyExchange{sphereToken.mintTokens(address(this),amount);sphereToken.exchangeTransfer(target,amount);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 241
column: 4
content: functionsetExchange(addressexchange)onlyOwner{exchangeAddress=exchange;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 244
column: 4
content: functionsetDAO(addressdao)onlyOwner{daoAddress=dao;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 117
column: 1
content: address[]mintingFactories;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 118
column: 1
content: uintnumFactories;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 143
column: 1
content: mapping(uint=>mapping(address=>uint))claimedFees;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 144
column: 1
content: mapping(address=>uint)lastClaimedRound;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 225
column: 1
content: CollectibleFeeTokensphereToken;

SOLIDITY_VISIBILITY :25
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_DEPRECATED_CONSTRUCTIONS :11
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_ADDRESS_HARDCODED :1
