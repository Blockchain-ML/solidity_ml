F:\Blockchain\solidity_dataset_work\4k_dataset\92763.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 79
column: 16
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 112
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 123
column: 5
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 212
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 219
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 224
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 228
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 232
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 236
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 242
column: 4
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 271
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 278
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 293
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 297
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 308
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 316
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 366
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 374
column: 3
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 78
column: 1
content: functioncomputeSeed(uint64blockNumber,addressplayer)internalconstantreturns(uint64seed){returnuint64(sha3(block.blockhash(blockNumber),block.blockhash(blockNumber-1),block.blockhash(blockNumber-2),block.blockhash(blockNumber-3),block.blockhash(blockNumber-4),block.blockhash(blockNumber-5),player));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 83
column: 1
content: functiongetSeedAndState(stringgameID,addressplayer)constantreturns(uint64seed,uint64blockNumber,uint8competitionIndex,uint32version,uint64endTime,uint88price,uint32myBestScore,uint64competitionBlockNumber,uint64registeredSeed){vargame=games[gameID];competitionIndex=game.currentCompetitionIndex;varcompetition=game.competitions[competitionIndex];blockNumber=uint64(block.number-1);seed=computeSeed(blockNumber,player);version=competition.version;endTime=competition.endTime;price=competition.price;competitionBlockNumber=competition.switchBlockNumber;if(competition.submissions[player].submitBlockNumber>=competition.switchBlockNumber){myBestScore=competition.submissions[player].score;}else{myBestScore=0;}registeredSeed=game.starts[player].seed;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 384
column: 1
content: functiongetPlayerSubmissionFromCompetition(stringgameID,uint8competitionIndex,addressplayerAddress)constantreturns(uint32score,uint64seed,uint32duration,bytes32proofHash,uint32version,uint64submitBlockNumber){varsubmission=games[gameID].competitions[competitionIndex].submissions[playerAddress];score=submission.score;seed=submission.seed;duration=submission.durationRoundedDown;proofHash=submission.proofHash;version=submission.version;submitBlockNumber=submission.submitBlockNumber;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 394
column: 1
content: functiongetPlayersFromCompetition(stringgameID,uint8competitionIndex)constantreturns(address[]playerAddresses,uint32num){varcompetition=games[gameID].competitions[competitionIndex];playerAddresses=competition.players;num=competition.numPlayers;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 400
column: 1
content: functiongetCompetitionValues(stringgameID,uint8competitionIndex)constantreturns(uint128jackpot,uint88price,uint32version,uint8numPastBlocks,uint64switchBlockNumber,uint32numPlayers,uint32[]rewardsDistribution,uint8houseDivider,uint16lag,uint64endTime,uint32verificationWaitTime,uint8_competitionIndex){varcompetition=games[gameID].competitions[competitionIndex];jackpot=competition.jackpot;price=competition.price;version=competition.version;numPastBlocks=competition.numPastBlocks;switchBlockNumber=competition.switchBlockNumber;numPlayers=competition.numPlayers;rewardsDistribution=competition.rewardsDistribution;houseDivider=competition.houseDivider;lag=competition.lag;endTime=competition.endTime;verificationWaitTime=competition.verificationWaitTime;_competitionIndex=competitionIndex;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 429
column: 1
content: functiongetCurrentCompetitionValues(stringgameID)constantreturns(uint128jackpot,uint88price,uint32version,uint8numPastBlocks,uint64switchBlockNumber,uint32numPlayers,uint32[]rewardsDistribution,uint8houseDivider,uint16lag,uint64endTime,uint32verificationWaitTime,uint8_competitionIndex){returngetCompetitionValues(gameID,games[gameID].currentCompetitionIndex);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 240
column: 2
content: for(uint8i=0;i<rewardsDistribution.length;i++){if(rewardsDistribution[i]==0||(prev!=0&&rewardsDistribution[i]>prev)){throw;}prev=rewardsDistribution[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 240
column: 2
content: for(uint8i=0;i<rewardsDistribution.length;i++){if(rewardsDistribution[i]==0||(prev!=0&&rewardsDistribution[i]>prev)){throw;}prev=rewardsDistribution[i];}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 111
column: 2
content: if(msg.value!=competition.price){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 122
column: 4
content: if(msg.value!=0&&!msg.sender.send(msg.value)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 211
column: 2
content: if(msg.sender!=organiser){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 218
column: 2
content: if(currentCompetition.endTime>=now){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 223
column: 2
content: if(newCompetition.numPlayers>0){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 227
column: 2
content: if(houseDivider==0){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 231
column: 2
content: if(numPastBlocks<1){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 235
column: 2
content: if(rewardsDistribution.length==0||rewardsDistribution.length>64){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 241
column: 3
content: if(rewardsDistribution[i]==0||(prev!=0&&rewardsDistribution[i]>prev)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 270
column: 2
content: if(msg.sender!=organiser){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 277
column: 2
content: if(version<=competition.version){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 292
column: 2
content: if(msg.sender!=organiser){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 296
column: 2
content: if(numPastBlocks<1){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 307
column: 2
content: if(msg.sender!=organiser){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 315
column: 2
content: if(int(now)-competition.endTime<competition.verificationWaitTime){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 365
column: 2
content: if(depositAccount!=msg.sender){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 373
column: 2
content: if(organiser!=msg.sender){throw;}

ruleId: SOLIDITY_SEND
patternId: 430636
severity: 1
line: 122
column: 37
content: send(msg.value)

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 215
column: 2
content: varnewCompetition=game.competitions[1-game.currentCompetitionIndex]

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 350
column: 4
content: varnextCompetition=games[gameID].competitions[1-competitionIndex]

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 83
column: 1
content: functiongetSeedAndState(stringgameID,addressplayer)constantreturns(uint64seed,uint64blockNumber,uint8competitionIndex,uint32version,uint64endTime,uint88price,uint32myBestScore,uint64competitionBlockNumber,uint64registeredSeed){vargame=games[gameID];competitionIndex=game.currentCompetitionIndex;varcompetition=game.competitions[competitionIndex];blockNumber=uint64(block.number-1);seed=computeSeed(blockNumber,player);version=competition.version;endTime=competition.endTime;price=competition.price;competitionBlockNumber=competition.switchBlockNumber;if(competition.submissions[player].submitBlockNumber>=competition.switchBlockNumber){myBestScore=competition.submissions[player].score;}else{myBestScore=0;}registeredSeed=game.starts[player].seed;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 107
column: 1
content: functionstart(stringgameID,uint64blockNumber,uint8competitionIndex,uint32version)payable{vargame=games[gameID];varcompetition=game.competitions[competitionIndex];if(msg.value!=competition.price){throw;}if(competition.endTime<=now||competitionIndex!=game.currentCompetitionIndex||version!=competition.version&&(version!=competition.previousVersion||block.number>competition.versionChangeBlockNumber)||block.number>=competition.numPastBlocks&&block.number-competition.numPastBlocks>blockNumber){if(msg.value!=0&&!msg.sender.send(msg.value)){throw;}return;}competition.jackpot+=uint128(msg.value);game.starts[msg.sender]=Start({seed:computeSeed(blockNumber,msg.sender),time:uint64(now),competitionIndex:competitionIndex,version:version});}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 139
column: 1
content: functionsubmit(stringgameID,uint64seed,uint32score,uint32durationRoundedDown,bytes32proofHash){vargame=games[gameID];vargameStart=game.starts[msg.sender];if(gameStart.seed!=seed){return;}varcompetition=game.competitions[gameStart.competitionIndex];if(now-gameStart.time>durationRoundedDown+competition.lag){return;}if(now>=competition.endTime+competition.verificationWaitTime){return;}varsubmission=competition.submissions[msg.sender];if(submission.submitBlockNumber<competition.switchBlockNumber){if(competition.numPlayers>=4294967295){return;}}elseif(score<=submission.score){return;}varplayers=competition.players;if(submission.submitBlockNumber<competition.switchBlockNumber){varcurrentNumPlayer=competition.numPlayers;if(currentNumPlayer>=players.length){players.push(msg.sender);}else{players[currentNumPlayer]=msg.sender;}competition.numPlayers=currentNumPlayer+1;}competition.submissions[msg.sender]=Submission({proofHash:proofHash,seed:gameStart.seed,score:score,durationRoundedDown:durationRoundedDown,submitBlockNumber:uint64(block.number),version:gameStart.version});}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 193
column: 1
content: functionincreaseJackpot(stringgameID)payable{vargame=games[gameID];game.competitions[game.currentCompetitionIndex].jackpot+=uint128(msg.value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 203
column: 1
content: functionCompetitionStore(){organiser=msg.sender;depositAccount=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 210
column: 1
content: function_startNextCompetition(stringgameID,uint32version,uint88price,uint8numPastBlocks,uint8houseDivider,uint16lag,uint64duration,uint32verificationWaitTime,bytes32codeHash,uint32[]rewardsDistribution)payable{if(msg.sender!=organiser){throw;}vargame=games[gameID];varnewCompetition=game.competitions[1-game.currentCompetitionIndex];varcurrentCompetition=game.competitions[game.currentCompetitionIndex];if(currentCompetition.endTime>=now){throw;}if(newCompetition.numPlayers>0){throw;}if(houseDivider==0){throw;}if(numPastBlocks<1){throw;}if(rewardsDistribution.length==0||rewardsDistribution.length>64){throw;}uint32prev=0;for(uint8i=0;i<rewardsDistribution.length;i++){if(rewardsDistribution[i]==0||(prev!=0&&rewardsDistribution[i]>prev)){throw;}prev=rewardsDistribution[i];}if(version!=currentCompetition.version){VersionChange(gameID,version,codeHash);}game.currentCompetitionIndex=1-game.currentCompetitionIndex;newCompetition.switchBlockNumber=uint64(block.number);newCompetition.previousVersion=0;newCompetition.versionChangeBlockNumber=0;newCompetition.version=version;newCompetition.price=price;newCompetition.numPastBlocks=numPastBlocks;newCompetition.rewardsDistribution=rewardsDistribution;newCompetition.houseDivider=houseDivider;newCompetition.lag=lag;newCompetition.jackpot+=uint128(msg.value);newCompetition.endTime=uint64(now)+duration;newCompetition.verificationWaitTime=verificationWaitTime;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 269
column: 1
content: function_setBugFixVersion(stringgameID,uint32version,bytes32codeHash,uint32numBlockAllowedForPastVersion){if(msg.sender!=organiser){throw;}vargame=games[gameID];varcompetition=game.competitions[game.currentCompetitionIndex];if(version<=competition.version){throw;}if(competition.endTime<=now){return;}competition.previousVersion=competition.version;competition.versionChangeBlockNumber=uint64(block.number+numBlockAllowedForPastVersion);competition.version=version;VersionChange(gameID,version,codeHash);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 291
column: 1
content: function_setLagParams(stringgameID,uint16lag,uint8numPastBlocks){if(msg.sender!=organiser){throw;}if(numPastBlocks<1){throw;}vargame=games[gameID];varcompetition=game.competitions[game.currentCompetitionIndex];competition.numPastBlocks=numPastBlocks;competition.lag=lag;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 306
column: 1
content: function_rewardWinners(stringgameID,uint8competitionIndex,address[]winners){if(msg.sender!=organiser){throw;}varcompetition=games[gameID].competitions[competitionIndex];if(int(now)-competition.endTime<competition.verificationWaitTime){throw;}if(competition.jackpot>0){varrewardsDistribution=competition.rewardsDistribution;uint8numWinners=uint8(rewardsDistribution.length);if(numWinners>uint8(winners.length)){numWinners=uint8(winners.length);}uint128forHouse=competition.jackpot;if(numWinners>0&&competition.houseDivider>1){forHouse=forHouse/competition.houseDivider;uint128forWinners=competition.jackpot-forHouse;uint64total=0;for(uint8i=0;i<numWinners;i++){total+=rewardsDistribution[i];}for(uint8j=0;j<numWinners;j++){uint128value=(forWinners*rewardsDistribution[j])/total;if(!winners[j].send(value)){forHouse=forHouse+value;}}}if(!depositAccount.send(forHouse)){varnextCompetition=games[gameID].competitions[1-competitionIndex];nextCompetition.jackpot=nextCompetition.jackpot+forHouse;}competition.jackpot=0;}competition.numPlayers=0;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 364
column: 1
content: function_setDepositAccount(addressnewDepositAccount){if(depositAccount!=msg.sender){throw;}depositAccount=newDepositAccount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 372
column: 1
content: function_setOrganiser(addressnewOrganiser){if(organiser!=msg.sender){throw;}organiser=newOrganiser;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 384
column: 1
content: functiongetPlayerSubmissionFromCompetition(stringgameID,uint8competitionIndex,addressplayerAddress)constantreturns(uint32score,uint64seed,uint32duration,bytes32proofHash,uint32version,uint64submitBlockNumber){varsubmission=games[gameID].competitions[competitionIndex].submissions[playerAddress];score=submission.score;seed=submission.seed;duration=submission.durationRoundedDown;proofHash=submission.proofHash;version=submission.version;submitBlockNumber=submission.submitBlockNumber;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 394
column: 1
content: functiongetPlayersFromCompetition(stringgameID,uint8competitionIndex)constantreturns(address[]playerAddresses,uint32num){varcompetition=games[gameID].competitions[competitionIndex];playerAddresses=competition.players;num=competition.numPlayers;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 400
column: 1
content: functiongetCompetitionValues(stringgameID,uint8competitionIndex)constantreturns(uint128jackpot,uint88price,uint32version,uint8numPastBlocks,uint64switchBlockNumber,uint32numPlayers,uint32[]rewardsDistribution,uint8houseDivider,uint16lag,uint64endTime,uint32verificationWaitTime,uint8_competitionIndex){varcompetition=games[gameID].competitions[competitionIndex];jackpot=competition.jackpot;price=competition.price;version=competition.version;numPastBlocks=competition.numPastBlocks;switchBlockNumber=competition.switchBlockNumber;numPlayers=competition.numPlayers;rewardsDistribution=competition.rewardsDistribution;houseDivider=competition.houseDivider;lag=competition.lag;endTime=competition.endTime;verificationWaitTime=competition.verificationWaitTime;_competitionIndex=competitionIndex;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 429
column: 1
content: functiongetCurrentCompetitionValues(stringgameID)constantreturns(uint128jackpot,uint88price,uint32version,uint8numPastBlocks,uint64switchBlockNumber,uint32numPlayers,uint32[]rewardsDistribution,uint8houseDivider,uint16lag,uint64endTime,uint32verificationWaitTime,uint8_competitionIndex){returngetCompetitionValues(gameID,games[gameID].currentCompetitionIndex);}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 52
column: 1
content: mapping(string=>Game)games;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 54
column: 1
content: addressorganiser;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 55
column: 1
content: addressdepositAccount;

SOLIDITY_VISIBILITY :18
SOLIDITY_DEPRECATED_CONSTRUCTIONS :24
SOLIDITY_REVERT_REQUIRE :17
SOLIDITY_VAR :2
SOLIDITY_SEND :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
