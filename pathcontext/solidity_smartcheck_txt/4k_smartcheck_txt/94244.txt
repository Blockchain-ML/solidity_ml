F:\Blockchain\solidity_dataset_work\4k_dataset\94244.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 111
column: 13
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 131
column: 13
content: (address(0))

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 273
column: 4
content: functionapprove(address_spender,uint256amount)externalreturns(bool){require(_spender!=0x0,"spender must be set");allowed[msg.sender][_spender]=amount;emitApproval(msg.sender,_spender,amount);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 690
column: 8
content: for(uint256i=0;i<symbols.length;i++){rates[symbols[i]]=RateInfo(newRates[i],now);emitRateChanged(symbols[i],newRates[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 836
column: 8
content: for(uinti=0;i<loanIds.length;i++){require(i<loans.length,"invalid loanId");LoanDatastorageloan=loans[loanIds[i]];require(loan.state==LoanState.Open,"loan state must be Open");require(now>=loan.maturity,"current time must be later than maturity");LoanProductstorageproduct=products[loan.productId];uintloanAmount;(loanAmount,)=calculateLoanValues(product,loan.repaymentAmount);totalLoanAmountCollected=totalLoanAmountCollected.add(loanAmount);loan.state=LoanState.Collected;uintdefaultingFeeInToken=loan.repaymentAmount.mul(product.defaultingFeePt).div(1000000);uintdefaultingFee=rates.convertToWei(augmintToken.peggedSymbol(),defaultingFeeInToken);uinttargetCollection=rates.convertToWei(augmintToken.peggedSymbol(),loan.repaymentAmount).add(defaultingFee);uintreleasedCollateral;if(targetCollection<loan.collateralAmount){releasedCollateral=loan.collateralAmount.sub(targetCollection);loan.borrower.transfer(releasedCollateral);}uintcollateralToCollect=loan.collateralAmount.sub(releasedCollateral);if(defaultingFee>=collateralToCollect){defaultingFee=collateralToCollect;collateralToCollect=0;}else{collateralToCollect=collateralToCollect.sub(defaultingFee);}totalDefaultingFee=totalDefaultingFee.add(defaultingFee);totalCollateralToCollect=totalCollateralToCollect.add(collateralToCollect);emitLoanCollected(loanIds[i],loan.borrower,collateralToCollect.add(defaultingFee),releasedCollateral,defaultingFee);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 903
column: 8
content: for(uint16i=0;i<CHUNK_SIZE;i++){if(offset+i>=products.length){break;}LoanProductstorageproduct=products[offset+i];response[i]=[offset+i,product.minDisbursedAmount,product.term,product.discountRate,product.collateralRatio,product.defaultingFeePt,monetarySupervisor.getMaxLoanAmount(product.minDisbursedAmount),product.isActive?1:0];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 922
column: 8
content: for(uint16i=0;i<CHUNK_SIZE;i++){if(offset+i>=loans.length){break;}response[i]=getLoanTuple(offset+i);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 939
column: 8
content: for(uint16i=0;i<CHUNK_SIZE;i++){if(offset+i>=loansForAddress.length){break;}response[i]=getLoanTuple(loansForAddress[offset+i]);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 381
column: 4
content: function_increaseApproval(address_approver,address_spender,uint_addedValue)privatereturns(bool){allowed[_approver][_spender]=allowed[_approver][_spender].add(_addedValue);emitApproval(_approver,_spender,allowed[_approver][_spender]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 73
column: 8
content: for(uint256i=0;i<length;i++){grantPermission(agent,requiredPermissions[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 87
column: 8
content: for(uint256i=0;i<length;i++){revokePermission(agent,requiredPermissions[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 690
column: 8
content: for(uint256i=0;i<symbols.length;i++){rates[symbols[i]]=RateInfo(newRates[i],now);emitRateChanged(symbols[i],newRates[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 836
column: 8
content: for(uinti=0;i<loanIds.length;i++){require(i<loans.length,"invalid loanId");LoanDatastorageloan=loans[loanIds[i]];require(loan.state==LoanState.Open,"loan state must be Open");require(now>=loan.maturity,"current time must be later than maturity");LoanProductstorageproduct=products[loan.productId];uintloanAmount;(loanAmount,)=calculateLoanValues(product,loan.repaymentAmount);totalLoanAmountCollected=totalLoanAmountCollected.add(loanAmount);loan.state=LoanState.Collected;uintdefaultingFeeInToken=loan.repaymentAmount.mul(product.defaultingFeePt).div(1000000);uintdefaultingFee=rates.convertToWei(augmintToken.peggedSymbol(),defaultingFeeInToken);uinttargetCollection=rates.convertToWei(augmintToken.peggedSymbol(),loan.repaymentAmount).add(defaultingFee);uintreleasedCollateral;if(targetCollection<loan.collateralAmount){releasedCollateral=loan.collateralAmount.sub(targetCollection);loan.borrower.transfer(releasedCollateral);}uintcollateralToCollect=loan.collateralAmount.sub(releasedCollateral);if(defaultingFee>=collateralToCollect){defaultingFee=collateralToCollect;collateralToCollect=0;}else{collateralToCollect=collateralToCollect.sub(defaultingFee);}totalDefaultingFee=totalDefaultingFee.add(defaultingFee);totalCollateralToCollect=totalCollateralToCollect.add(collateralToCollect);emitLoanCollected(loanIds[i],loan.borrower,collateralToCollect.add(defaultingFee),releasedCollateral,defaultingFee);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 444
column: 0
content: contractAugmintReservesisSystemAccount{function()publicpayable{}constructor(addresspermissionGranterContract)publicSystemAccount(permissionGranterContract){}functionburn(AugmintTokenInterfaceaugmintToken,uintamount)externalrestrict("MonetarySupervisor"){augmintToken.burn(amount);}}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 169
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 473
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 668
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 713
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 100
column: 2
content: functionrecover(bytes32hash,bytessig)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(sig.length!=65){return(address(0));}assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 965
column: 26
content: (uintloanAmount,uintinterestAmount)

ruleId: SOLIDITY_TRANSFER_IN_LOOP
patternId: 8jdj43
severity: 2
line: 836
column: 8
content: for(uinti=0;i<loanIds.length;i++){require(i<loans.length,"invalid loanId");LoanDatastorageloan=loans[loanIds[i]];require(loan.state==LoanState.Open,"loan state must be Open");require(now>=loan.maturity,"current time must be later than maturity");LoanProductstorageproduct=products[loan.productId];uintloanAmount;(loanAmount,)=calculateLoanValues(product,loan.repaymentAmount);totalLoanAmountCollected=totalLoanAmountCollected.add(loanAmount);loan.state=LoanState.Collected;uintdefaultingFeeInToken=loan.repaymentAmount.mul(product.defaultingFeePt).div(1000000);uintdefaultingFee=rates.convertToWei(augmintToken.peggedSymbol(),defaultingFeeInToken);uinttargetCollection=rates.convertToWei(augmintToken.peggedSymbol(),loan.repaymentAmount).add(defaultingFee);uintreleasedCollateral;if(targetCollection<loan.collateralAmount){releasedCollateral=loan.collateralAmount.sub(targetCollection);loan.borrower.transfer(releasedCollateral);}uintcollateralToCollect=loan.collateralAmount.sub(releasedCollateral);if(defaultingFee>=collateralToCollect){defaultingFee=collateralToCollect;collateralToCollect=0;}else{collateralToCollect=collateralToCollect.sub(defaultingFee);}totalDefaultingFee=totalDefaultingFee.add(defaultingFee);totalCollateralToCollect=totalCollateralToCollect.add(collateralToCollect);emitLoanCollected(loanIds[i],loan.borrower,collateralToCollect.add(defaultingFee),releasedCollateral,defaultingFee);}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 446
column: 16
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 69
column: 53
content: bytes32[]requiredPermissions

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 85
column: 54
content: bytes32[]requiredPermissions

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 100
column: 33
content: bytessig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 238
column: 51
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 238
column: 65
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 369
column: 62
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 386
column: 69
content: stringnarrative

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 398
column: 70
content: stringnarrative

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 404
column: 70
content: stringnarrative

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 118
column: 4
content: assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}

SOLIDITY_SAFEMATH :4
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UPGRADE_TO_050 :10
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_TRANSFER_IN_LOOP :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :1
