F:\Blockchain\dataset_new_byID\78433.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 48
column: 4
content: functionspawnRace()whenNotPaused{race=(newRace).value(0.1ether)();raceIndex[race].raceStatus=raceStatusChoices.Betting;raceIndex[race].spawnTime=now;assert(race.setupRace(60,60));RaceDeployed(address(race),race.owner(),now);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 57
column: 4
content: function__callback(bytes32myid,stringresult,bytesproof){require(msg.sender==oraclize_cbAddress());spawnRace();update(4000000);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 63
column: 4
content: functionupdate(uintoraclizeGasLimit)payable{if(oraclize_getPrice("URL")>this.balance){newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");}else{newOraclizeQuery("Oraclize query was sent, standing by for the answer..");oraclize_query(0,"URL","",oraclizeGasLimit);oraclize_query(30days,"URL","",oraclizeGasLimit);}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 7
column: 4
content: addressowner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 8
column: 4
content: boolpaused;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 9
column: 4
content: uint256raceCounter;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 10
column: 4
content: Racerace;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 19
column: 4
content: mapping(address=>raceInfo)raceIndex;

SOLIDITY_VISIBILITY :8
SOLIDITY_PRAGMAS_VERSION :1
