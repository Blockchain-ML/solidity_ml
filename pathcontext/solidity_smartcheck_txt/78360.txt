F:\Blockchain\dataset_new_byID\78360.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 35
column: 34
content: 0x111111

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 11
column: 4
content: functionBasicTypes(){ownerF=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 15
column: 4
content: functionsetBytes32F(bytes32bytes32In){bytes32F=bytes32In;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 19
column: 4
content: functionsetIntF(intintIn){intF=intIn;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 23
column: 4
content: functionsetUintF(uintuintIn){uintF=uintIn;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 27
column: 4
content: functionsetBoolF(boolboolIn){boolF=boolIn;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 40
column: 4
content: functionBasicTypesTest(){}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 44
column: 4
content: functiontestOwner(){vartestee=newBasicTypes();varowner=testee.ownerF();owner.assertZero("Owner is not caller");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 51
column: 4
content: functiontestBytes32(){vartestee=newBasicTypes();testee.setBytes32F(bytes32Out);varbytes32In=testee.bytes32F();bytes32Out.assertEqual(bytes32In,"Bytes32 did not match.");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 58
column: 4
content: functiontestInt(){vartestee=newBasicTypes();testee.setIntF(intOut);varintIn=testee.intF();intOut.assertEqual(intIn,"Ints did not match.");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 65
column: 4
content: functiontestUint(){vartestee=newBasicTypes();testee.setUintF(uintOut);varuintIn=testee.uintF();uintOut.assertEqual(uintIn,"Uints did not match.");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 72
column: 4
content: functiontestBool(){vartestee=newBasicTypes();testee.setBoolF(boolOut);varboolIn=testee.boolF();boolOut.assertEqual(boolIn,"Bools did not match.");}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 35
column: 4
content: bytes32constantbytes32Out=0x111111;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 36
column: 4
content: intconstantintOut=-1234;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 37
column: 4
content: uintconstantuintOut=1234;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 38
column: 4
content: boolconstantboolOut=true;

SOLIDITY_VISIBILITY :15
SOLIDITY_ADDRESS_HARDCODED :1
