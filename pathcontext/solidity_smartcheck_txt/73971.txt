F:\Blockchain\dataset_new_byID\73971.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 22
column: 36
content: 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 23
column: 36
content: 0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 24
column: 36
content: 0x19c0976f590D67707E62397C87829d896Dc0f1F1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 25
column: 40
content: 0x5ef30b9986345249bc32d8928B7ee64DE9435E39

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 27
column: 36
content: 0x6B175474E89094C44Da98b954EedeAC495271d0F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 28
column: 36
content: 0x0D8775F648430679A709E98d2b0Cb6250d2887EF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 29
column: 37
content: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 33
column: 4
content: functionmkrRpow(uintx,uintn,uintbase)internalpurereturns(uintz){assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 33
column: 4
content: functionmkrRpow(uintx,uintn,uintbase)internalpurereturns(uintz){assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 34
column: 8
content: assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}

SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_ADDRESS_HARDCODED :7
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
