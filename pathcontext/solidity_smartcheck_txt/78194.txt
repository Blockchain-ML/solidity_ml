F:\Blockchain\dataset_new_byID\78194.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 5
column: 0
content: contractArbitrableExampleisArbitrable{uintdispute;uintruling;constructor(Arbitrator_arbitrator)Arbitrable(_arbitrator,"","")public{}functionexecuteRuling(uint_disputeID,uint_ruling)internal{dispute=_disputeID;ruling=_ruling;}functionstartDispute()payable{uintdisputeID=arbitrator.createDispute(1,'0x00');emitDispute(arbitrator,disputeID,"Buyer wins;Seller wins");}functionsubmitEvidence(uint_disputeID,string_evidence)payable{emitEvidence(arbitrator,_disputeID,msg.sender,_evidence);}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 17
column: 4
content: functionstartDispute()payable{uintdisputeID=arbitrator.createDispute(1,'0x00');emitDispute(arbitrator,disputeID,"Buyer wins;Seller wins");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 22
column: 4
content: functionsubmitEvidence(uint_disputeID,string_evidence)payable{emitEvidence(arbitrator,_disputeID,msg.sender,_evidence);}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 6
column: 4
content: uintdispute;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 7
column: 4
content: uintruling;

SOLIDITY_VISIBILITY :4
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
