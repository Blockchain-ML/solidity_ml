F:\Blockchain\dataset_new_byID\74073.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 19
column: 4
content: 0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 23
column: 4
content: 0x6B175474E89094C44Da98b954EedeAC495271d0F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 27
column: 37
content: 0x7e4A8391C728fEd9069B2962699AB416628B19Fa

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 116
column: 2
content: function_rpow(uint256x,uint256n,uint256base)internalpurereturns(uint256z){assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 116
column: 2
content: function_rpow(uint256x,uint256n,uint256base)internalpurereturns(uint256z){assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 32
column: 58
content: (uint256exchangeRate,uint256supplyRate)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 120
column: 4
content: assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}

SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
