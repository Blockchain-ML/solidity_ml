F:\Blockchain\dataset_new_byID\77629.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 46
column: 6
content: throw

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 45
column: 4
content: if(uint256(0)==value1){throw;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 10
column: 2
content: functionsetup(){value1=45;value2=374009283;value3=uint256(3847);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 16
column: 2
content: functiontest_oneValidEqUint1(){assertEq(value1,uint(45),"value1 should be 45");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 20
column: 2
content: functiontest_oneValidEqUint2(){assertEq(uint(374009283),value2,"value1 should be 374009283");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 24
column: 2
content: functiontest_oneValidEqUint3(){assertEq(value3,uint(3847));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 28
column: 2
content: functiontest_validEmptyEqEmpty(){assertEq(uint(0),uint(0),"zero should be zero");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 32
column: 2
content: functiontest_validEmptyEqEmpty256(){assertEq(uint256(0),uint256(0),"zero 256 should be zero");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 36
column: 2
content: functiontest_invalidEmptyNotOne(){assertEq(uint256(0),uint256(1),"zero should not equal one");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 40
column: 2
content: functiontest_invalidEmptyEqVal(){assertEq(uint256(0),value1,"zero should not equal value 1");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 44
column: 2
content: functiontestThrow_invalidZeroValue1(){if(uint256(0)==value1){throw;}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 50
column: 2
content: functiontest_invalidAddressNotZero(){assertEq(uint(address(this)),value1,"address should not equal value 1");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 54
column: 2
content: functiontest_invalidEmptyEqVal1(){assertEq(value1,uint(0),"value 1 should not equal zero");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 58
column: 2
content: functiontest_invalidValue1EqValue2(){assertEq(value1,value2,"value 1 should not equal value 2");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 62
column: 2
content: functiontest_invalidBalanceNotZero(){assertEq(this.balance,0,"contract balance should not equal zero");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 66
column: 2
content: functiontest_twoValidEqUint(){assertEq(value1,value1,"value 1 should be value 1");assertEq(value2,uint(374009283),"value 2 should be value 2");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 71
column: 2
content: functiontest_validContractBalance(){assertEq(this.balance,this.balance,"contract balance should be contract balance");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 75
column: 2
content: functiontest_twoValidEqUint2(){assertEq(uint256(3847),value3,"value 3 should be value 3");assertEq(value2,value2,"value 2 should be value 2");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 80
column: 2
content: functiontest_threeInvalidEqUint(){assertEq(uint256(3847),value1,"value 3 should not be value 1");assertEq(value2,value3,"value 2 should not be value 3");assertEq(value2,value1,"value 2 should not be value 1");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 86
column: 2
content: functiontest_threeValidEqUint(){assertEq(uint256(3847),value3,"value 3 should be value 3");assertEq(value2,value2,"value 2 should be value 2");assertEq(value1,value1,"value 1 should be value 1");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 92
column: 2
content: functiontest_fourInvalidEqUint(){assertEq(uint(0),value3,"zero should not be value 3");assertEq(uint256(3847),value2,"value 3 should not be value 2");assertEq(value1,value2,"value 1 should not be value 2");assertEq(value2,value3,"value 2 should not be value 3");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 99
column: 2
content: functiontest_fourValidEqUint(){assertEq(uint(0),uint(0),"zero should be zero");assertEq(uint256(3847),value3,"value 3 should be value 3");assertEq(value2,value2,"value 2 should be value 2");assertEq(value1,value1,"value 1 should be value 1");}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 6
column: 2
content: uintvalue1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 7
column: 2
content: uintvalue2;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 8
column: 2
content: uintvalue3;

SOLIDITY_VISIBILITY :23
SOLIDITY_DEPRECATED_CONSTRUCTIONS :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
