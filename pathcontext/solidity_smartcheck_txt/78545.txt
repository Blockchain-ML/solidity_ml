F:\Blockchain\dataset_new_byID\78545.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 39
column: 16
content: 0x22cab5a1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 40
column: 16
content: 0x8facb50c

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 41
column: 16
content: 0x2e02a716

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 42
column: 16
content: 0x60e2fbe3

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 43
column: 16
content: 0xd6cc0c14

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 44
column: 16
content: 0xc1a5bb10

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 45
column: 16
content: 0x8c0a1d7c

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 46
column: 16
content: 0x53609b03

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 47
column: 16
content: 0x238a4d1e

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 48
column: 16
content: 0x8823d53c

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 49
column: 16
content: 0x08e3857c

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 136
column: 12
content: orderList[address(0)]

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 606
column: 16
content: orderList[address(0)]

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 608
column: 16
content: orderList[address(0)]

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 608
column: 47
content: orderList[address(0)]

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 608
column: 69
content: orderList[address(0)]

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 611
column: 29
content: orderList[address(0)]

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 615
column: 12
content: orderList[address(0)]

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 692
column: 16
content: orderList[address(0)]

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 615
column: 12
content: orderList[address(0)].length--

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 769
column: 4
content: function_getSignatureParts(bytessignature)internalpurereturns(SignatureTypesignatureType,uint8v,bytes32r,bytes32s){require(signature.length==66,"INVALID_SIGNATURE_LENGTH");uint8t;assembly{r:=mload(add(signature,32))s:=mload(add(signature,64))v:=mload(add(signature,65))t:=mload(add(signature,66))}signatureType=SignatureType(t);if(v<27){v=v+27;}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 34
column: 4
content: functioninitialize(address_target)publiconlyOwner{targets[0x22cab5a1]=_target;targets[0x8facb50c]=_target;targets[0x2e02a716]=_target;targets[0x60e2fbe3]=_target;targets[0xd6cc0c14]=_target;targets[0xc1a5bb10]=_target;targets[0x8c0a1d7c]=_target;targets[0x53609b03]=_target;targets[0x238a4d1e]=_target;targets[0x8823d53c]=_target;targets[0x08e3857c]=_target;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 333
column: 12
content: if(!_verifyNewLoanOrder(loanOrder,loanOrderAux,signature)){revert("BZxOrderTaking::_addLoanOrder: loan verification failed");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 368
column: 8
content: if(loanOrder.loanTokenAddress==address(0)){revert("BZxOrderTaking::_takeLoanOrder: loanOrder.loanTokenAddress == address(0)");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 374
column: 8
content: if(!_verifyExistingLoanOrder(loanOrder,loanOrderAux,collateralTokenFilled,loanTokenAmountFilled)){revert("BZxOrderTaking::_takeLoanOrder: loan verification failed");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 394
column: 8
content: if(loanOrderAux.makerRole>1||takerRole>1||loanOrderAux.makerRole==takerRole){revert("BZxOrderTaking::_takeLoanOrder: makerRole > 1 || takerRole > 1 || makerRole == takerRole");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 415
column: 8
content: if(loanPosition.loanTokenAmountFilled!=0){revert("BZxOrderTaking::_takeLoanOrder: loanPosition.loanTokenAmountFilled != 0");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 455
column: 12
content: if(!OracleInterface(oracleAddresses[loanOrder.oracleAddress]).didTakeOrder(loanOrder.loanOrderHash,[loanOrder.loanTokenAddress,collateralTokenFilled,loanOrder.interestTokenAddress,msg.sender],[loanTokenAmountFilled,collateralTokenAmountFilled,loanOrder.interestAmount,gasUsed])){revert("BZxOrderTaking::_takeLoanOrder: OracleInterface.didTakeOrder failed");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 483
column: 8
content: if(collateralTokenAmountFilled==0){revert("BZxOrderTaking::_fillLoanOrder: collateralTokenAmountFilled == 0");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 488
column: 8
content: if(!BZxVault(vaultContract).depositToken(collateralTokenFilled,trader,collateralTokenAmountFilled)){revert("BZxOrderTaking::_fillLoanOrder: BZxVault.depositToken collateral failed");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 506
column: 12
content: if(!BZxVault(vaultContract).depositToken(loanOrder.interestTokenAddress,trader,totalInterestRequired)){revert("BZxOrderTaking::_fillLoanOrder: BZxVault.depositToken interest failed");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 516
column: 8
content: if(!BZxVault(vaultContract).depositToken(loanOrder.loanTokenAddress,lender,loanTokenAmountFilled)){revert("BZxOrderTaking::_fillLoanOrder: BZxVault.depositToken loan failed");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 529
column: 16
content: if(!BZxVault(vaultContract).transferTokenFrom(bZRxTokenContract,trader,loanOrderAux.feeRecipientAddress,paidTraderFee)){revert("BZxOrderTaking::_fillLoanOrder: BZxVault.transferTokenFrom traderRelayFee failed");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 541
column: 16
content: if(!BZxVault(vaultContract).transferTokenFrom(bZRxTokenContract,lender,loanOrderAux.feeRecipientAddress,paidLenderFee)){revert("BZxOrderTaking::_fillLoanOrder: BZxVault.transferTokenFrom lenderRelayFee failed");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 563
column: 8
content: if(loanOrder.loanTokenAddress==address(0)){revert("BZxOrderTaking::cancelLoanOrder: loanOrder.loanTokenAddress == address(0)");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 629
column: 8
content: if(loanOrderAux.maker==address(0)||loanOrder.loanTokenAddress==address(0)||loanOrder.interestTokenAddress==address(0)){revert("BZxOrderTaking::_verifyNewLoanOrder: loanOrderAux.loanTokenAddress == address(0) || loanOrder.loanTokenAddress == address(0) || loanOrder.interestTokenAddress == address(0)");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 635
column: 8
content: if(loanOrderAux.expirationUnixTimestampSec>0&&block.timestamp>=loanOrderAux.expirationUnixTimestampSec){revert("BZxOrderTaking::_verifyNewLoanOrder: block.timestamp >= loanOrderAux.expirationUnixTimestampSec");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 639
column: 8
content: if(loanOrder.maxDurationUnixTimestampSec==0||loanOrder.maxDurationUnixTimestampSec>block.timestamp+loanOrder.maxDurationUnixTimestampSec){revert("BZxOrderTaking::_verifyNewLoanOrder: loanOrder.maxDurationUnixTimestampSec == 0 || loanOrder.maxDurationUnixTimestampSec causes overflow");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 643
column: 8
content: if(!OracleRegistry(oracleRegistryContract).hasOracle(loanOrder.oracleAddress)||oracleAddresses[loanOrder.oracleAddress]==address(0)){revert("BZxOrderTaking::_verifyNewLoanOrder: Oracle doesn't exist");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 647
column: 8
content: if(loanOrder.maintenanceMarginAmount==0||loanOrder.maintenanceMarginAmount>=loanOrder.initialMarginAmount){revert("BZxOrderTaking::_verifyNewLoanOrder: loanOrder.maintenanceMarginAmount == 0 || loanOrder.maintenanceMarginAmount >= loanOrder.initialMarginAmount");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 651
column: 8
content: if(!_isValidSignature(loanOrderAux.maker,loanOrder.loanOrderHash,signature)){revert("BZxOrderTaking::_verifyNewLoanOrder: signature invalid");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 670
column: 8
content: if(loanOrderAux.maker==msg.sender){revert("BZxOrderTaking::_verifyExistingLoanOrder: loanOrderAux.maker == msg.sender");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 674
column: 8
content: if(collateralTokenFilled==address(0)){revert("BZxOrderTaking::_verifyExistingLoanOrder: collateralTokenFilled == address(0)");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 678
column: 8
content: if(loanOrderAux.expirationUnixTimestampSec>0&&block.timestamp>=loanOrderAux.expirationUnixTimestampSec){revert("BZxOrderTaking::_verifyExistingLoanOrder: block.timestamp >= loanOrderAux.expirationUnixTimestampSec");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 682
column: 8
content: if(loanOrder.maxDurationUnixTimestampSec==0||loanOrder.maxDurationUnixTimestampSec>block.timestamp+loanOrder.maxDurationUnixTimestampSec){revert("BZxOrderTaking::_verifyExistingLoanOrder: loanOrder.maxDurationUnixTimestampSec == 0 || loanOrder.maxDurationUnixTimestampSec causes overflow");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 687
column: 8
content: if(remainingLoanTokenAmount<loanTokenAmountFilled){revert("BZxOrderTaking::_verifyExistingLoanOrder: remainingLoanTokenAmount < loanTokenAmountFilled");}elseif(remainingLoanTokenAmount>loanTokenAmountFilled){if(!orderIndexes[loanOrder.loanOrderHash].active){orderList[address(0)].push(loanOrder.loanOrderHash);orderIndexes[loanOrder.loanOrderHash]=LoanOrderIndex({index:orderList[address(0)].length-1,active:true});}}else{_removeLoanOrder(loanOrder.loanOrderHash);}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 16
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 769
column: 4
content: function_getSignatureParts(bytessignature)internalpurereturns(SignatureTypesignatureType,uint8v,bytes32r,bytes32s){require(signature.length==66,"INVALID_SIGNATURE_LENGTH");uint8t;assembly{r:=mload(add(signature,32))s:=mload(add(signature,64))v:=mload(add(signature,65))t:=mload(add(signature,66))}signatureType=SignatureType(t);if(v<27){v=v+27;}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 773
column: 16
content: (SignatureTypesignatureType,uint8v,bytes32r,bytes32s)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 253
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 305
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 624
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 713
column: 8
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 770
column: 8
content: bytessignature

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 785
column: 8
content: assembly{r:=mload(add(signature,32))s:=mload(add(signature,64))v:=mload(add(signature,65))t:=mload(add(signature,66))}

SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_REVERT_REQUIRE :24
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_ADDRESS_HARDCODED :19
SOLIDITY_UPGRADE_TO_050 :5
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
