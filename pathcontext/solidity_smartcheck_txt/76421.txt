F:\Blockchain\dataset_new_byID\76421.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 147
column: 30
content: 0xffffFFFfFFffffffffffffffFfFFFfffFFFfFFfE

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 350
column: 15
content: 0x0d35a7ca

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 787
column: 12
content: receiver=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 788
column: 12
content: bridge=address(0)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 203
column: 8
content: for(uint256i=0;i<validators.length;i++){blocksCreated[stakingEpoch][validators[i]]=0;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 294
column: 12
content: for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 303
column: 12
content: for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 313
column: 12
content: for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 334
column: 8
content: for(i=0;i<_ercToNativeBridgesAllowed.length;i++){_ercToNativeBridgeAllowed[_ercToNativeBridgesAllowed[i]]=false;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 340
column: 8
content: for(i=0;i<_bridgesAllowed.length;i++){_ercToNativeBridgeAllowed[_bridgesAllowed[i]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 470
column: 12
content: for(i=0;i<miningAddresses.length;i++){if(miningAddress==miningAddresses[i]){returnvalidatorShare(stakingEpoch,snapshotPoolValidatorStakeAmount[stakingEpoch][miningAddress],snapshotPoolTotalStakeAmount[stakingEpoch][miningAddress],REWARD_PERCENT_MULTIPLIER);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 482
column: 12
content: for(i=0;i<miningAddresses.length;i++){if(miningAddress==miningAddresses[i]){returnvalidatorShare(stakingEpoch,snapshotPoolValidatorStakeAmount[stakingEpoch][miningAddress],snapshotPoolTotalStakeAmount[stakingEpoch][miningAddress],REWARD_PERCENT_MULTIPLIER);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 603
column: 16
content: for(uint256i=0;i<_validators.length;i++){uint256poolReward=rewardToDistribute*_blocksCreatedShareNum[i]/_blocksCreatedShareDenom;epochPoolNativeReward[_stakingEpoch][_validators[i]]=poolReward;distributedAmount+=poolReward;if(poolReward!=0){_epochsPoolGotRewardFor[_validators[i]].push(_stakingEpoch);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 657
column: 12
content: for(uint256i=0;i<validators.length;i++){if(!validatorSetContract.isValidatorBanned(validators[i])&&snapshotPoolValidatorStakeAmount[_stakingEpoch][validators[i]]!=0){blocksCreatedShareNum[i]=blocksCreated[_stakingEpoch][validators[i]];}else{blocksCreatedShareNum[i]=0;}blocksCreatedShareDenom+=blocksCreatedShareNum[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 699
column: 8
content: for(uint256i=0;i<_ercToNativeBridgesAllowed.length;i++){addressbridge=_ercToNativeBridgesAllowed[i];mintedTotallyByBridge[bridge]=_prevBlockRewardContract.mintedTotallyByBridge(bridge);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 726
column: 8
content: for(uint256i=0;i<_validators.length;i++){snapshotTotalStakeAmount+=snapshotPoolTotalStakeAmount[_stakingEpoch][_validators[i]];}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 376
column: 4
content: functiononTokenTransfer(address,uint256,bytesmemory)publicpurereturns(bool){revert();}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 203
column: 8
content: for(uint256i=0;i<validators.length;i++){blocksCreated[stakingEpoch][validators[i]]=0;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 294
column: 12
content: for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 303
column: 12
content: for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 313
column: 12
content: for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 334
column: 8
content: for(i=0;i<_ercToNativeBridgesAllowed.length;i++){_ercToNativeBridgeAllowed[_ercToNativeBridgesAllowed[i]]=false;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 340
column: 8
content: for(i=0;i<_bridgesAllowed.length;i++){_ercToNativeBridgeAllowed[_bridgesAllowed[i]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 409
column: 8
content: for(i=0;i<length;i++){uint256epoch=epochs[i];if(isDelegator){if(epoch<firstEpoch){continue;}if(lastEpoch<=epoch&&lastEpoch!=0){break;}}if(!stakingContract.rewardWasTaken(_poolStakingAddress,_staker,epoch)){tmp[tmpLength++]=epoch;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 470
column: 12
content: for(i=0;i<miningAddresses.length;i++){if(miningAddress==miningAddresses[i]){returnvalidatorShare(stakingEpoch,snapshotPoolValidatorStakeAmount[stakingEpoch][miningAddress],snapshotPoolTotalStakeAmount[stakingEpoch][miningAddress],REWARD_PERCENT_MULTIPLIER);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 482
column: 12
content: for(i=0;i<miningAddresses.length;i++){if(miningAddress==miningAddresses[i]){returnvalidatorShare(stakingEpoch,snapshotPoolValidatorStakeAmount[stakingEpoch][miningAddress],snapshotPoolTotalStakeAmount[stakingEpoch][miningAddress],REWARD_PERCENT_MULTIPLIER);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 603
column: 16
content: for(uint256i=0;i<_validators.length;i++){uint256poolReward=rewardToDistribute*_blocksCreatedShareNum[i]/_blocksCreatedShareDenom;epochPoolNativeReward[_stakingEpoch][_validators[i]]=poolReward;distributedAmount+=poolReward;if(poolReward!=0){_epochsPoolGotRewardFor[_validators[i]].push(_stakingEpoch);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 657
column: 12
content: for(uint256i=0;i<validators.length;i++){if(!validatorSetContract.isValidatorBanned(validators[i])&&snapshotPoolValidatorStakeAmount[_stakingEpoch][validators[i]]!=0){blocksCreatedShareNum[i]=blocksCreated[_stakingEpoch][validators[i]];}else{blocksCreatedShareNum[i]=0;}blocksCreatedShareDenom+=blocksCreatedShareNum[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 699
column: 8
content: for(uint256i=0;i<_ercToNativeBridgesAllowed.length;i++){addressbridge=_ercToNativeBridgesAllowed[i];mintedTotallyByBridge[bridge]=_prevBlockRewardContract.mintedTotallyByBridge(bridge);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 726
column: 8
content: for(uint256i=0;i<_validators.length;i++){snapshotTotalStakeAmount+=snapshotPoolTotalStakeAmount[_stakingEpoch][_validators[i]];}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 12
column: 0
content: contractSacrifice{constructor(addresspayable_recipient)publicpayable{selfdestruct(_recipient);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 20
column: 0
content: contractBlockRewardAuRaBaseisUpgradeableOwned,IBlockRewardAuRa{usingSafeMathforuint256;mapping(address=>uint256[])internal_epochsPoolGotRewardFor;mapping(address=>bool)internal_ercToNativeBridgeAllowed;address[]internal_ercToNativeBridgesAllowed;IBlockRewardAuRainternal_prevBlockRewardContract;boolinternal_queueERInitialized;uint256internal_queueERFirst;uint256internal_queueERLast;structExtraReceiverQueue{uint256amount;addressbridge;addressreceiver;}mapping(uint256=>ExtraReceiverQueue)internal_queueER;uint256[25]private______gapForInternal;mapping(uint256=>mapping(address=>uint256))publicblocksCreated;uint256publicbridgeNativeReward;mapping(uint256=>mapping(address=>uint256))publicepochPoolNativeReward;mapping(address=>uint256)publicmintedForAccount;mapping(address=>mapping(uint256=>uint256))publicmintedForAccountInBlock;mapping(uint256=>uint256)publicmintedInBlock;uint256publicmintedTotally;mapping(address=>uint256)publicmintedTotallyByBridge;uint256publicnativeRewardUndistributed;mapping(uint256=>mapping(address=>uint256))publicsnapshotPoolTotalStakeAmount;mapping(uint256=>mapping(address=>uint256))publicsnapshotPoolValidatorStakeAmount;mapping(uint256=>uint256)publicvalidatorMinRewardPercent;IValidatorSetAuRapublicvalidatorSetContract;uint256[25]private______gapForPublic;eventAddedReceiver(uint256amount,addressindexedreceiver,addressindexedbridge);eventBridgeNativeRewardAdded(uint256amount,uint256cumulativeAmount,addressindexedbridge);eventMintedNative(address[]receivers,uint256[]rewards);modifieronlyErcToNativeBridge{require(_ercToNativeBridgeAllowed[msg.sender]);_;}modifieronlyInitialized{require(isInitialized());_;}modifieronlySystem{require(msg.sender==0xffffFFFfFFffffffffffffffFfFFFfffFFFfFFfE);_;}modifieronlyStakingContract(){require(msg.sender==address(validatorSetContract.stakingContract()));_;}modifieronlyValidatorSetContract(){require(msg.sender==address(validatorSetContract));_;}function()payableexternal{revert();}functionaddBridgeNativeFeeReceivers(uint256_amount)external{addBridgeNativeRewardReceivers(_amount);}functionaddBridgeNativeRewardReceivers(uint256_amount)publiconlyErcToNativeBridge{require(_amount!=0);bridgeNativeReward=bridgeNativeReward.add(_amount);emitBridgeNativeRewardAdded(_amount,bridgeNativeReward,msg.sender);}functionaddExtraReceiver(uint256_amount,address_receiver)externalonlyErcToNativeBridge{require(_amount!=0);require(_queueERInitialized);_enqueueExtraReceiver(_amount,_receiver,msg.sender);emitAddedReceiver(_amount,_receiver,msg.sender);}functionclearBlocksCreated()externalonlyValidatorSetContract{IStakingAuRastakingContract=IStakingAuRa(validatorSetContract.stakingContract());uint256stakingEpoch=stakingContract.stakingEpoch();address[]memoryvalidators=validatorSetContract.getValidators();for(uint256i=0;i<validators.length;i++){blocksCreated[stakingEpoch][validators[i]]=0;}}functioninitialize(address_validatorSet,address_prevBlockReward)external{require(_getCurrentBlockNumber()==0||msg.sender==_admin());require(!isInitialized());require(_validatorSet!=address(0));validatorSetContract=IValidatorSetAuRa(_validatorSet);validatorMinRewardPercent[0]=VALIDATOR_MIN_REWARD_PERCENT;_prevBlockRewardContract=IBlockRewardAuRa(_prevBlockReward);}functionreward(address[]calldatabenefactors,uint16[]calldatakind)externalonlySystemreturns(address[]memoryreceiversNative,uint256[]memoryrewardsNative){if(benefactors.length!=kind.length||benefactors.length!=1||kind[0]!=0){return(newaddress[](0),newuint256[](0));}if(validatorSetContract==IValidatorSetAuRa(0)||!validatorSetContract.isValidator(benefactors[0])){return(newaddress[](0),newuint256[](0));}IRandomAuRa(validatorSetContract.randomContract()).onFinishCollectRound();if(!_queueERInitialized){_queueERFirst=1;_queueERLast=0;_queueERInitialized=true;_migrateMintingStatistics();}uint256bridgeQueueLimit=100;IStakingAuRastakingContract=IStakingAuRa(validatorSetContract.stakingContract());uint256stakingEpoch=stakingContract.stakingEpoch();uint256stakingEpochEndBlock=stakingContract.stakingEpochEndBlock();uint256nativeTotalRewardAmount=0;if(validatorSetContract.validatorSetApplyBlock()!=0){if(stakingEpoch!=0&&!validatorSetContract.isValidatorBanned(benefactors[0])){blocksCreated[stakingEpoch][benefactors[0]]++;}}if(_getCurrentBlockNumber()==stakingEpochEndBlock){if(stakingEpoch!=0){nativeTotalRewardAmount=_distributeRewards(stakingContract,stakingEpoch,stakingEpochEndBlock);}validatorSetContract.newValidatorSet();uint256i;uint256nextStakingEpoch=stakingEpoch+1;address[]memoryminingAddresses;miningAddresses=validatorSetContract.getPendingValidators();for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}miningAddresses=validatorSetContract.getValidators();for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}(miningAddresses,)=validatorSetContract.validatorsToBeFinalized();for(i=0;i<miningAddresses.length;i++){_snapshotPoolStakeAmounts(stakingContract,nextStakingEpoch,miningAddresses[i]);}validatorMinRewardPercent[nextStakingEpoch]=VALIDATOR_MIN_REWARD_PERCENT;bridgeQueueLimit=0;}return_mintNativeCoins(nativeTotalRewardAmount,bridgeQueueLimit);}functionsetErcToNativeBridgesAllowed(address[]calldata_bridgesAllowed)externalonlyOwneronlyInitialized{uint256i;for(i=0;i<_ercToNativeBridgesAllowed.length;i++){_ercToNativeBridgeAllowed[_ercToNativeBridgesAllowed[i]]=false;}_ercToNativeBridgesAllowed=_bridgesAllowed;for(i=0;i<_bridgesAllowed.length;i++){_ercToNativeBridgeAllowed[_bridgesAllowed[i]]=true;}}functionblockRewardContractId()publicpurereturns(bytes4){return0x0d35a7ca;}functionepochsPoolGotRewardFor(address_miningAddress)publicviewreturns(uint256[]memory){return_epochsPoolGotRewardFor[_miningAddress];}functionercToNativeBridgesAllowed()publicviewreturns(address[]memory){return_ercToNativeBridgesAllowed;}functionextraReceiversQueueSize()publicviewreturns(uint256){return_queueERLast+1-_queueERFirst;}functionisInitialized()publicviewreturns(bool){returnvalidatorSetContract!=IValidatorSetAuRa(0);}functiononTokenTransfer(address,uint256,bytesmemory)publicpurereturns(bool){revert();}functionepochsToClaimRewardFrom(address_poolStakingAddress,address_staker)publicviewreturns(uint256[]memoryepochsToClaimFrom){addressminingAddress=validatorSetContract.miningByStakingAddress(_poolStakingAddress);IStakingAuRastakingContract=IStakingAuRa(validatorSetContract.stakingContract());boolisDelegator=_poolStakingAddress!=_staker;uint256firstEpoch;uint256lastEpoch;if(isDelegator){firstEpoch=stakingContract.stakeFirstEpoch(_poolStakingAddress,_staker);if(firstEpoch==0){return(newuint256[](0));}lastEpoch=stakingContract.stakeLastEpoch(_poolStakingAddress,_staker);}uint256[]storageepochs=_epochsPoolGotRewardFor[miningAddress];uint256length=epochs.length;uint256[]memorytmp=newuint256[](length);uint256tmpLength=0;uint256i;for(i=0;i<length;i++){uint256epoch=epochs[i];if(isDelegator){if(epoch<firstEpoch){continue;}if(lastEpoch<=epoch&&lastEpoch!=0){break;}}if(!stakingContract.rewardWasTaken(_poolStakingAddress,_staker,epoch)){tmp[tmpLength++]=epoch;}}epochsToClaimFrom=newuint256[](tmpLength);for(i=0;i<tmpLength;i++){epochsToClaimFrom[i]=tmp[i];}}functionvalidatorRewardPercent(address_stakingAddress)publicviewreturns(uint256){IStakingAuRastakingContract=IStakingAuRa(validatorSetContract.stakingContract());uint256stakingEpoch=stakingContract.stakingEpoch();if(stakingEpoch==0){return0;}addressminingAddress=validatorSetContract.miningByStakingAddress(_stakingAddress);if(validatorSetContract.isValidator(miningAddress)){returnvalidatorShare(stakingEpoch,snapshotPoolValidatorStakeAmount[stakingEpoch][miningAddress],snapshotPoolTotalStakeAmount[stakingEpoch][miningAddress],REWARD_PERCENT_MULTIPLIER);}if(validatorSetContract.validatorSetApplyBlock()==0){address[]memoryminingAddresses;uint256i;miningAddresses=validatorSetContract.getPendingValidators();for(i=0;i<miningAddresses.length;i++){if(miningAddress==miningAddresses[i]){returnvalidatorShare(stakingEpoch,snapshotPoolValidatorStakeAmount[stakingEpoch][miningAddress],snapshotPoolTotalStakeAmount[stakingEpoch][miningAddress],REWARD_PERCENT_MULTIPLIER);}}(miningAddresses,)=validatorSetContract.validatorsToBeFinalized();for(i=0;i<miningAddresses.length;i++){if(miningAddress==miningAddresses[i]){returnvalidatorShare(stakingEpoch,snapshotPoolValidatorStakeAmount[stakingEpoch][miningAddress],snapshotPoolTotalStakeAmount[stakingEpoch][miningAddress],REWARD_PERCENT_MULTIPLIER);}}}returnvalidatorShare(stakingEpoch,stakingContract.stakeAmount(_stakingAddress,_stakingAddress),stakingContract.stakeAmountTotal(_stakingAddress),REWARD_PERCENT_MULTIPLIER);}functiondelegatorShare(uint256_stakingEpoch,uint256_delegatorStaked,uint256_validatorStaked,uint256_totalStaked,uint256_poolReward)publicviewreturns(uint256){if(_delegatorStaked==0||_validatorStaked==0||_totalStaked==0){return0;}uint256share=0;uint256delegatorsStaked=_totalStaked>=_validatorStaked?_totalStaked-_validatorStaked:0;uint256validatorMinPercent=validatorMinRewardPercent[_stakingEpoch];if(_validatorStaked*(100-validatorMinPercent)>delegatorsStaked*validatorMinPercent){share=_poolReward*_delegatorStaked/_totalStaked;}else{share=_poolReward*_delegatorStaked*(100-validatorMinPercent)/(delegatorsStaked*100);}returnshare;}functionvalidatorShare(uint256_stakingEpoch,uint256_validatorStaked,uint256_totalStaked,uint256_poolReward)publicviewreturns(uint256){if(_validatorStaked==0||_totalStaked==0){return0;}uint256share=0;uint256delegatorsStaked=_totalStaked>=_validatorStaked?_totalStaked-_validatorStaked:0;uint256validatorMinPercent=validatorMinRewardPercent[_stakingEpoch];if(_validatorStaked*(100-validatorMinPercent)>delegatorsStaked*validatorMinPercent){share=_poolReward*_validatorStaked/_totalStaked;}else{share=_poolReward*validatorMinPercent/100;}returnshare;}uint256internalconstantVALIDATOR_MIN_REWARD_PERCENT=30;uint256internalconstantREWARD_PERCENT_MULTIPLIER=1000000;function_coinInflationAmount(uint256,address[]memory)internalviewreturns(uint256);function_distributeNativeRewards(uint256_stakingEpoch,uint256_totalRewardShareNum,uint256_totalRewardShareDenom,address[]memory_validators,uint256[]memory_blocksCreatedShareNum,uint256_blocksCreatedShareDenom)internalreturns(uint256){uint256totalReward=bridgeNativeReward+nativeRewardUndistributed;totalReward+=_coinInflationAmount(_stakingEpoch,_validators);if(totalReward==0){return0;}bridgeNativeReward=0;uint256rewardToDistribute=0;uint256distributedAmount=0;if(_blocksCreatedShareDenom!=0&&_totalRewardShareDenom!=0){rewardToDistribute=totalReward*_totalRewardShareNum/_totalRewardShareDenom;if(rewardToDistribute!=0){for(uint256i=0;i<_validators.length;i++){uint256poolReward=rewardToDistribute*_blocksCreatedShareNum[i]/_blocksCreatedShareDenom;epochPoolNativeReward[_stakingEpoch][_validators[i]]=poolReward;distributedAmount+=poolReward;if(poolReward!=0){_epochsPoolGotRewardFor[_validators[i]].push(_stakingEpoch);}}}}nativeRewardUndistributed=totalReward-distributedAmount;returndistributedAmount;}function_distributeTokenRewards(address,uint256,uint256,uint256,address[]memory,uint256[]memory,uint256)internal;function_distributeRewards(IStakingAuRa_stakingContract,uint256_stakingEpoch,uint256_stakingEpochEndBlock)internalreturns(uint256nativeTotalRewardAmount){address[]memoryvalidators=validatorSetContract.getValidators();uint256totalRewardShareNum=0;uint256totalRewardShareDenom=1;uint256realFinalizeBlock=validatorSetContract.validatorSetApplyBlock();if(realFinalizeBlock!=0){uint256idealFinalizeBlock=_stakingContract.stakingEpochStartBlock()+validatorSetContract.MAX_VALIDATORS()*2/3+1;if(realFinalizeBlock<idealFinalizeBlock){realFinalizeBlock=idealFinalizeBlock;}totalRewardShareNum=_stakingEpochEndBlock-realFinalizeBlock+1;totalRewardShareDenom=_stakingEpochEndBlock-idealFinalizeBlock+1;}uint256[]memoryblocksCreatedShareNum=newuint256[](validators.length);uint256blocksCreatedShareDenom=0;if(totalRewardShareNum!=0){for(uint256i=0;i<validators.length;i++){if(!validatorSetContract.isValidatorBanned(validators[i])&&snapshotPoolValidatorStakeAmount[_stakingEpoch][validators[i]]!=0){blocksCreatedShareNum[i]=blocksCreated[_stakingEpoch][validators[i]];}else{blocksCreatedShareNum[i]=0;}blocksCreatedShareDenom+=blocksCreatedShareNum[i];}}nativeTotalRewardAmount=_distributeNativeRewards(_stakingEpoch,totalRewardShareNum,totalRewardShareDenom,validators,blocksCreatedShareNum,blocksCreatedShareDenom);_distributeTokenRewards(address(_stakingContract),_stakingEpoch,totalRewardShareNum,totalRewardShareDenom,validators,blocksCreatedShareNum,blocksCreatedShareDenom);}function_migrateMintingStatistics()internal{if(_prevBlockRewardContract==IBlockRewardAuRa(0)){return;}for(uint256i=0;i<_ercToNativeBridgesAllowed.length;i++){addressbridge=_ercToNativeBridgesAllowed[i];mintedTotallyByBridge[bridge]=_prevBlockRewardContract.mintedTotallyByBridge(bridge);}if(_ercToNativeBridgesAllowed.length!=0){mintedTotally=_prevBlockRewardContract.mintedTotally();}}function_getCurrentBlockNumber()internalviewreturns(uint256){returnblock.number;}function_inflationAmount(uint256_stakingEpoch,address[]memory_validators,uint256_inflationRate)internalviewreturns(uint256){if(_inflationRate==0)return0;uint256snapshotTotalStakeAmount=0;for(uint256i=0;i<_validators.length;i++){snapshotTotalStakeAmount+=snapshotPoolTotalStakeAmount[_stakingEpoch][_validators[i]];}returnsnapshotTotalStakeAmount*_inflationRate/1ether;}function_mintNativeCoins(uint256_nativeTotalRewardAmount,uint256_queueLimit)internalreturns(address[]memoryreceivers,uint256[]memoryrewards){uint256extraLength=extraReceiversQueueSize();if(extraLength>_queueLimit){extraLength=_queueLimit;}booltotalRewardNotEmpty=_nativeTotalRewardAmount!=0;receivers=newaddress[](extraLength+(totalRewardNotEmpty?1:0));rewards=newuint256[](receivers.length);for(uint256i=0;i<extraLength;i++){(uint256amount,addressreceiver,addressbridge)=_dequeueExtraReceiver();receivers[i]=receiver;rewards[i]=amount;_setMinted(amount,receiver,bridge);}if(totalRewardNotEmpty){receivers[extraLength]=address(this);rewards[extraLength]=_nativeTotalRewardAmount;}emitMintedNative(receivers,rewards);return(receivers,rewards);}function_dequeueExtraReceiver()internalreturns(uint256amount,addressreceiver,addressbridge){uint256queueFirst=_queueERFirst;uint256queueLast=_queueERLast;if(queueLast<queueFirst){amount=0;receiver=address(0);bridge=address(0);}else{amount=_queueER[queueFirst].amount;receiver=_queueER[queueFirst].receiver;bridge=_queueER[queueFirst].bridge;delete_queueER[queueFirst];_queueERFirst++;}}function_enqueueExtraReceiver(uint256_amount,address_receiver,address_bridge)internal{uint256queueLast=_queueERLast+1;_queueER[queueLast]=ExtraReceiverQueue({amount:_amount,bridge:_bridge,receiver:_receiver});_queueERLast=queueLast;}function_setMinted(uint256_amount,address_account,address_bridge)internal{uint256blockNumber=_getCurrentBlockNumber();mintedForAccountInBlock[_account][blockNumber]=_amount;mintedForAccount[_account]+=_amount;mintedInBlock[blockNumber]+=_amount;mintedTotallyByBridge[_bridge]+=_amount;mintedTotally+=_amount;}function_snapshotPoolStakeAmounts(IStakingAuRa_stakingContract,uint256_stakingEpoch,address_miningAddress)internal{if(snapshotPoolTotalStakeAmount[_stakingEpoch][_miningAddress]!=0){return;}addressstakingAddress=validatorSetContract.stakingByMiningAddress(_miningAddress);uint256totalAmount=_stakingContract.stakeAmountTotal(stakingAddress);if(totalAmount==0){return;}snapshotPoolTotalStakeAmount[_stakingEpoch][_miningAddress]=totalAmount;snapshotPoolValidatorStakeAmount[_stakingEpoch][_miningAddress]=_stakingContract.stakeAmount(stakingAddress,stakingAddress);}function_transferNativeReward(uint256_amount,address<missing ')'>payable_to)internal{if<missing ';'>(_amount!=0&&!_to.send(_amount)){(newSacrifice).value(_amount)(_to);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 331
column: 4
content: functionsetErcToNativeBridgesAllowed(address[]calldata_bridgesAllowed)externalonlyOwneronlyInitialized{uint256i;for(i=0;i<_ercToNativeBridgesAllowed.length;i++){_ercToNativeBridgeAllowed[_ercToNativeBridgesAllowed[i]]=false;}_ercToNativeBridgesAllowed=_bridgesAllowed;for(i=0;i<_bridgesAllowed.length;i++){_ercToNativeBridgeAllowed[_bridgesAllowed[i]]=true;}}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 44
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 103
column: 16
content: private

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 166
column: 33
content: {revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 21
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 231
column: 15
content: (address[]memoryreceiversNative,uint256[]memoryrewardsNative)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 746
column: 15
content: (address[]memoryreceivers,uint256[]memoryrewards)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 781
column: 53
content: (uint256amount,addressreceiver,addressbridge)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 13
column: 4
content: constructor(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 854
column: 4
content: function_transferNativeReward(uint256_amount,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 14
column: 20
content: (_recipient);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 855
column: 11
content: (_amount!=0&&!_to.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 855
column: 33
content: send(_amount)){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 859
column: 12
content: (newSacrifice).value

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 859
column: 33
content: (_amount)(_to);

SOLIDITY_VISIBILITY :7
SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_LOCKED_MONEY :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :12
SOLIDITY_ADDRESS_HARDCODED :4
SOLIDITY_GAS_LIMIT_IN_LOOPS :13
SOLIDITY_SHOULD_RETURN_STRUCT :3
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1
