F:\Blockchain\dataset_new_byID\72599.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 4
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 33
column: 14
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 34
column: 11
content: private

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 106
column: 4
content: functioncreateMSA(uint256[]calldata_proof,uint256[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 108
column: 27
content: _inputs,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 109
column: 8
content: bytes32_newMSACommitment)external

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 110
column: 15
content: overridereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 110
column: 32
content: (bool){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 113
column: 8
content: uint256gasCheckpoint=gasleft();

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 116
column: 8
content: bytes31publicInputHash=bytes31(bytes32(_inputs[0])<<8);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 117
column: 8
content: bytes31publicInputHashCheck=bytes31(sha256(abi.encodePacked(_newMSACommitment))<<8);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 118
column: 8
content: require(publicInputHashCheck==

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 118
column: 40
content: publicInputHash,"publicInputHash cannot be reconciled");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 121
column: 8
content: uint256gasUsedByShieldContract=gasCheckpoint-gasleft();

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 122
column: 8
content: gasCheckpoint=gasleft

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 122
column: 31
content: ();

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 125
column: 8
content: boolresult=verifier.verify(_proof,_inputs,vks[uint(TransactionTypes.CreateMSA)]);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 126
column: 8
content: require(result,"The proof has not been verified by the contract");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 129
column: 8
content: uint256gasUsedByVerifierContract=gasCheckpoint-gasleft();

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 130
column: 8
content: gasCheckpoint=gasleft

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 130
column: 31
content: ();commitments[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 137
column: 20
content: _newMSACommitment]=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 137
column: 41
content: _newMSACommitment;latestRoot=insertLeaf(_newMSACommitment);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 139
column: 8
content: roots[latestRoot]=latestRoot;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 141
column: 8
content: emitNewCommitment

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 141
column: 26
content: (_newMSACommitment);gasUsedByShieldContract=gasUsedByShieldContract+gasCheckpoint-gasleft();

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 145
column: 8
content: emitGasUsed

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 145
column: 20
content: (gasUsedByShieldContract,gasUsedByVerifierContract);

SOLIDITY_VISIBILITY :25
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :2
