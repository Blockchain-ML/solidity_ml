F:\Blockchain\dataset_new_byID\76359.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 10
column: 0
content: contractChestisS1Vendor,TradeToggleERC20,ERC20Burnable{structPurchase{uint256paymentID;uint256count;}uintpublicproductCap;uintpublicsold;IPackpublicpack;PurchaseinternaltempPurchase;constructor(stringmemory_name,stringmemory_symbol,IPack_pack,uint256_productCap,S1Cap_cap,IReferral_referral,bytes32_sku,uint256_price,CreditCardEscrow_escrow,PurchaseProcessor_pay)publicS1Vendor(_cap,_referral,_sku,_price,_escrow,_pay)TradeToggleERC20(_name,_symbol,0){require(address(_pack)!=address(0),"S1Chest: pack must be set on construction");productCap=_productCap;pack=_pack;}functionpurchaseFor(addresspayable_user,uint256_quantity,PurchaseProcessor.PaymentParamsmemory_payment,addresspayable_referrer)publicpayablereturns(PurchaseProcessor.Receiptmemory){require(productCap==0||productCap>=sold.add(_quantity),"IM:CappedVendor: product cap has been exhausted");sold=sold.add(_quantity);PurchaseProcessor.Receiptmemoryreceipt=super.purchaseFor(_user,_quantity,_payment,_referrer);if(_payment.currency==PurchaseProcessor.Currency.ETH||_payment.escrowFor==0){_mintChests(_user,_quantity,receipt.id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 50
column: 4
content: functionpurchaseFor(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 51
column: 24
content: _user,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 52
column: 8
content: uint256_quantity,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 53
column: 8
content: PurchaseProcessor.PaymentParamsmemory_payment,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 54
column: 8
content: addresspayable_referrer)publicpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 55
column: 29
content: (PurchaseProcessor.Receiptmemory){require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 57
column: 15
content: (productCap==0||productCap>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 58
column: 45
content: sold.add(_quantity),"IM:CappedVendor: product cap has been exhausted");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 62
column: 8
content: sold=sold.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 62
column: 20
content: add(_quantity);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 64
column: 8
content: PurchaseProcessor.Receiptmemoryreceipt=super.purchaseFor(_user,_quantity,_payment,_referrer);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 71
column: 11
content: (_payment.currency==PurchaseProcessor.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 71
column: 51
content: Currency.ETH||_payment.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 71
column: 76
content: escrowFor==0){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 72
column: 12
content: _mintChests(_user,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 72
column: 31
content: _quantity,receipt.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 72
column: 50
content: id);

SOLIDITY_VISIBILITY :17
SOLIDITY_LOCKED_MONEY :1
