C:\Users\hp\DataSet\contracts\ropsten\f0\f0243b3e8102b7f86942b68b9e12cfaa0e3e6233_OffchainRolling.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 42
column: 4
content: functionsetNotary(addressnewNotary,booltarg)public{require(msg.sender==owner);notary[newNotary]=targ;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 128
column: 4
content: functiongetData(bytesdata)internalpurereturns(bytes32[]rem){bytes32[]memoryout_b;uintlen=data.length/32;if(data.length%32!=0){len+=1;}assembly{out_b:=mload(0x40)mstore(0x40,add(mload(0x40),add(mul(len,0x20),0x40)))mstore(out_b,len)for{leti:=0}lt(i,len){i:=add(i,0x1)}{letmem_slot:=add(out_b,mul(0x20,add(i,1)))letload_slot:=add(data,mul(0x20,add(i,1)))mstore(mem_slot,mload(load_slot))}}return(out_b);}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 214
column: 91
content: (bool,address)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 231
column: 66
content: (bool,address)

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 117
column: 23
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 125
column: 56
content: tx.origin

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 68
column: 126
content: uint8[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 104
column: 49
content: bytesRecover

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 109
column: 45
content: bytesRecover

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 114
column: 98
content: bytesRecover

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 128
column: 21
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 128
column: 56
content: bytes32[]rem

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 147
column: 101
content: bytesRecover

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 231
column: 38
content: bytessig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 251
column: 36
content: bytessig

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 134
column: 12
content: assembly{out_b:=mload(0x40)mstore(0x40,add(mload(0x40),add(mul(len,0x20),0x40)))mstore(out_b,len)for{leti:=0}lt(i,len){i:=add(i,0x1)}{letmem_slot:=add(out_b,mul(0x20,add(i,1)))letload_slot:=add(data,mul(0x20,add(i,1)))mstore(mem_slot,mload(load_slot))}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 218
column: 8
content: assembly{letsize:=mload(0x40)mstore(size,hash)mstore(add(size,32),v)mstore(add(size,64),r)mstore(add(size,96),s)ret:=call(3000,1,0,size,128,size,32)addr:=mload(size)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 239
column: 8
content: assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 16
column: 4
content: GasForwardInterfaceGasForwarder;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 17
column: 4
content: ERC20VaultInterfaceERC20UserVault;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 25
column: 4
content: addressowner=msg.sender;

SOLIDITY_VISIBILITY :3
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_UPGRADE_TO_050 :9
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_SHOULD_RETURN_STRUCT :2
SOLIDITY_TX_ORIGIN :2
SOLIDITY_SHOULD_NOT_BE_PURE :1
