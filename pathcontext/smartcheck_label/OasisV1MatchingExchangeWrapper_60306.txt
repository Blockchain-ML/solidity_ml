C:\Users\hp\DataSet\OasisV1MatchingExchangeWrapper.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 40
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 208
column: 4
content: functiongetMaximumPrice(bytesorderData)privatepurereturns(uint256,uint256){uint256takerAmountRatio=0;uint256makerAmountRatio=0;if(orderData.length>0){require(orderData.length==64,"OasisV1MatchingExchangeWrapper:#getMaximumPrice: orderData is not the right length");assembly{takerAmountRatio:=mload(add(orderData,32))makerAmountRatio:=mload(add(orderData,64))}require(uint128(takerAmountRatio)==takerAmountRatio,"OasisV1MatchingExchangeWrapper:#getMaximumPrice: takerAmountRatio > 128 bits");require(uint128(makerAmountRatio)==makerAmountRatio,"OasisV1MatchingExchangeWrapper:#getMaximumPrice: makerAmountRatio > 128 bits");require(makerAmountRatio>0,"OasisV1MatchingExchangeWrapper:#getMaximumPrice: makerAmountRatio cannot be zero");}return(takerAmountRatio,makerAmountRatio);}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 213
column: 16
content: (uint256,uint256)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 168
column: 8
content: bytesorderData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 209
column: 8
content: bytesorderData

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 225
column: 12
content: assembly{takerAmountRatio:=mload(add(orderData,32))makerAmountRatio:=mload(add(orderData,64))}

SOLIDITY_SAFEMATH :1
SOLIDITY_UPGRADE_TO_050 :2
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
