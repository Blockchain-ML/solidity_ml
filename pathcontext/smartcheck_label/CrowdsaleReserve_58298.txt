C:\Users\hp\DataSet\CrowdsaleReserve.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 31
column: 22
content: ("Ether withdrawn from crowdsale reserve",address(this),_receiver,_amount,address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 36
column: 22
content: ("Ether received by crowdsale reserve",address(this),_payer,msg.value,address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 42
column: 22
content: ("Asset issued refund by crowdsale reserve",_asset,address(this),_amount,address(0))

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 53
column: 2
content: functionrequestERC20(address_payer,uint256_amount,address_tokenAddress)externalreturns(bool){require(msg.sender==database.addressStorage(keccak256(abi.encodePacked("contract","CrowdsaleERC20"))),'Contract not authorized');require(ERC20(_tokenAddress).transferFrom(_payer,address(this),_amount),'Transfer failed');events.transaction("ERC20 received by crowdsale reserve",_payer,address(this),_amount,_tokenAddress);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 20
column: 5
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 21
column: 9
content: private

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :2
SOLIDITY_ADDRESS_HARDCODED :3
