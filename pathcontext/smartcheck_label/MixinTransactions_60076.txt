C:\Users\hp\DataSet\MixinTransactions.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 120
column: 43
content: (signerAddress,address(0))

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 31
column: 0
content: contractMixinTransactionsisRefundable,LibEIP712ExchangeDomain,ISignatureValidator,ITransactions{usingLibZeroExTransactionforLibZeroExTransaction.ZeroExTransaction;mapping(bytes32=>bool)publictransactionsExecuted;addresspubliccurrentContextAddress;functionexecuteTransaction(LibZeroExTransaction.ZeroExTransactionmemorytransaction,bytesmemorysignature)publicpayabledisableRefundUntilEndreturns(bytesmemory){return_executeTransaction(transaction,signature);}functionbatchExecuteTransactions(LibZeroExTransaction.ZeroExTransaction[]memorytransactions,bytes[]memorysignatures)publicpayabledisableRefundUntilEndreturns(bytes[]memoryreturnData){uint256length=transactions.length;returnData=newbytes[](length);for(uint256i=0;i!=length;i++){returnData[i]=_executeTransaction(transactions[i],signatures[i]);}returnreturnData;}function_executeTransaction(LibZeroExTransaction.ZeroExTransactionmemorytransaction,bytesmemorysignature)internalreturns(bytesmemory){bytes32transactionHash=transaction.getTypedDataHash(EIP712_EXCHANGE_DOMAIN_HASH);_assertExecutableTransaction(transaction,signature,transactionHash);addresssignerAddress=transaction.signerAddress;_setCurrentContextAddressIfRequired(signerAddress,signerAddress);transactionsExecuted[transactionHash]=true;(booldidSucceed,bytesmemoryreturnData)=address(this).delegatecall(transaction.data);if(!didSucceed){LibRichErrors.rrevert(LibExchangeRichErrors.TransactionExecutionError(transactionHash,returnData));}_setCurrentContextAddressIfRequired(signerAddress,address(0));emitTransactionExecution(transactionHash);returnreturnData;}function_assertExecutableTransaction(LibZeroExTransaction.ZeroExTransactionmemorytransaction,bytesmemorysignature,bytes32transactionHash)internalview{if(block.timestamp>=transaction.expirationTimeSeconds){LibRichErrors.rrevert(LibExchangeRichErrors.TransactionError(LibExchangeRichErrors.TransactionErrorCodes.EXPIRED,transactionHash));}uint256requiredGasPrice=transaction.gasPrice;if(tx.gasprice!=requiredGasPrice){LibRichErrors.rrevert(LibExchangeRichErrors.TransactionGasPriceError(transactionHash,tx.gasprice,requiredGasPrice));}addresscurrentContextAddress_=currentContextAddress;if(currentContextAddress_!=address(0)){LibRichErrors.rrevert(LibExchangeRichErrors.TransactionInvalidContextError(transactionHash,currentContextAddress_));}if(transactionsExecuted[transactionHash]){LibRichErrors.rrevert(LibExchangeRichErrors.TransactionError(LibExchangeRichErrors.TransactionErrorCodes.ALREADY_EXECUTED,transactionHash));}addresssignerAddress=transaction.signerAddress;if(signerAddress!=msg.sender&&!_isValidTransactionWithHashSignature(transaction,transactionHash,signature)){LibRichErrors.rrevert(LibExchangeRichErrors.SignatureError(LibExchangeRichErrors.SignatureErrorCodes.BAD_TRANSACTION_SIGNATURE,transactionHash,signerAddress,signature));}}function_setCurrentContextAddressIfRequired(addresssignerAddress,addresscontextAddress)internal{if(signerAddress!=msg.sender){currentContextAddress=contextAddress;}}function_getCurrentContextAddress()internalviewreturns(address){addresscurrentContextAddress_=currentContextAddress;addresscontextAddress=currentContextAddress_==address(0)?msg.sender:currentContextAddress_;returncontextAddress;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 19
column: 16
content: ^

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 111
column: 67
content: delegatecall(transaction.data)

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UNCHECKED_CALL :1
