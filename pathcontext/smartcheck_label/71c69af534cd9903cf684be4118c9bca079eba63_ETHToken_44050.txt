C:\Users\hp\DataSet\contracts\ropsten\71\71c69af534cd9903cf684be4118c9bca079eba63_ETHToken.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 100
column: 34
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 101
column: 33
content: 0xB8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 102
column: 34
content: 0xC0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 103
column: 33
content: 0xF8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 105
column: 34
content: 0xB7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 106
column: 34
content: 0xF7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 634
column: 41
content: 0x10

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 634
column: 64
content: 0x10

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 849
column: 38
content: 0xf435f5a7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 814
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1007
column: 27
content: returnaddress(0)

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 121
column: 1
content: functionnext(Iteratormemoryself)internalconstantreturns(RLPItemmemorysubItem){if(hasNext(self)){varptr=self._unsafe_nextPtr;varitemLength=_itemLength(ptr);subItem._unsafe_memPtr=ptr;subItem._unsafe_length=itemLength;self._unsafe_nextPtr=ptr+itemLength;}elserevert();}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 133
column: 1
content: functionnext(Iteratormemoryself,boolstrict)internalconstantreturns(RLPItemmemorysubItem){subItem=next(self);if(strict&&!_validate(subItem))revert();return;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 140
column: 1
content: functionhasNext(Iteratormemoryself)internalconstantreturns(bool){varitem=self._unsafe_item;returnself._unsafe_nextPtr<item._unsafe_memPtr+item._unsafe_length;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 150
column: 1
content: functiontoRLPItem(bytesmemoryself)internalconstantreturns(RLPItemmemory){uintlen=self.length;if(len==0){returnRLPItem(0,0);}uintmemPtr;assembly{memPtr:=add(self,0x20)}returnRLPItem(memPtr,len);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 166
column: 1
content: functiontoRLPItem(bytesmemoryself,boolstrict)internalconstantreturns(RLPItemmemory){varitem=toRLPItem(self);if(strict){uintlen=self.length;if(_payloadOffset(item)>len)revert();if(_itemLength(item._unsafe_memPtr)!=len)revert();if(!_validate(item))revert();}returnitem;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 229
column: 1
content: functionitems(RLPItemmemoryself)internalconstantreturns(uint){if(!isList(self))return0;uintb0;uintmemPtr=self._unsafe_memPtr;assembly{b0:=byte(0,mload(memPtr))}uintpos=memPtr+_payloadOffset(self);uintlast=memPtr+self._unsafe_length-1;uintitms;while(pos<=last){pos+=_itemLength(pos);itms++;}returnitms;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 250
column: 1
content: functioniterator(RLPItemmemoryself)internalconstantreturns(Iteratormemoryit){if(!isList(self))revert();uintptr=self._unsafe_memPtr+_payloadOffset(self);it._unsafe_item=self;it._unsafe_nextPtr=ptr;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 261
column: 1
content: functiontoBytes(RLPItemmemoryself)internalconstantreturns(bytesmemorybts){varlen=self._unsafe_length;if(len==0)return;bts=newbytes(len);_copyToBytes(self._unsafe_memPtr,bts,len);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 273
column: 1
content: functiontoData(RLPItemmemoryself)internalconstantreturns(bytesmemorybts){if(!isData(self))revert();var(rStartPos,len)=_decode(self);bts=newbytes(len);_copyToBytes(rStartPos,bts,len);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 285
column: 1
content: functiontoList(RLPItemmemoryself)internalconstantreturns(RLPItem[]memorylist){if(!isList(self))revert();varnumItems=items(self);list=newRLPItem[](numItems);varit=iterator(self);uintidx;while(hasNext(it)){list[idx]=next(it);idx++;}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 302
column: 1
content: functiontoAscii(RLPItemmemoryself)internalconstantreturns(stringmemorystr){if(!isData(self))revert();var(rStartPos,len)=_decode(self);bytesmemorybts=newbytes(len);_copyToBytes(rStartPos,bts,len);str=string(bts);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 315
column: 1
content: functiontoUint(RLPItemmemoryself)internalconstantreturns(uintdata){if(!isData(self))revert();var(rStartPos,len)=_decode(self);if(len>32||len==0)revert();assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 330
column: 1
content: functiontoBool(RLPItemmemoryself)internalconstantreturns(booldata){if(!isData(self))revert();var(rStartPos,len)=_decode(self);if(len!=1)revert();uinttemp;assembly{temp:=byte(0,mload(rStartPos))}if(temp>1)revert();returntemp==1?true:false;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 349
column: 1
content: functiontoByte(RLPItemmemoryself)internalconstantreturns(bytedata){if(!isData(self))revert();var(rStartPos,len)=_decode(self);if(len!=1)revert();uinttemp;assembly{temp:=byte(0,mload(rStartPos))}returnbyte(temp);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 366
column: 1
content: functiontoInt(RLPItemmemoryself)internalconstantreturns(intdata){returnint(toUint(self));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 374
column: 1
content: functiontoBytes32(RLPItemmemoryself)internalconstantreturns(bytes32data){returnbytes32(toUint(self));}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 382
column: 1
content: functiontoAddress(RLPItemmemoryself)internalconstantreturns(addressdata){if(!isData(self))revert();var(rStartPos,len)=_decode(self);if(len!=20)revert();assembly{data:=div(mload(rStartPos),exp(256,12))}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 394
column: 1
content: function_payloadOffset(RLPItemmemoryself)privateconstantreturns(uint){if(self._unsafe_length==0)return0;uintb0;uintmemPtr=self._unsafe_memPtr;assembly{b0:=byte(0,mload(memPtr))}if(b0<DATA_SHORT_START)return0;if(b0<DATA_LONG_START||(b0>=LIST_SHORT_START&&b0<LIST_LONG_START))return1;if(b0<LIST_SHORT_START)returnb0-DATA_LONG_OFFSET+1;returnb0-LIST_LONG_OFFSET+1;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 412
column: 1
content: function_itemLength(uintmemPtr)privateconstantreturns(uintlen){uintb0;assembly{b0:=byte(0,mload(memPtr))}if(b0<DATA_SHORT_START)len=1;elseif(b0<DATA_LONG_START)len=b0-DATA_SHORT_START+1;elseif(b0<LIST_SHORT_START){assembly{letbLen:=sub(b0,0xB7)letdLen:=div(mload(add(memPtr,1)),exp(256,sub(32,bLen)))len:=add(1,add(bLen,dLen))}}elseif(b0<LIST_LONG_START)len=b0-LIST_SHORT_START+1;else{assembly{letbLen:=sub(b0,0xF7)letdLen:=div(mload(add(memPtr,1)),exp(256,sub(32,bLen)))len:=add(1,add(bLen,dLen))}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 440
column: 1
content: function_decode(RLPItemmemoryself)privateconstantreturns(uintmemPtr,uintlen){if(!isData(self))revert();uintb0;uintstart=self._unsafe_memPtr;assembly{b0:=byte(0,mload(start))}if(b0<DATA_SHORT_START){memPtr=start;len=1;return;}if(b0<DATA_LONG_START){len=self._unsafe_length-1;memPtr=start+1;}else{uintbLen;assembly{bLen:=sub(b0,0xB7)}len=self._unsafe_length-1-bLen;memPtr=start+bLen+1;}return;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 468
column: 1
content: function_copyToBytes(uintbtsPtr,bytesmemorytgt,uintbtsLen)privateconstant{assembly{{leti:=0letwords:=div(add(btsLen,31),32)letrOffset:=btsPtrletwOffset:=add(tgt,0x20)tag_loop:jumpi(end,eq(i,words)){letoffset:=mul(i,0x20)mstore(add(wOffset,offset),mload(add(rOffset,offset)))i:=add(i,1)}jump(tag_loop)end:mstore(add(tgt,add(0x20,mload(tgt))),0)}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 492
column: 5
content: function_validate(RLPItemmemoryself)privateconstantreturns(boolret){uintb0;uintb1;uintmemPtr=self._unsafe_memPtr;assembly{b0:=byte(0,mload(memPtr))b1:=byte(1,mload(memPtr))}if(b0==DATA_SHORT_START+1&&b1<DATA_SHORT_START)returnfalse;returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 527
column: 2
content: functionverify(bytesvalue,bytesencodedPath,bytesrlpParentNodes,bytes32root)internalconstantreturns(bool){RLP.RLPItemmemoryitem=RLP.toRLPItem(rlpParentNodes);RLP.RLPItem[]memoryparentNodes=RLP.toList(item);bytesmemorycurrentNode;RLP.RLPItem[]memorycurrentNodeList;bytes32nodeKey=root;uintpathPtr=0;bytesmemorypath=_getNibbleArray(encodedPath);if(path.length==0){returnfalse;}for(uinti=0;i<parentNodes.length;i++){if(pathPtr>path.length){returnfalse;}currentNode=RLP.toBytes(parentNodes[i]);if(nodeKey!=keccak256(currentNode)){returnfalse;}currentNodeList=RLP.toList(parentNodes[i]);if(currentNodeList.length==17){if(pathPtr==path.length){if(keccak256(RLP.toBytes(currentNodeList[16]))==keccak256(value)){returntrue;}else{returnfalse;}}uint8nextPathNibble=uint8(path[pathPtr]);if(nextPathNibble>16){returnfalse;}nodeKey=RLP.toBytes32(currentNodeList[nextPathNibble]);pathPtr+=1;}elseif(currentNodeList.length==2){pathPtr+=_nibblesToTraverse(RLP.toData(currentNodeList[0]),path,pathPtr);if(pathPtr==path.length){if(keccak256(RLP.toData(currentNodeList[1]))==keccak256(value)){returntrue;}else{returnfalse;}}if(_nibblesToTraverse(RLP.toData(currentNodeList[0]),path,pathPtr)==0){returnfalse;}nodeKey=RLP.toBytes32(currentNodeList[1]);}else{returnfalse;}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 582
column: 2
content: function_nibblesToTraverse(bytesencodedPartialPath,bytespath,uintpathPtr)privateconstantreturns(uint){uintlen;bytesmemorypartialPath=_getNibbleArray(encodedPartialPath);bytesmemoryslicedPath=newbytes(partialPath.length);for(uinti=pathPtr;i<pathPtr+partialPath.length;i++){bytepathNibble=path[i];slicedPath[i-pathPtr]=pathNibble;}if(keccak256(partialPath)==keccak256(slicedPath)){len=partialPath.length;}else{len=0;}returnlen;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 605
column: 2
content: function_getNibbleArray(bytesb)privateconstantreturns(bytes){bytesmemorynibbles;if(b.length>0){uint8offset;uint8hpNibble=uint8(_getNthNibbleOfBytes(0,b));if(hpNibble==1||hpNibble==3){nibbles=newbytes(b.length*2-1);byteoddNibble=_getNthNibbleOfBytes(1,b);nibbles[0]=oddNibble;offset=1;}else{nibbles=newbytes(b.length*2-2);offset=0;}for(uinti=offset;i<nibbles.length;i++){nibbles[i]=_getNthNibbleOfBytes(i-offset+2,b);}}returnnibbles;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 633
column: 2
content: function_getNthNibbleOfBytes(uintn,bytesstr)privateconstantreturns(byte){returnbyte(n%2==0?uint8(str[n/2])/0x10:uint8(str[n/2])%0x10);}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 951
column: 4
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 540
column: 4
content: for(uinti=0;i<parentNodes.length;i++){if(pathPtr>path.length){returnfalse;}currentNode=RLP.toBytes(parentNodes[i]);if(nodeKey!=keccak256(currentNode)){returnfalse;}currentNodeList=RLP.toList(parentNodes[i]);if(currentNodeList.length==17){if(pathPtr==path.length){if(keccak256(RLP.toBytes(currentNodeList[16]))==keccak256(value)){returntrue;}else{returnfalse;}}uint8nextPathNibble=uint8(path[pathPtr]);if(nextPathNibble>16){returnfalse;}nodeKey=RLP.toBytes32(currentNodeList[nextPathNibble]);pathPtr+=1;}elseif(currentNodeList.length==2){pathPtr+=_nibblesToTraverse(RLP.toData(currentNodeList[0]),path,pathPtr);if(pathPtr==path.length){if(keccak256(RLP.toData(currentNodeList[1]))==keccak256(value)){returntrue;}else{returnfalse;}}if(_nibblesToTraverse(RLP.toData(currentNodeList[0]),path,pathPtr)==0){returnfalse;}nodeKey=RLP.toBytes32(currentNodeList[1]);}else{returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 591
column: 4
content: for(uinti=pathPtr;i<pathPtr+partialPath.length;i++){bytepathNibble=path[i];slicedPath[i-pathPtr]=pathNibble;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 620
column: 6
content: for(uinti=offset;i<nibbles.length;i++){nibbles[i]=_getNthNibbleOfBytes(i-offset+2,b);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 315
column: 1
content: functiontoUint(RLPItemmemoryself)internalconstantreturns(uintdata){if(!isData(self))revert();var(rStartPos,len)=_decode(self);if(len>32||len==0)revert();assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 382
column: 1
content: functiontoAddress(RLPItemmemoryself)internalconstantreturns(addressdata){if(!isData(self))revert();var(rStartPos,len)=_decode(self);if(len!=20)revert();assembly{data:=div(mload(rStartPos),exp(256,12))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 540
column: 4
content: for(uinti=0;i<parentNodes.length;i++){if(pathPtr>path.length){returnfalse;}currentNode=RLP.toBytes(parentNodes[i]);if(nodeKey!=keccak256(currentNode)){returnfalse;}currentNodeList=RLP.toList(parentNodes[i]);if(currentNodeList.length==17){if(pathPtr==path.length){if(keccak256(RLP.toBytes(currentNodeList[16]))==keccak256(value)){returntrue;}else{returnfalse;}}uint8nextPathNibble=uint8(path[pathPtr]);if(nextPathNibble>16){returnfalse;}nodeKey=RLP.toBytes32(currentNodeList[nextPathNibble]);pathPtr+=1;}elseif(currentNodeList.length==2){pathPtr+=_nibblesToTraverse(RLP.toData(currentNodeList[0]),path,pathPtr);if(pathPtr==path.length){if(keccak256(RLP.toData(currentNodeList[1]))==keccak256(value)){returntrue;}else{returnfalse;}}if(_nibblesToTraverse(RLP.toData(currentNodeList[0]),path,pathPtr)==0){returnfalse;}nodeKey=RLP.toBytes32(currentNodeList[1]);}else{returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 240
column: 12
content: pos<=last

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 38f6c7
severity: 2
line: 292
column: 5
content: while(hasNext(it)){list[idx]=next(it);idx++;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 38f6c7
severity: 2
line: 725
column: 4
content: while(it.hasNext()){if(idx==0){header.prevBlockHash=it.next().toUint();}elseif(idx==3){header.stateRoot=bytes32(it.next().toUint());}elseif(idx==4){header.txRoot=bytes32(it.next().toUint());}elseif(idx==5){header.receiptRoot=bytes32(it.next().toUint());}else{it.next();}idx++;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 515
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 122
column: 5
content: if(hasNext(self)){varptr=self._unsafe_nextPtr;varitemLength=_itemLength(ptr);subItem._unsafe_memPtr=ptr;subItem._unsafe_length=itemLength;self._unsafe_nextPtr=ptr+itemLength;}elserevert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 135
column: 5
content: if(strict&&!_validate(subItem))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 170
column: 9
content: if(_payloadOffset(item)>len)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 172
column: 9
content: if(_itemLength(item._unsafe_memPtr)!=len)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 174
column: 9
content: if(!_validate(item))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 251
column: 5
content: if(!isList(self))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 274
column: 5
content: if(!isData(self))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 286
column: 5
content: if(!isList(self))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 303
column: 5
content: if(!isData(self))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 316
column: 5
content: if(!isData(self))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 319
column: 5
content: if(len>32||len==0)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 331
column: 5
content: if(!isData(self))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 334
column: 5
content: if(len!=1)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 340
column: 5
content: if(temp>1)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 350
column: 5
content: if(!isData(self))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 353
column: 5
content: if(len!=1)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 383
column: 5
content: if(!isData(self))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 386
column: 5
content: if(len!=20)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 441
column: 5
content: if(!isData(self))revert();

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 821
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 190
column: 1
content: functionisList(RLPItemmemoryself)internalpurereturns(boolret){if(self._unsafe_length==0)returnfalse;uintmemPtr=self._unsafe_memPtr;assembly{ret:=iszero(lt(byte(0,mload(memPtr)),0xC0))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 202
column: 1
content: functionisData(RLPItemmemoryself)internalpurereturns(boolret){if(self._unsafe_length==0)returnfalse;uintmemPtr=self._unsafe_memPtr;assembly{ret:=lt(byte(0,mload(memPtr)),0xC0)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 214
column: 1
content: functionisEmpty(RLPItemmemoryself)internalpurereturns(boolret){if(isNull(self)){returnfalse;}uintb0;uintmemPtr=self._unsafe_memPtr;assembly{b0:=byte(0,mload(memPtr))}return(b0==DATA_SHORT_START||b0==LIST_SHORT_START);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1006
column: 4
content: functiongetAddress(bytesb)publicpurereturns(addressa){if(b.length<36)returnaddress(0);assembly{letmask:=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFa:=and(mask,mload(add(b,36)))}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 440
column: 64
content: (uintmemPtr,uintlen)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 878
column: 22
content: keccak256(value,bytes32(blockHash),path,parentNodes)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 891
column: 21
content: keccak256(value,bytes32(blockHash),path,parentNodes)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 906
column: 24
content: keccak256(value,bytes32(blockHash),path,parentNodes)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 527
column: 18
content: bytesvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 527
column: 31
content: bytesencodedPath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 527
column: 50
content: bytesrlpParentNodes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 582
column: 30
content: bytesencodedPartialPath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 582
column: 56
content: bytespath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 605
column: 27
content: bytesb

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 605
column: 62
content: bytes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 633
column: 40
content: bytesstr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 693
column: 42
content: bytesrlpHeader

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 704
column: 24
content: bytesvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 704
column: 56
content: bytespath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 704
column: 68
content: bytesparentNodes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 710
column: 27
content: bytesvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 710
column: 59
content: bytespath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 710
column: 71
content: bytesparentNodes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 715
column: 29
content: bytesvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 715
column: 61
content: bytespath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 715
column: 73
content: bytesparentNodes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 720
column: 28
content: bytesrlpHeader

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 720
column: 68
content: BlockHeader

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 742
column: 26
content: bytesrlpHeader

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 759
column: 21
content: bytesvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 759
column: 34
content: bytesencodedPath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 759
column: 53
content: bytesparentNodes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 877
column: 18
content: bytesvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 877
column: 50
content: bytespath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 877
column: 62
content: bytesparentNodes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 905
column: 29
content: bytesvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 905
column: 61
content: bytespath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 905
column: 73
content: bytesparentNodes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 909
column: 24
content: bytesvalue

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 909
column: 56
content: bytespath

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 909
column: 68
content: bytesparentNodes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 995
column: 26
content: bytesb

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1006
column: 24
content: bytesb

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1017
column: 35
content: bytestxValue

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 156
column: 5
content: assembly{memPtr:=add(self,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 194
column: 5
content: assembly{ret:=iszero(lt(byte(0,mload(memPtr)),0xC0))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 206
column: 5
content: assembly{ret:=lt(byte(0,mload(memPtr)),0xC0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 220
column: 5
content: assembly{b0:=byte(0,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 234
column: 5
content: assembly{b0:=byte(0,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 321
column: 5
content: assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 337
column: 5
content: assembly{temp:=byte(0,mload(rStartPos))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 356
column: 5
content: assembly{temp:=byte(0,mload(rStartPos))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 388
column: 5
content: assembly{data:=div(mload(rStartPos),exp(256,12))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 399
column: 5
content: assembly{b0:=byte(0,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 414
column: 5
content: assembly{b0:=byte(0,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 422
column: 9
content: assembly{letbLen:=sub(b0,0xB7)letdLen:=div(mload(add(memPtr,1)),exp(256,sub(32,bLen)))len:=add(1,add(bLen,dLen))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 431
column: 9
content: assembly{letbLen:=sub(b0,0xF7)letdLen:=div(mload(add(memPtr,1)),exp(256,sub(32,bLen)))len:=add(1,add(bLen,dLen))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 445
column: 5
content: assembly{b0:=byte(0,mload(start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 458
column: 9
content: assembly{bLen:=sub(b0,0xB7)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 471
column: 5
content: assembly{{leti:=0letwords:=div(add(btsLen,31),32)letrOffset:=btsPtrletwOffset:=add(tgt,0x20)tag_loop:jumpi(end,eq(i,words)){letoffset:=mul(i,0x20)mstore(add(wOffset,offset),mload(add(rOffset,offset)))i:=add(i,1)}jump(tag_loop)end:mstore(add(tgt,add(0x20,mload(tgt))),0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 497
column: 9
content: assembly{b0:=byte(0,mload(memPtr))b1:=byte(1,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1008
column: 8
content: assembly{letmask:=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFa:=and(mask,mload(add(b,36)))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 100
column: 1
content: uintconstantDATA_SHORT_START=0x80;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 101
column: 1
content: uintconstantDATA_LONG_START=0xB8;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 102
column: 1
content: uintconstantLIST_SHORT_START=0xC0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 103
column: 1
content: uintconstantLIST_LONG_START=0xF8;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 105
column: 1
content: uintconstantDATA_LONG_OFFSET=0xB7;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 106
column: 1
content: uintconstantLIST_LONG_OFFSET=0xF7;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 649
column: 2
content: mapping(address=>bool)authorized;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 851
column: 4
content: mapping(address=>uint)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 852
column: 4
content: mapping(address=>mapping(address=>uint))allowed;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 853
column: 4
content: mapping(bytes32=>bool)rewarded;

SOLIDITY_VISIBILITY :10
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :11
SOLIDITY_UPGRADE_TO_050 :39
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_PURE :4
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_SAFEMATH :1
SOLIDITY_DEPRECATED_CONSTRUCTIONS :26
SOLIDITY_REVERT_REQUIRE :19
SOLIDITY_USING_INLINE_ASSEMBLY :18
