C:\Users\hp\DataSet\contracts\ropsten\eb\eb31a89d4e11b8ca2b8b97da8c4670325bbc0055_ECRecoverDemo.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 15
column: 19
content: 0x0

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 39
column: 4
content: functionecrecover1(bytes32msgHash,uint8v,bytes32r,bytes32s)constantreturns(address){bytesmemoryprefix="\x19Ethereum Signed Message:\n32";bytes32prefixedHash=keccak256(prefix,msgHash);returnecrecover(prefixedHash,v,r,s);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 45
column: 2
content: functionecrecover2(bytes32msgHash,uint8v,bytes32r,bytes32s)constantreturns(address){returnecrecover(msgHash,v,r,s);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 49
column: 2
content: functionecrecover3(bytes32msgHash,uint8v,bytes32r,bytes32s)constantreturns(address){boolret;addressaddr;assembly{letsize:=mload(0x40)mstore(size,msgHash)mstore(add(size,32),v)mstore(add(size,64),r)mstore(add(size,96),s)ret:=call(3000,1,0,size,128,size,32)addr:=mload(size)}returnaddr;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 12
column: 4
content: functionstringToBytes32(stringmemorysource)purepublicreturns(bytes32result){bytesmemorytempEmptyStringTest=bytes(source);if(tempEmptyStringTest.length==0){return0x0;}assembly{result:=mload(add(source,32))}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 41
column: 29
content: keccak256(prefix,msgHash)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 23
column: 30
content: string_msg

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 18
column: 8
content: assembly{result:=mload(add(source,32))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 54
column: 4
content: assembly{letsize:=mload(0x40)mstore(size,msgHash)mstore(add(size,32),v)mstore(add(size,64),r)mstore(add(size,96),s)ret:=call(3000,1,0,size,128,size,32)addr:=mload(size)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 39
column: 4
content: functionecrecover1(bytes32msgHash,uint8v,bytes32r,bytes32s)constantreturns(address){bytesmemoryprefix="\x19Ethereum Signed Message:\n32";bytes32prefixedHash=keccak256(prefix,msgHash);returnecrecover(prefixedHash,v,r,s);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 45
column: 2
content: functionecrecover2(bytes32msgHash,uint8v,bytes32r,bytes32s)constantreturns(address){returnecrecover(msgHash,v,r,s);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 49
column: 2
content: functionecrecover3(bytes32msgHash,uint8v,bytes32r,bytes32s)constantreturns(address){boolret;addressaddr;assembly{letsize:=mload(0x40)mstore(size,msgHash)mstore(add(size,32),v)mstore(add(size,64),r)mstore(add(size,96),s)ret:=call(3000,1,0,size,128,size,32)addr:=mload(size)}returnaddr;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 6
column: 4
content: addressowner;

SOLIDITY_VISIBILITY :4
SOLIDITY_DEPRECATED_CONSTRUCTIONS :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :2
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_SHOULD_NOT_BE_PURE :1
