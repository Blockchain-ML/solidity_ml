C:\Users\hp\DataSet\contracts\ropsten\26\26674914655dbcba7b24fc9579e6fe2838b4bf69_LockableToken.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 154
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 571
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){amount=amount.add(tokensLocked(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 635
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){lockedTokens=tokensUnlockable(_of,lockReason[_of][i]);if(lockedTokens>0){unlockableTokens=unlockableTokens.add(lockedTokens);locked[_of][lockReason[_of][i]].claimed=true;emitUnlocked(_of,lockReason[_of][i],lockedTokens);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 657
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){unlockableTokens=unlockableTokens.add(tokensUnlockable(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 571
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){amount=amount.add(tokensLocked(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 635
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){lockedTokens=tokensUnlockable(_of,lockReason[_of][i]);if(lockedTokens>0){unlockableTokens=unlockableTokens.add(lockedTokens);locked[_of][lockReason[_of][i]].claimed=true;emitUnlocked(_of,lockReason[_of][i],lockedTokens);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 657
column: 8
content: for(uint256i=0;i<lockReason[_of].length;i++){unlockableTokens=unlockableTokens.add(tokensUnlockable(_of,lockReason[_of][i]));}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 68
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 70
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 72
column: 2
content: uint256totalSupply_;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 457
column: 51
content: Tokensalready

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 457
column: 66
content: locked&39;;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 458
column: 47
content: Notokens

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 458
column: 57
content: locked&39;;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 459
column: 48
content: Amountcan

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 459
column: 59
content: notbe0&39;;

SOLIDITY_VISIBILITY :8
SOLIDITY_SAFEMATH :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_ERC20_APPROVE :1
