C:\Users\hp\DataSet\contracts\ropsten\ad\adceb8359ac160d6e963fdc6272494a93e6911f7_CollectionRegistry.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 177
column: 4
content: _owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 343
column: 13
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 363
column: 13
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 247
column: 45
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 508
column: 59
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 678
column: 49
content: 0x0

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 290
column: 8
content: for(uintd=0;d<DEPTH;d++){if(proofBits%2==0){proofElement=defaultHashes[d];}else{p+=32;require(proof.length>=p);assembly{proofElement:=mload(add(proof,p))}}if(index%2==0){computedHash=keccak256(abi.encodePacked(computedHash,proofElement));}else{computedHash=keccak256(abi.encodePacked(proofElement,computedHash));}proofBits=proofBits/2;index=index/2;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 131
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 416
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 417
column: 32
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 524
column: 8
content: if(accounts[accountId].status==AccountStatus.NONE){revert("password mismatch");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 668
column: 8
content: if(auth.authorizedAt!=0&&accounts.isTemporary(_userId)){revert("The account is currently locked.");}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 202
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 391
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 542
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 332
column: 2
content: functionrecover(bytes32hash,bytessignature)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(signature.length!=65){return(address(0));}assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 282
column: 4
content: functiongetRoot(uint64index,bytesproof)publicviewreturns(bytes32){require((proof.length-8)%32==0&&proof.length<=2056);bytes32proofElement;bytes32computedHash=LEAF_INCLUDED;uint16p=8;uint64proofBits;assembly{proofBits:=div(mload(add(proof,32)),exp(256,24))}for(uintd=0;d<DEPTH;d++){if(proofBits%2==0){proofElement=defaultHashes[d];}else{p+=32;require(proof.length>=p);assembly{proofElement:=mload(add(proof,p))}}if(index%2==0){computedHash=keccak256(abi.encodePacked(computedHash,proofElement));}else{computedHash=keccak256(abi.encodePacked(proofElement,computedHash));}proofBits=proofBits/2;index=index/2;}returncomputedHash;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 93
column: 22
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 217
column: 22
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 275
column: 8
content: bytesproof

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 282
column: 35
content: bytesproof

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 332
column: 33
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 520
column: 60
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 632
column: 41
content: bytespasswordSignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 656
column: 40
content: bytespasswordSignature

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 288
column: 8
content: assembly{proofBits:=div(mload(add(proof,32)),exp(256,24))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 296
column: 16
content: assembly{proofElement:=mload(add(proof,p))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 350
column: 4
content: assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 212
column: 4
content: mapping(bytes32=>bool)appNameExists;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 261
column: 4
content: bytes32constantLEAF_INCLUDED=0x0000000000000000000000000000000000000000000000000000000000000001;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 263
column: 4
content: uint8constantDEPTH=64;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 566
column: 4
content: mapping(bytes8=>Collection)collections;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 568
column: 4
content: Accountsaccounts;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 569
column: 4
content: AppRegistryapps;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 570
column: 4
content: SchemaRegistryschemas;

SOLIDITY_VISIBILITY :7
SOLIDITY_SAFEMATH :3
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :6
SOLIDITY_UPGRADE_TO_050 :8
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
