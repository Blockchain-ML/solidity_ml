C:\Users\hp\DataSet\contracts\ropsten\06\06d2c386e72f4fe9c064c98c164736c927e4c0ef_ChannelManager.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 426
column: 36
content: 0x41

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 444
column: 21
content: 0x1b

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 444
column: 34
content: 0x1c

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 165
column: 4
content: functionapprove(addressspender,uint256value)publicreturns(bool){require(spender!=address(0));_allowed[msg.sender][spender]=value;emitApproval(msg.sender,spender,value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 259
column: 8
content: for(i=0;i<values.length;i++){total=total.add(values[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 267
column: 8
content: for(i=0;i<recipients.length;i++){require(recipients[i]!=address(0));_balances[recipients[i]]=_balances[recipients[i]].add(values[i]);emitTransfer(msg.sender,recipients[i],values[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 406
column: 8
content: for(uint256i=0;i<values.length;i++){total=total.add(values[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 259
column: 8
content: for(i=0;i<values.length;i++){total=total.add(values[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 267
column: 8
content: for(i=0;i<recipients.length;i++){require(recipients[i]!=address(0));_balances[recipients[i]]=_balances[recipients[i]].add(values[i]);emitTransfer(msg.sender,recipients[i],values[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 406
column: 8
content: for(uint256i=0;i<values.length;i++){total=total.add(values[i]);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 110
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 112
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 306
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 308
column: 24
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 310
column: 33
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 106
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 297
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 425
column: 4
content: function_recoverAddress(address[]recipients,uint256[]values,bytessignature)privatepurereturns(address){require(signature.length==0x41);bytes32r;bytes32s;uint8v;assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))iflt(v,0x1b){v:=add(v,0x1b)}}require(v==0x1b||v==0x1c);bytes32message=keccak256(abi.encodePacked(recipients,values));returnecrecover(message,v,r,s);}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 252
column: 27
content: address[]recipients

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 252
column: 49
content: uint256[]values

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 360
column: 41
content: address[]recipients

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 360
column: 63
content: uint256[]values

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 360
column: 81
content: bytesnodesig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 381
column: 40
content: address[]recipients

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 381
column: 62
content: uint256[]values

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 381
column: 80
content: bytesclientsig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 403
column: 69
content: address[]recipients

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 403
column: 91
content: uint256[]values

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 425
column: 29
content: address[]recipients

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 425
column: 51
content: uint256[]values

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 425
column: 69
content: bytessignature

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 432
column: 8
content: assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))iflt(v,0x1b){v:=add(v,0x1b)}}

SOLIDITY_SAFEMATH :2
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :5
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_UPGRADE_TO_050 :13
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :1
