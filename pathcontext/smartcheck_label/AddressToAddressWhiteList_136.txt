C:\Users\hp\DataSet\AddressToAddressWhiteList.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 146
column: 8
content: whitelist[_key]=address(0)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 76
column: 8
content: for(uint256i=0;i<_initialKeys.length;i++){addresskeyTypeAddressToAdd=_initialKeys[i];require(whitelist[keyTypeAddressToAdd]==address(0),"AddressToAddressWhiteList.constructor: Key must be unique.");require(_initialValues[i]!=address(0),"AddressToAddressWhiteList.constructor: Value must be non zero.");keys.push(keyTypeAddressToAdd);whitelist[keyTypeAddressToAdd]=_initialValues[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 76
column: 8
content: for(uint256i=0;i<_initialKeys.length;i++){addresskeyTypeAddressToAdd=_initialKeys[i];require(whitelist[keyTypeAddressToAdd]==address(0),"AddressToAddressWhiteList.constructor: Key must be unique.");require(_initialValues[i]!=address(0),"AddressToAddressWhiteList.constructor: Value must be non zero.");keys.push(keyTypeAddressToAdd);whitelist[keyTypeAddressToAdd]=_initialValues[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 220
column: 8
content: for(uint256i=0;i<arrayLength;i++){values[i]=getValue(_key[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 269
column: 8
content: for(uint256i=0;i<arrayLength;i++){if(whitelist[_keys[i]]==address(0)){returnfalse;}}

SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
