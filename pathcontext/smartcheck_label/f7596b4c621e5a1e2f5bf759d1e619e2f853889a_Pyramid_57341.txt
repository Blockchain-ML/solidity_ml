C:\Users\hp\DataSet\contracts\ropsten\f7\f7596b4c621e5a1e2f5bf759d1e619e2f853889a_Pyramid.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 253
column: 35
content: 0x0000000000000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 295
column: 29
content: 0x0000000000000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 307
column: 28
content: 0x0000000000000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 312
column: 46
content: 0x0000000000000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 359
column: 26
content: 0x0000000000000000000000000000000000000000

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 102
column: 27
content: SafeMath.mul(FN.sub(coefficient[_customerAddress])/10,3*tokenBalance[_customerAddress])

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 136
column: 49
content: FN.sub(coefficient[_customerAddress]).mul(tokenBalance[_customerAddress])/10*3

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 221
column: 8
content: for(i=0;i<Gate.length;i++){if(tokenBalance[_customerAddress]<Gate[i]){break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 359
column: 8
content: while(_highlevel!=0x0000000000000000000000000000000000000000&&tokenBalance[_highlevel]>0){i++;tax=mul_float_power(_incomingEthereum,i,getFeeRate(_highlevel),10);if(tax<=mintax){break;}sellableETH[_highlevel]=sellableETH[_highlevel].add(tax);sumOftax=sumOftax.add(tax);_highlevel=highlevel[_highlevel];emittaxOutput(tax,sumOftax);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 41
column: 4
content: functionbuy(address_referredBy)publicpayablereturns(uint256){PurchaseTokens(msg.value,_referredBy);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 350
column: 4
content: functiontaxEth(uint256_incomingEthereum,address_customerAddress)internalreturns(uint256){address_highlevel=highlevel[_customerAddress];uint256tax;uint256sumOftax=0;uint8i=0;uint256globalfee=_incomingEthereum.mul(3).div(10);while(_highlevel!=0x0000000000000000000000000000000000000000&&tokenBalance[_highlevel]>0){i++;tax=mul_float_power(_incomingEthereum,i,getFeeRate(_highlevel),10);if(tax<=mintax){break;}sellableETH[_highlevel]=sellableETH[_highlevel].add(tax);sumOftax=sumOftax.add(tax);_highlevel=highlevel[_highlevel];emittaxOutput(tax,sumOftax);}if(sumOftax.add(globalfee)<_incomingEthereum){administratorMoney=_incomingEthereum.sub(sumOftax).sub(globalfee).add(administratorMoney);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 221
column: 8
content: for(i=0;i<Gate.length;i++){if(tokenBalance[_customerAddress]<Gate[i]){break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 359
column: 14
content: _highlevel!=0x0000000000000000000000000000000000000000&&tokenBalance[_highlevel]>0

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 4
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 174
column: 21
content: string_name

SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_DIV_MUL :2
