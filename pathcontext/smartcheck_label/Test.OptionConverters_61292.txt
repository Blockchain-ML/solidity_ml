C:\Users\hp\DataSet\Test.OptionConverters.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 267
column: 32
content: (address(0))

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 68
column: 12
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 88
column: 29
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 110
column: 29
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 129
column: 29
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 182
column: 29
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 197
column: 29
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 227
column: 25
content: years

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 852kwn
severity: 1
line: 228
column: 29
content: years

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 33
column: 2
content: functionmalicious_withdraw()returns(uint){boolrv=_t.call(bytes4(keccak256("withdraw()")));}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 8
column: 0
content: contractEmpReentryisReporter{address_t;function_target(addresstarget){_t=target;}function()payable{if(msg.gas<21000)return;if(this.balance<3ether){boolrv=msg.sender.call(bytes4(keccak256("withdraw()")));}}functionemployeeExerciseOptions(boolagreeToAccelConditions)returns(uint8){returnuint8(ESOP(_t).employeeExerciseOptions(agreeToAccelConditions));}functionemployeeSignsToESOP()returns(uint8){returnuint8(ESOP(_t).employeeSignsToESOP());}functionmalicious_withdraw()returns(uint){boolrv=_t.call(bytes4(keccak256("withdraw()")));}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 99
column: 4
content: assembly{g:=gas}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 104
column: 4
content: assembly{g:=gas}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 10
column: 2
content: function_target(addresstarget){_t=target;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 14
column: 2
content: function()payable{if(msg.gas<21000)return;if(this.balance<3ether){boolrv=msg.sender.call(bytes4(keccak256("withdraw()")));}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 25
column: 2
content: functionemployeeExerciseOptions(boolagreeToAccelConditions)returns(uint8){returnuint8(ESOP(_t).employeeExerciseOptions(agreeToAccelConditions));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 29
column: 2
content: functionemployeeSignsToESOP()returns(uint8){returnuint8(ESOP(_t).employeeSignsToESOP());}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 33
column: 2
content: functionmalicious_withdraw()returns(uint){boolrv=_t.call(bytes4(keccak256("withdraw()")));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 43
column: 2
content: functionsetUp(){emp1=newEmpTester();esop=makeNFESOP();emp1._target(esop);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 50
column: 2
content: functionprocERC20OptionsConverter(ERC20OptionsConverterconverter,uint32ct)returns(EmpTester,EmpTester,EmpTester){esop.offerOptionsToEmployee(emp1,ct,ct+2weeks,100,false);EmpTesteremp2=newEmpTester();esop.offerOptionsToEmployee(emp2,ct,ct+2weeks,400,false);EmpTesteremp3=newEmpTester();esop.offerOptionsToEmployee(emp3,ct,ct+2weeks,800,false);uintpoolOptions=esop.totalPoolOptions()-esop.remainingPoolOptions();uintextraOptions=esop.totalExtraOptions();emp1._target(esop);emp2._target(esop);emp3._target(esop);uintrc=uint(emp1.employeeSignsToESOP());assertEq(rc,0,"emp signs");emp2.employeeSignsToESOP();emp3.employeeSignsToESOP();ct+=3years;esop.mockTime(ct);rc=uint(esop.offerOptionsConversion(converter));assertEq(rc,0,"converter");uint32cdead=converter.getExercisePeriodDeadline();emp1.employeeExerciseOptions(true);emp2.employeeExerciseOptions(true);emp3.employeeExerciseOptions(true);if(absDiff(converter.totalSupply()-extraOptions,poolOptions+divRound(poolOptions*esop.optionsCalculator().bonusOptionsPromille(),esop.optionsCalculator().FP_SCALE()))>1){assertEq(converter.totalSupply()-extraOptions,poolOptions+divRound(poolOptions*esop.optionsCalculator().bonusOptionsPromille(),esop.optionsCalculator().FP_SCALE()));}return(emp1,emp2,emp3);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 87
column: 2
content: functiontestERC20OptionsConverterTransferBlocked(){uint32deadlineDelta=3years+4weeks;uint32ct=esop.currentTime();ERC20OptionsConverterconverter=newERC20OptionsConverter(esop,ct+deadlineDelta,ct+2*deadlineDelta);var(emp1,emp2,emp3)=procERC20OptionsConverter(converter,ct);uintemp1b=converter.balanceOf(emp1);uintemp2b=converter.balanceOf(emp2);if(emp1b==0||emp2b==0)fail();emp1._target(converter);uintg=0;assembly{g:=gas}boolrv=emp1.forward(bytes4(keccak256("transfer(address,uint256)")),address(emp2),emp1b);assertEq(rv,false);assembly{g:=gas}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 109
column: 2
content: functiontestERC20OptionsConverter(){uint32deadlineDelta=3years+4weeks;uint32ct=esop.currentTime();ERC20OptionsConverterconverter=newERC20OptionsConverter(esop,ct+deadlineDelta,ct+2*deadlineDelta);var(emp1,emp2,emp3)=procERC20OptionsConverter(converter,ct);uintemp1b=converter.balanceOf(emp1);uintemp2b=converter.balanceOf(emp2);if(emp1b==0||emp2b==0)fail();emp1._target(converter);ct+=2*deadlineDelta;converter.mockTime(ct);ERC20OptionsConverter(emp1).transfer(emp2,emp1b);assertEq(converter.balanceOf(emp1),0);assertEq(converter.balanceOf(emp2),emp1b+emp2b);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 128
column: 2
content: functiontestProceedsOptionsConverter(){uint32deadlineDelta=3years+4weeks;uint32ct=esop.currentTime();ProceedsOptionsConverterconverter=newProceedsOptionsConverter(esop,ct+deadlineDelta,ct+2*deadlineDelta);var(emp1,emp2,emp3)=procERC20OptionsConverter(converter,ct);ct+=2*deadlineDelta;converter.mockTime(ct);uintemp1b=converter.balanceOf(emp1);uintemp2b=converter.balanceOf(emp2);uinttotsupp=converter.totalSupply();emp1._target(converter);uintcb=emp1.withdraw();assertEq(cb,0,"empty withdrawal");converter.makePayout.value(2ether)();converter.makePayout.value(5ether)();cb=converter.balance;assertEq(cb,7ether,"make payout");cb=emp1.withdraw();assertEq(emp1.balance,cb,"e1 rv == balance");uintexpb=divRound(7ether*emp1b,totsupp);if(absDiff(cb,expb)>1)assertEq(cb,expb,"e1 withdraw amount");converter.makePayout.value(1ether)();emp2._target(converter);cb=emp2.withdraw();expb=divRound(8ether*emp2b,totsupp);if(absDiff(cb,expb)>1)assertEq(cb,expb,"e2 withdraw amount");cb=emp1.withdraw();expb=divRound(1ether*emp1b,totsupp);if(absDiff(cb,expb)>1)assertEq(cb,expb,"e1 withdraw 3 payout");cb=emp1.withdraw();assertEq(cb,0,"e1 withdraw 0");cb=emp2.withdraw();assertEq(cb,0,"e2 withdraw 0");assertEq(8ether,converter.balance+emp1.balance+emp2.balance,"total ether");emp3._target(converter);cb=emp3.withdraw();assertEq(converter.balance,0,"all paid out");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 181
column: 2
content: functiontestThrowProceedsWithdrawnTransferFrom(){uint32deadlineDelta=3years+4weeks;uint32ct=esop.currentTime();ProceedsOptionsConverterconverter=newProceedsOptionsConverter(esop,ct+deadlineDelta,ct+2*deadlineDelta);var(emp1,emp2,emp3)=procERC20OptionsConverter(converter,ct);ct+=deadlineDelta;converter.mockTime(ct);uintemp1b=converter.balanceOf(emp1);converter.makePayout.value(5ether)();emp1._target(converter);uintcb=emp1.withdraw();ERC20OptionsConverter(emp1).transfer(emp2,emp1b);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 196
column: 2
content: functiontestThrowProceedsWithdrawnTransferTo(){uint32deadlineDelta=3years+4weeks;uint32ct=esop.currentTime();ProceedsOptionsConverterconverter=newProceedsOptionsConverter(esop,ct+deadlineDelta,ct+2*deadlineDelta);var(emp1,emp2,emp3)=procERC20OptionsConverter(converter,ct);ct+=deadlineDelta;converter.mockTime(ct);uintemp1b=converter.balanceOf(emp1);uintemp2b=converter.balanceOf(emp2);converter.makePayout.value(5ether)();emp1._target(converter);emp2._target(converter);uintcb=emp1.withdraw();ERC20OptionsConverter(emp2).transfer(emp1,emp2b);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 213
column: 2
content: functiontestProceedsWithdrawalReentry(){EmpReentryemp1=newEmpReentry();EmpTesteremp0=newEmpTester();EmpTesterempx=newEmpTester();uint32ct=esop.currentTime();esop.offerOptionsToEmployee(emp0,ct,ct+2weeks,100,false);esop.offerOptionsToEmployee(empx,ct,ct+2weeks,400,false);esop.offerOptionsToEmployee(emp1,ct,ct+2weeks,2876,false);emp1._target(esop);emp1.employeeSignsToESOP();emp0._target(esop);empx._target(esop);emp0.employeeSignsToESOP();empx.employeeSignsToESOP();esop.mockTime(ct+3years);uint32deadlineDelta=3years+4weeks;ProceedsOptionsConverterconverter=newProceedsOptionsConverter(esop,ct+deadlineDelta,ct+2*deadlineDelta);uintrc=uint(esop.offerOptionsConversion(converter));assertEq(rc,0,"converter");emp1.employeeExerciseOptions(true);emp0.employeeExerciseOptions(true);empx.employeeExerciseOptions(true);converter.mockTime(ct+2*deadlineDelta);uintemp1b=converter.balanceOf(emp1);converter.makePayout.value(5ether)();emp1._target(converter);emp1.malicious_withdraw();uintexpbalance=divRound((5ether*emp1b),converter.totalSupply());assertEq(emp1.balance,expbalance,"no re-entry");uintstolen=emp1.balance-expbalance;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 249
column: 2
content: functiontestProceedsOptionsConverterOptionsDenied(){uint32ct=esop.currentTime();esop.offerOptionsToEmployee(emp1,ct,ct+2weeks,1289,false);uintemp1issued=esop.totalPoolOptions()-esop.remainingPoolOptions();emp1.employeeSignsToESOP();uint32vestp=uint32(esop.optionsCalculator().vestingPeriod());esop.mockTime(ct+vestp/2);uint32deadlineDelta=vestp/2+4weeks;ProceedsOptionsConverterconverter=newProceedsOptionsConverter(esop,ct+deadlineDelta,ct+deadlineDelta+1weeks);uintrc=uint(esop.offerOptionsConversion(converter));assertEq(rc,0,"converter");rc=uint(emp1.employeeDenyExerciseOptions());assertEq(rc,0,"deny exercise");assertEq(converter.totalSupply(),0);assertEq(converter.balanceOf(address(0)),0);}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 9
column: 2
content: address_t;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 40
column: 4
content: EmpTesteremp1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 41
column: 4
content: ESOPesop;

SOLIDITY_VISIBILITY :17
SOLIDITY_DEPRECATED_CONSTRUCTIONS :8
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_USING_INLINE_ASSEMBLY :2
