C:\Users\hp\DataSet\contracts\ropsten\d1\d1afaf54f2f62a240f0cb2d8038daee40aa3490c_Guesses.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 223
column: 19
content: 0xffffffffffffffffffffffffffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 225
column: 40
content: 0x100000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 227
column: 19
content: 0xffffffffffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 229
column: 40
content: 0x10000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 231
column: 19
content: 0xffffffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 233
column: 40
content: 0x100000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 235
column: 19
content: 0xffff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 237
column: 40
content: 0x10000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 239
column: 19
content: 0xff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 301
column: 20
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 303
column: 26
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 305
column: 26
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 307
column: 26
content: 0xF8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 309
column: 26
content: 0xFC

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 394
column: 16
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 396
column: 22
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 398
column: 22
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 445
column: 16
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 448
column: 22
content: 0xE0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 449
column: 22
content: 0x1F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 451
column: 22
content: 0xF0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 452
column: 22
content: 0x0F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 455
column: 22
content: 0x07

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 466
column: 35
content: 0xFF

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 467
column: 20
content: 0xC0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 467
column: 28
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 471
column: 36
content: 0x3F

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 531
column: 28
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 531
column: 51
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 628
column: 35
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 632
column: 43
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 668
column: 35
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 672
column: 43
content: sha3

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 26
column: 8
content: for(uinti=_bytesValue.length-1;i>=0&&i<_bytesValue.length;i--){assert(_bytesValue[i]>=48&&_bytesValue[i]<=57);_ret+=(uint(_bytesValue[i])-48)*j;j*=10;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 51
column: 8
content: for(uintj=0;j<_real.length;j++){_real[j]=_tmp[i--];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 837
column: 8
content: for(uinti=0;i<parts.length;i++)length+=parts[i]._len;

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 844
column: 8
content: for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 981
column: 8
content: for(uinti=0;i<splits.length;i++){varsingleBet=splitStr2Int(splits[i],",");innerGuess(uint32(singleBet[0]),uint16(singleBet[1]),uint32(singleBet[2]),msg.sender);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1012
column: 8
content: for(uinti=0;i<parts.length;i++){parts[i]=s.split(delim).toString();}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1022
column: 8
content: for(uinti=0;i<parts.length;i++){parts[i]=Integers.parseInt(s.split(delim).toString());}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1047
column: 8
content: for(uinti=0;i<splits.length;i++){result[i]=getSingleGuessInfo(uint32(splits[i])).toSlice();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 21
column: 4
content: functionparseInt(string_value)publicreturns(uint_ret){bytesmemory_bytesValue=bytes(_value);uintj=1;for(uinti=_bytesValue.length-1;i>=0&&i<_bytesValue.length;i--){assert(_bytesValue[i]>=48&&_bytesValue[i]<=57);_ret+=(uint(_bytesValue[i])-48)*j;j*=10;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 65
column: 4
content: functiontoByte(uint8_base)publicreturns(byte_ret){assembly{letm_alloc:=add(msize(),0x1)mstore8(m_alloc,_base)_ret:=mload(m_alloc)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 83
column: 4
content: functiontoBytes(uint_base)internalreturns(bytes_ret){assembly{letm_alloc:=add(msize(),0x1)_ret:=mload(m_alloc)mstore(_ret,0x20)mstore(add(_ret,0x20),_base)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 424
column: 4
content: functionnextRune(sliceself)internalpurereturns(sliceret){nextRune(self,ret);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 482
column: 4
content: functionkeccak(sliceself)internalpurereturns(bytes32ret){assembly{ret:=keccak256(mload(add(self,32)),mload(self))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 744
column: 4
content: functionsplit(sliceself,sliceneedle)internalpurereturns(slicetoken){split(self,needle,token);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 780
column: 4
content: functionrsplit(sliceself,sliceneedle)internalpurereturns(slicetoken){rsplit(self,needle,token);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 790
column: 4
content: functioncount(sliceself,sliceneedle)internalpurereturns(uintcnt){uintptr=findPtr(self._len,self._ptr,needle._len,needle._ptr)+needle._len;while(ptr<=self._ptr+self._len){cnt++;ptr=findPtr(self._len-(ptr-self._ptr),ptr,needle._len,needle._ptr)+needle._len;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 51
column: 8
content: for(uintj=0;j<_real.length;j++){_real[j]=_tmp[i--];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 837
column: 8
content: for(uinti=0;i<parts.length;i++)length+=parts[i]._len;

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 844
column: 8
content: for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 981
column: 8
content: for(uinti=0;i<splits.length;i++){varsingleBet=splitStr2Int(splits[i],",");innerGuess(uint32(singleBet[0]),uint16(singleBet[1]),uint32(singleBet[2]),msg.sender);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1012
column: 8
content: for(uinti=0;i<parts.length;i++){parts[i]=s.split(delim).toString();}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1022
column: 8
content: for(uinti=0;i<parts.length;i++){parts[i]=Integers.parseInt(s.split(delim).toString());}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1047
column: 8
content: for(uinti=0;i<splits.length;i++){result[i]=getSingleGuessInfo(uint32(splits[i])).toSlice();}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 618
column: 23
content: ptrdata!=needledata

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 658
column: 23
content: ptrdata!=needledata

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 670
column: 23
content: ptr>=selfptr

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 792
column: 15
content: ptr<=self._ptr+self._len

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 870
column: 0
content: contractGuessesisOwnable{usingstringsfor*;addressinternalowner;uint32internalmaxId=4*(10**9);uint32privatecurrentId=0;uint32internalwinPercent=100;structGuess{addressdrawer;uint32id;uint16price;uint64startTimestamp;uint64endTimestamp;uint16totOptionNum;boolstoped;mapping(uint16=>GuessOption)options;}structGuessOption{uint16optionIndex;uint32totNum;mapping(address=>uint32)bets;}mapping(uint32=>Guess)internalallGuesses;boolprivatelocked=false;modifiernoReentrancy(){require(!locked);locked=true;_;locked=false;}constructor()public{}functioncreateGuess(uint16_price,uint64_startTimestamp,uint64_endTimestamp,uint16_totOptionNum)publicreturns(uint32){require(now<_startTimestamp&&_endTimestamp>_startTimestamp);require(_price>0);uint32_id=getNextGuessId();allGuesses[_id].id=_id;allGuesses[_id].drawer=msg.sender;allGuesses[_id].price=_price;allGuesses[_id].startTimestamp=_startTimestamp;allGuesses[_id].endTimestamp=_endTimestamp;allGuesses[_id].totOptionNum=_totOptionNum;return_id;}functiongetNextGuessId()internalnoReentrancyreturns(uint32){uint32result=++currentId;returnresult;}functionmodifyGuess(uint32_id,uint64_startTimestamp,uint64_endTimestamp)publicreturns(bool){require(allGuesses[_id].startTimestamp>now&&allGuesses[_id].drawer==msg.sender);allGuesses[_id].startTimestamp=_startTimestamp;allGuesses[_id].endTimestamp=_endTimestamp;returntrue;}functionstopGuess(uint32_id,boolstoped)publicreturns(bool){require(allGuesses[_id].endTimestamp>now&&allGuesses[_id].drawer==msg.sender);allGuesses[_id].stoped=stoped;returntrue;}functionsetwinPercent(uint32_winPercent)publiconlyOwner{winPercent=_winPercent;}functionguess(stringbet)publicpayablereturns(bool){varsplits=splitStr(bet,";");for(uinti=0;i<splits.length;i++){varsingleBet=splitStr2Int(splits[i],",");innerGuess(uint32(singleBet[0]),uint16(singleBet[1]),uint32(singleBet[2]),msg.sender);}returntrue;}functioninnerGuess(uint32_id,uint16optionIndex,uint32num,addressplayer)internal{if(allGuesses[_id].stoped){return;}if(allGuesses[_id].startTimestamp>now||allGuesses[_id].endTimestamp<now){return;}if(allGuesses[_id].drawer==player){return;}GuessOptionstorageoption=allGuesses[_id].options[optionIndex];option.optionIndex=optionIndex;option.totNum+=num;uint32count=option.bets[player];option.bets[player]=count+num;}functionsplitStr(stringoriStr,string_delim)internalreturns(string[]){vars=oriStr.toSlice();vardelim=_delim.toSlice();varparts=newstring[](s.count(delim)+1);for(uinti=0;i<parts.length;i++){parts[i]=s.split(delim).toString();}returnparts;}functionsplitStr2Int(stringoriStr,string_delim)publicreturns(uint[]){vars=oriStr.toSlice();vardelim=_delim.toSlice();varparts=newuint[](s.count(delim)+1);for(uinti=0;i<parts.length;i++){parts[i]=Integers.parseInt(s.split(delim).toString());}returnparts;}functionsetGuessAnswer(stringanswers)publicreturns(bool){returntrue;}functiongetGuessInfo(stringids)publicviewreturns(string){varsplits=splitStr2Int(ids,";");varresult=newstrings.slice[](splits.length);for(uinti=0;i<splits.length;i++){result[i]=getSingleGuessInfo(uint32(splits[i])).toSlice();}returnstrings.join(";".toSlice(),result);}functiongetSingleGuessInfo(uint32id)internalviewreturns(string){varoptions=allGuesses[id].options;uint16num=allGuesses[id].totOptionNum;varresult=newstrings.slice[](num+1);result[0]=Integers.toString(id).toSlice();for(uint16i=1;i<=num;i++){result[i]=Integers.toString(options[i].totNum).toSlice();}returnstrings.join(",".toSlice(),result);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 969
column: 1
content: functionsetwinPercent(uint32_winPercent)publiconlyOwner{winPercent=_winPercent;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 95
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 174
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 858
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 874
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 900
column: 9
content: private

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 182
column: 4
content: functionmemcpy(uintdest,uintsrc,uintlen)privatepure{for(;len>=32;len-=32){assembly{mstore(dest,mload(src))}dest+=32;src+=32;}uintmask=256**(32-len)-1;assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 206
column: 4
content: functiontoSlice(stringself)internalpurereturns(slice){uintptr;assembly{ptr:=add(self,0x20)}returnslice(bytes(self).length,ptr);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 252
column: 4
content: functiontoSliceB32(bytes32self)internalpurereturns(sliceret){assembly{letptr:=mload(0x40)mstore(0x40,add(ptr,0x20))mstore(ptr,self)mstore(add(ret,0x20),ptr)}ret._len=len(self);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 277
column: 4
content: functiontoString(sliceself)internalpurereturns(string){stringmemoryret=newstring(self._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 294
column: 4
content: functionlen(sliceself)internalpurereturns(uintl){uintptr=self._ptr-31;uintend=ptr+self._len;for(l=0;ptr<end;l++){uint8b;assembly{b:=and(mload(ptr),0xFF)}if(b<0x80){ptr+=1;}elseif(b<0xE0){ptr+=2;}elseif(b<0xF0){ptr+=3;}elseif(b<0xF8){ptr+=4;}elseif(b<0xFC){ptr+=5;}else{ptr+=6;}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 335
column: 4
content: functioncompare(sliceself,sliceother)internalpurereturns(int){uintshortest=self._len;if(other._len<self._len)shortest=other._len;uintselfptr=self._ptr;uintotherptr=other._ptr;for(uintidx=0;idx<shortest;idx+=32){uinta;uintb;assembly{a:=mload(selfptr)b:=mload(otherptr)}if(a!=b){uint256mask=uint256(-1);if(shortest<32){mask=~(2**(8*(32-shortest+idx))-1);}uint256diff=(a&mask)-(b&mask);if(diff!=0)returnint(diff);}selfptr+=32;otherptr+=32;}returnint(self._len)-int(other._len);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 382
column: 4
content: functionnextRune(sliceself,slicerune)internalpurereturns(slice){rune._ptr=self._ptr;if(self._len==0){rune._len=0;returnrune;}uintl;uintb;assembly{b:=and(mload(sub(mload(add(self,32)),31)),0xFF)}if(b<0x80){l=1;}elseif(b<0xE0){l=2;}elseif(b<0xF0){l=3;}else{l=4;}if(l>self._len){rune._len=self._len;self._ptr+=self._len;self._len=0;returnrune;}self._ptr+=l;self._len-=l;rune._len=l;returnrune;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 433
column: 4
content: functionord(sliceself)internalpurereturns(uintret){if(self._len==0){return0;}uintword;uintlength;uintdivisor=2**248;assembly{word:=mload(mload(add(self,32)))}uintb=word/divisor;if(b<0x80){ret=b;length=1;}elseif(b<0xE0){ret=b&0x1F;length=2;}elseif(b<0xF0){ret=b&0x0F;length=3;}else{ret=b&0x07;length=4;}if(length>self._len){return0;}for(uinti=1;i<length;i++){divisor=divisor/256;b=(word/divisor)&0xFF;if(b&0xC0!=0x80){return0;}ret=(ret*64)|(b&0x3F);}returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 482
column: 4
content: functionkeccak(sliceself)internalpurereturns(bytes32ret){assembly{ret:=keccak256(mload(add(self,32)),mload(self))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 494
column: 4
content: functionstartsWith(sliceself,sliceneedle)internalpurereturns(bool){if(self._len<needle._len){returnfalse;}if(self._ptr==needle._ptr){returntrue;}boolequal;assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}returnequal;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 520
column: 4
content: functionbeyond(sliceself,sliceneedle)internalpurereturns(slice){if(self._len<needle._len){returnself;}boolequal=true;if(self._ptr!=needle._ptr){assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(sha3(selfptr,length),sha3(needleptr,length))}}if(equal){self._len-=needle._len;self._ptr+=needle._len;}returnself;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 549
column: 4
content: functionendsWith(sliceself,sliceneedle)internalpurereturns(bool){if(self._len<needle._len){returnfalse;}uintselfptr=self._ptr+self._len-needle._len;if(selfptr==needle._ptr){returntrue;}boolequal;assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}returnequal;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 577
column: 4
content: functionuntil(sliceself,sliceneedle)internalpurereturns(slice){if(self._len<needle._len){returnself;}uintselfptr=self._ptr+self._len-needle._len;boolequal=true;if(selfptr!=needle._ptr){assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}}if(equal){self._len-=needle._len;}returnself;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 603
column: 4
content: functionfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr=selfptr;uintidx;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}uintend=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr>=end)returnselfptr+selflen;ptr++;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr;}else{bytes32hash;assembly{hash:=sha3(needleptr,needlelen)}for(idx=0;idx<=selflen-needlelen;idx++){bytes32testHash;assembly{testHash:=sha3(ptr,needlelen)}if(hash==testHash)returnptr;ptr+=1;}}}returnselfptr+selflen;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 644
column: 4
content: functionrfindPtr(uintselflen,uintselfptr,uintneedlelen,uintneedleptr)privatepurereturns(uint){uintptr;if(needlelen<=selflen){if(needlelen<=32){bytes32mask=bytes32(~(2**(8*(32-needlelen))-1));bytes32needledata;assembly{needledata:=and(mload(needleptr),mask)}ptr=selfptr+selflen-needlelen;bytes32ptrdata;assembly{ptrdata:=and(mload(ptr),mask)}while(ptrdata!=needledata){if(ptr<=selfptr)returnselfptr;ptr--;assembly{ptrdata:=and(mload(ptr),mask)}}returnptr+needlelen;}else{bytes32hash;assembly{hash:=sha3(needleptr,needlelen)}ptr=selfptr+(selflen-needlelen);while(ptr>=selfptr){bytes32testHash;assembly{testHash:=sha3(ptr,needlelen)}if(hash==testHash)returnptr+needlelen;ptr-=1;}}}returnselfptr;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 815
column: 4
content: functionconcat(sliceself,sliceother)internalpurereturns(string){stringmemoryret=newstring(self._len+other._len);uintretptr;assembly{retptr:=add(ret,32)}memcpy(retptr,self._ptr,self._len);memcpy(retptr+self._len,other._ptr,other._len);returnret;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 832
column: 4
content: functionjoin(sliceself,slice[]parts)internalpurereturns(string){if(parts.length==0)return"";uintlength=self._len*(parts.length-1);for(uinti=0;i<parts.length;i++)length+=parts[i]._len;stringmemoryret=newstring(length);uintretptr;assembly{retptr:=add(ret,32)}for(i=0;i<parts.length;i++){memcpy(retptr,parts[i]._ptr,parts[i]._len);retptr+=parts[i]._len;if(i<parts.length-1){memcpy(retptr,self._ptr,self._len);retptr+=self._len;}}returnret;}

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: d48ac4
severity: 2
line: 26
column: 43
content: i>=0

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 21
column: 22
content: string_value

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 43
column: 17
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 85
column: 17
content: bytes_ret

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 206
column: 21
content: stringself

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 277
column: 57
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 815
column: 68
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 832
column: 30
content: slice[]parts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 832
column: 68
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 978
column: 19
content: stringbet

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1008
column: 22
content: stringoriStr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1008
column: 36
content: string_delim

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1008
column: 68
content: string[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1018
column: 26
content: stringoriStr

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1018
column: 40
content: string_delim

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1018
column: 70
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1033
column: 28
content: stringanswers

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1044
column: 26
content: stringids

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1044
column: 58
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1057
column: 65
content: string

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 68
column: 8
content: assembly{letm_alloc:=add(msize(),0x1)mstore8(m_alloc,_base)_ret:=mload(m_alloc)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 86
column: 8
content: assembly{letm_alloc:=add(msize(),0x1)_ret:=mload(m_alloc)mstore(_ret,0x20)mstore(add(_ret,0x20),_base)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 185
column: 12
content: assembly{mstore(dest,mload(src))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 194
column: 8
content: assembly{letsrcpart:=and(mload(src),not(mask))letdestpart:=and(mload(dest),mask)mstore(dest,or(destpart,srcpart))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 208
column: 8
content: assembly{ptr:=add(self,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 254
column: 8
content: assembly{letptr:=mload(0x40)mstore(0x40,add(ptr,0x20))mstore(ptr,self)mstore(add(ret,0x20),ptr)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 280
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 300
column: 12
content: assembly{b:=and(mload(ptr),0xFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 345
column: 12
content: assembly{a:=mload(selfptr)b:=mload(otherptr)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 393
column: 8
content: assembly{b:=and(mload(sub(mload(add(self,32)),31)),0xFF)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 443
column: 8
content: assembly{word:=mload(mload(add(self,32)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 483
column: 8
content: assembly{ret:=keccak256(mload(add(self,32)),mload(self))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 504
column: 8
content: assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 527
column: 12
content: assembly{letlength:=mload(needle)letselfptr:=mload(add(self,0x20))letneedleptr:=mload(add(needle,0x20))equal:=eq(sha3(selfptr,length),sha3(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 561
column: 8
content: assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 585
column: 12
content: assembly{letlength:=mload(needle)letneedleptr:=mload(add(needle,0x20))equal:=eq(keccak256(selfptr,length),keccak256(needleptr,length))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 612
column: 16
content: assembly{needledata:=and(mload(needleptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 616
column: 16
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 622
column: 20
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 628
column: 16
content: assembly{hash:=sha3(needleptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 632
column: 20
content: assembly{testHash:=sha3(ptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 652
column: 16
content: assembly{needledata:=and(mload(needleptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 656
column: 16
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 662
column: 20
content: assembly{ptrdata:=and(mload(ptr),mask)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 668
column: 16
content: assembly{hash:=sha3(needleptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 672
column: 20
content: assembly{testHash:=sha3(ptr,needlelen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 818
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 842
column: 8
content: assembly{retptr:=add(ret,32)}

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 1011
column: 8
content: varparts=newstring[](s.count(delim)+1)

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 1021
column: 8
content: varparts=newuint[](s.count(delim)+1)

ruleId: SOLIDITY_VAR
patternId: d28aa7
severity: 2
line: 1061
column: 9
content: varresult=newstrings.slice[](num+1)

SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :4
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :8
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :8
SOLIDITY_ADDRESS_HARDCODED :27
SOLIDITY_UPGRADE_TO_050 :19
SOLIDITY_GAS_LIMIT_IN_LOOPS :11
SOLIDITY_SHOULD_NOT_BE_PURE :17
SOLIDITY_DEPRECATED_CONSTRUCTIONS :6
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_VAR :3
SOLIDITY_UINT_CANT_BE_NEGATIVE :1
SOLIDITY_USING_INLINE_ASSEMBLY :28
