C:\Users\hp\DataSet\GnosisSafe.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 137
column: 55
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 232
column: 54
content: 0x1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 537
column: 51
content: 0x20c13b0b

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 179
column: 8
content: modules[address(module)]=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 303
column: 8
content: owners[owner]=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 329
column: 8
content: owners[oldOwner]=address(0)

ruleId: SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE
patternId: b180ca
severity: 2
line: 53
column: 4
content: functiontransferToken(addresstoken,addressreceiver,uint256amount)internalreturns(booltransferred){bytesmemorydata=abi.encodeWithSignature("transfer(address,uint256)",receiver,amount);assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 253
column: 8
content: for(uint256i=0;i<_owners.length;i++){addressowner=_owners[i];require(owner!=address(0)&&owner!=SENTINEL_OWNERS,"Invalid owner address provided");require(owners[owner]==address(0),"Duplicate owner address provided");owners[currentOwner]=owner;currentOwner=owner;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 208
column: 8
content: while(currentModule!=SENTINEL_MODULES){currentModule=modules[currentModule];moduleCount++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 217
column: 8
content: while(currentModule!=SENTINEL_MODULES){array[moduleCount]=currentModule;currentModule=modules[currentModule];moduleCount++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 377
column: 8
content: while(currentOwner!=SENTINEL_OWNERS){array[index]=currentOwner;currentOwner=owners[currentOwner];index++;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 19
column: 4
content: functionexecuteCall(addressto,uint256value,bytesmemorydata,uint256txGas)internalreturns(boolsuccess){assembly{success:=call(txGas,to,value,add(data,0x20),mload(data),0,0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 29
column: 4
content: functionexecuteDelegateCall(addressto,bytesmemorydata,uint256txGas)internalreturns(boolsuccess){assembly{success:=delegatecall(txGas,to,add(data,0x20),mload(data),0,0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 53
column: 4
content: functiontransferToken(addresstoken,addressreceiver,uint256amount)internalreturns(booltransferred){bytesmemorydata=abi.encodeWithSignature("transfer(address,uint256)",receiver,amount);assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 452
column: 4
content: functionsignatureSplit(bytesmemorysignatures,uint256pos)internalpurereturns(uint8v,bytes32r,bytes32s){assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 253
column: 8
content: for(uint256i=0;i<_owners.length;i++){addressowner=_owners[i];require(owner!=address(0)&&owner!=SENTINEL_OWNERS,"Invalid owner address provided");require(owners[owner]==address(0),"Duplicate owner address provided");owners[currentOwner]=owner;currentOwner=owner;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 208
column: 14
content: currentModule!=SENTINEL_MODULES

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 217
column: 14
content: currentModule!=SENTINEL_MODULES

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 377
column: 14
content: currentOwner!=SENTINEL_OWNERS

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 82
column: 0
content: contractFallbackManagerisSelfAuthorized{bytes32internalconstantFALLBACK_HANDLER_STORAGE_SLOT=0x6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d5;functioninternalSetFallbackHandler(addresshandler)internal{bytes32slot=FALLBACK_HANDLER_STORAGE_SLOT;assembly{sstore(slot,handler)}}functionsetFallbackHandler(addresshandler)publicauthorized{internalSetFallbackHandler(handler);}function()externalpayable{if(msg.value>0||msg.data.length==0)return;bytes32slot=FALLBACK_HANDLER_STORAGE_SLOT;addresshandler;assembly{handler:=sload(slot)}if(handler!=address(0)){assembly{calldatacopy(0,0,calldatasize())letsuccess:=call(gas,handler,0,0,calldatasize(),0,0)returndatacopy(0,0,returndatasize())ifeq(success,0){revert(0,returndatasize())}return(0,returndatasize())}}}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 543
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 452
column: 4
content: functionsignatureSplit(bytesmemorysignatures,uint256pos)internalpurereturns(uint8v,bytes32r,bytes32s){assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 455
column: 16
content: (uint8v,bytes32r,bytes32s)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 24
column: 8
content: assembly{success:=call(txGas,to,value,add(data,0x20),mload(data),0,0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 34
column: 8
content: assembly{success:=delegatecall(txGas,to,add(data,0x20),mload(data),0,0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 63
column: 8
content: assembly{letsuccess:=call(sub(gas,10000),token,0,add(data,0x20),mload(data),0,0)letptr:=mload(0x40)returndatacopy(ptr,0,returndatasize)switchreturndatasizecase0{transferred:=success}case0x20{transferred:=iszero(or(iszero(success),iszero(mload(ptr))))}default{transferred:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 90
column: 8
content: assembly{sstore(slot,handler)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 115
column: 8
content: assembly{handler:=sload(slot)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 121
column: 12
content: assembly{calldatacopy(0,0,calldatasize())letsuccess:=call(gas,handler,0,0,calldatasize(),0,0)returndatacopy(0,0,returndatasize())ifeq(success,0){revert(0,returndatasize())}return(0,returndatasize())}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 461
column: 8
content: assembly{letsignaturePos:=mul(0x41,pos)r:=mload(add(signatures,add(signaturePos,0x20)))s:=mload(add(signatures,add(signaturePos,0x40)))v:=and(mload(add(signatures,add(signaturePos,0x41))),0xff)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 581
column: 4
content: functionsetup(address[]calldata_owners,uint256_threshold,addressto,bytescalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 235
column: 4
content: uint256ownerCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 392
column: 4
content: addressmasterCopy;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 585
column: 23
content: data,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 586
column: 8
content: addressfallbackHandler,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 587
column: 8
content: addresspaymentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 588
column: 8
content: uint256payment,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 589
column: 8
content: addresspayablepaymentReceiver)external{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 593
column: 8
content: require(domainSeparator==0,"Domain Separator already set!");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 594
column: 8
content: domainSeparator=keccak256

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 594
column: 35
content: (abi.encode<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 594
column: 46
content: (DOMAIN_SEPARATOR_TYPEHASH,this));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 595
column: 8
content: setupOwners(_owners,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 595
column: 29
content: _threshold);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 597
column: 8
content: setupModules(to,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 597
column: 25
content: data);if

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 598
column: 11
content: (fallbackHandler!=<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 598
column: 31
content: address

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 598
column: 38
content: (0))internalSetFallbackHandler

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 598
column: 69
content: (fallbackHandler);if

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 600
column: 11
content: (payment>0){handlePayment

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 603
column: 25
content: (payment,0,1,paymentToken,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 603
column: 55
content: paymentReceiver);

SOLIDITY_VISIBILITY :23
SOLIDITY_SAFEMATH :1
SOLIDITY_ERC20_FUNCTIONS_ALWAYS_RETURN_FALSE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_ADDRESS_HARDCODED :6
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_USING_INLINE_ASSEMBLY :7
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
