C:\Users\hp\DataSet\RaidenMicroTransferChannels.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 162
column: 73
content: 0x20

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 168
column: 75
content: 0x34

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 175
column: 74
content: 0x48

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 430
column: 8
content: for(uint256i=0;i<_trusted_contracts.length;i++){if(addressHasCode(_trusted_contracts[i])){trusted_contracts[_trusted_contracts[i]]=true;TrustedContract(_trusted_contracts[i],true);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 442
column: 8
content: for(uint256i=0;i<_trusted_contracts.length;i++){if(trusted_contracts[_trusted_contracts[i]]){trusted_contracts[_trusted_contracts[i]]=false;TrustedContract(_trusted_contracts[i],false);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 430
column: 8
content: for(uint256i=0;i<_trusted_contracts.length;i++){if(addressHasCode(_trusted_contracts[i])){trusted_contracts[_trusted_contracts[i]]=true;TrustedContract(_trusted_contracts[i],true);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 442
column: 8
content: for(uint256i=0;i<_trusted_contracts.length;i++){if(trusted_contracts[_trusted_contracts[i]]){trusted_contracts[_trusted_contracts[i]]=false;TrustedContract(_trusted_contracts[i],false);}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 665
column: 4
content: functionaddressFromBytes(bytesdata,uint256offset)internalpurereturns(address){bytes20extracted_address;assembly{extracted_address:=mload(add(data,offset))}returnaddress(extracted_address);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 677
column: 4
content: functionblockNumberFromBytes(bytesdata,uint256offset)internalpurereturns(uint32){bytes4block_number;assembly{block_number:=mload(add(data,offset))}returnuint32(block_number);}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 688
column: 4
content: functionaddressHasCode(address_contract)internalviewreturns(bool){uintsize;assembly{size:=extcodesize(_contract)}returnsize>0;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 473
column: 31
content: keccak256(keccak256('string message_id','address receiver','uint32 block_created','uint192 balance','address contract'),keccak256('Sender balance proof signature',_receiver_address,_open_block_number,_balance,address(this)))

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 474
column: 12
content: keccak256('string message_id','address receiver','uint32 block_created','uint192 balance','address contract')

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 481
column: 12
content: keccak256('Sender balance proof signature',_receiver_address,_open_block_number,_balance,address(this))

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 518
column: 31
content: keccak256(keccak256('string message_id','address sender','uint32 block_created','uint192 balance','address contract'),keccak256('Receiver closing signature',_sender_address,_open_block_number,_balance,address(this)))

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 519
column: 12
content: keccak256('string message_id','address sender','uint32 block_created','uint192 balance','address contract')

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 526
column: 12
content: keccak256('Receiver closing signature',_sender_address,_open_block_number,_balance,address(this))

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 554
column: 15
content: keccak256(_sender_address,_receiver_address,_open_block_number)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 122
column: 8
content: address[]_trusted_contracts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 429
column: 33
content: address[]_trusted_contracts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 441
column: 36
content: address[]_trusted_contracts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 462
column: 8
content: bytes_balance_msg_sig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 507
column: 8
content: bytes_closing_sig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 665
column: 31
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 677
column: 34
content: bytesdata

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 667
column: 8
content: assembly{extracted_address:=mload(add(data,offset))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 679
column: 8
content: assembly{block_number:=mload(add(data,offset))}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_UPGRADE_TO_050 :14
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_SHOULD_NOT_BE_PURE :2
