C:\Users\hp\DataSet\contracts\ropsten\34\348c85fBbEb713137559c86e7037A7eafDBBC115_SGCMasterCard.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 129
column: 37
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 148
column: 37
content: 0x0

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 63
column: 0
content: contractSGCMasterCardisOwnable{usingSafeMathforuint256;uint256masterCardCount;enummasterCardStatus{Inprocess,Issued,Returned}mapping(address=>MasterCard)card;structMasterCard{uint256masterCardNumber;uint256valueLocked;uint256amountReturned;uint256amountAdminWithdraw;uint256utilizedFunds;uint256amountLockTime;uint256amountWithdrawTime;addressmasterCardHolderAddress;boolamountLockedStatus;masterCardStatusstatus;}constructor()public{masterCardCount=1;}functiongetOrderCount()publicviewreturns(uint256_count){_count=masterCardCount-1;}functionmasterCardEscrow()publicpayable{uint256sgcAmount=msg.value;address_address=msg.sender;require(sgcAmount!=0);if(card[_address].amountLockedStatus!=true){card[_address].valueLocked=sgcAmount;card[_address].amountLockTime=block.timestamp;card[_address].masterCardHolderAddress=msg.sender;card[_address].amountLockedStatus=true;card[_address].status=masterCardStatus.Inprocess;masterCardCount=masterCardCount.add(1);}elseif(card[_address].amountLockedStatus==true){card[_address].valueLocked=card[_address].valueLocked.add(sgcAmount);card[_address].amountLockTime=block.timestamp;}}functiongetDetails(address_address)publicviewreturns(uint256_masterCardNumber,uint256_valueLocked,uint256_amountReturned,uint256_amountAdminWithdraw,uint256_utilizedFunds,uint256_amountLockTime,uint256_amountWithdrawTime,address_masterCardHolderAddress,bool_amountLockedStatus,masterCardStatus_status){require(_address!=address(0x0));_masterCardNumber=card[_address].masterCardNumber;_valueLocked=card[_address].valueLocked;_amountReturned=card[_address].amountReturned;_amountAdminWithdraw=card[_address].amountAdminWithdraw;_utilizedFunds=card[_address].utilizedFunds;_amountLockTime=card[_address].amountLockTime;_amountWithdrawTime=card[_address].amountWithdrawTime;_masterCardHolderAddress=card[_address].masterCardHolderAddress;_amountLockedStatus=card[_address].amountLockedStatus;_status=card[_address].status;}functionupdateUtilizedFundsByUser(address_address,uint256_amount)publiconlyOwner{require(card[_address].valueLocked>=_amount,"Invalid amount!");require(_address!=address(0x0));card[_address].valueLocked=card[_address].valueLocked.sub(_amount);card[_address].utilizedFunds=card[_address].utilizedFunds.add(_amount);if(card[_address].valueLocked==0){card[_address].amountLockedStatus=false;}}functionadminEscrowedFundsWithdraw(uint256_amount,address<missing ')'>payable_address,address_withdrawFromAddress)publiconlyOwner{require(_amount<=card[_withdrawFromAddress].utilizedFunds,"Invalid amount!");require(_address!=address(0x0));require(_withdrawFromAddress!=address(0x0));card[_withdrawFromAddress].utilizedFunds=card[_withdrawFromAddress].utilizedFunds.sub(_amount);card[_withdrawFromAddress].amountAdminWithdraw=card[_withdrawFromAddress].amountAdminWithdraw.add(_amount);_address.transfer(_amount);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 5
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 65
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 127
column: 60
content: (uint256_masterCardNumber,uint256_valueLocked,uint256_amountReturned,uint256_amountAdminWithdraw,uint256_utilizedFunds,uint256_amountLockTime,uint256_amountWithdrawTime,address_masterCardHolderAddress,bool_amountLockedStatus,masterCardStatus_status)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 161
column: 4
content: functionadminEscrowedFundsWithdraw(uint256_amount,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 67
column: 4
content: uint256masterCardCount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 71
column: 4
content: mapping(address=>MasterCard)card;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 73
content: _address,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 83
content: address_withdrawFromAddress)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 120
content: onlyOwner{require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 163
column: 15
content: (_amount<=card[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 163
column: 32
content: _withdrawFromAddress].

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 163
column: 54
content: utilizedFunds,"Invalid amount!");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 8
content: require(_address!=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 29
content: address

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 165
column: 36
content: (0x0));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 167
column: 8
content: require(_withdrawFromAddress!=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 167
column: 41
content: address

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 167
column: 48
content: (0x0));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 169
column: 8
content: card[_withdrawFromAddress].utilizedFunds=card[_withdrawFromAddress].utilizedFunds.sub(_amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 170
column: 8
content: card[_withdrawFromAddress].amountAdminWithdraw=card[_withdrawFromAddress].amountAdminWithdraw.add(_amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 171
column: 8
content: _address.transfer(_amount);

SOLIDITY_VISIBILITY :18
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_SHOULD_RETURN_STRUCT :1
