C:\Users\hp\DataSet\contracts\ropsten\7e\7e2cc352763c0444432ea57a256c42e59ecbb88d_BigbomDigitalContract.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 43
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 90
column: 13
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 110
column: 13
content: (address(0))

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 174
column: 4
content: for(uinti=0;i<addresses.length;i++){status[i]=(keccak256(bboDocuments[bboDocHash].signedAddresses[addresses[i]])!=keccak256(""));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 184
column: 4
content: for(uinti=0;i<docHashes.length;i++){expiredTimestamps[i]=bboDocuments[docHashes[i]].expiredTimestamp;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 207
column: 6
content: for(uinti=0;i<ss.length/2;++i){r[i]=byte(fromHexChar(uint(ss[2*i]))*16+fromHexChar(uint(ss[2*i+1])));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 244
column: 5
content: for(uinti=0;i<pendingAddresses.length;i++){if(msg.sender!=pendingAddresses[i]){userBBODocuments[pendingAddresses[i]].push(bboDocHash);bboDocuments[bboDocHash].addresses.push(pendingAddresses[i]);pendingAddressesIsValid=true;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 269
column: 5
content: for(uinti=0;i<userBBODocuments[msg.sender].length;i++){if(userBBODocuments[msg.sender][i]==bboDocHash){userHasDocHash=true;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 203
column: 2
content: functionfromBytesToBytes32(bytess)internalpurereturns(bytes32result){bytesmemoryss=bytes(s);require(ss.length%2==0);bytesmemoryr=newbytes(ss.length/2);for(uinti=0;i<ss.length/2;++i){r[i]=byte(fromHexChar(uint(ss[2*i]))*16+fromHexChar(uint(ss[2*i+1])));}assembly{result:=mload(add(r,32))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 174
column: 4
content: for(uinti=0;i<addresses.length;i++){status[i]=(keccak256(bboDocuments[bboDocHash].signedAddresses[addresses[i]])!=keccak256(""));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 184
column: 4
content: for(uinti=0;i<docHashes.length;i++){expiredTimestamps[i]=bboDocuments[docHashes[i]].expiredTimestamp;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 244
column: 5
content: for(uinti=0;i<pendingAddresses.length;i++){if(msg.sender!=pendingAddresses[i]){userBBODocuments[pendingAddresses[i]].push(bboDocHash);bboDocuments[bboDocHash].addresses.push(pendingAddresses[i]);pendingAddressesIsValid=true;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 269
column: 5
content: for(uinti=0;i<userBBODocuments[msg.sender].length;i++){if(userBBODocuments[msg.sender][i]==bboDocHash){userHasDocHash=true;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 145
column: 34
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 148
column: 32
content: private

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 79
column: 2
content: functionrecover(bytes32hash,bytessig)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(sig.length!=65){return(address(0));}assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 203
column: 2
content: functionfromBytesToBytes32(bytess)internalpurereturns(bytes32result){bytesmemoryss=bytes(s);require(ss.length%2==0);bytesmemoryr=newbytes(ss.length/2);for(uinti=0;i<ss.length/2;++i){r[i]=byte(fromHexChar(uint(ss[2*i]))*16+fromHexChar(uint(ss[2*i+1])));}assembly{result:=mload(add(r,32))}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 79
column: 33
content: bytessig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 157
column: 29
content: bytes_bboDocHash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 157
column: 48
content: bytesuserSign

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 170
column: 33
content: bytes_bboDocHash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 170
column: 72
content: address[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 170
column: 83
content: bool[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 181
column: 58
content: bytes32[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 181
column: 69
content: uint[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 203
column: 30
content: bytess

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 217
column: 39
content: byteshash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 232
column: 36
content: bytes_bboDocHash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 232
column: 55
content: bytesuserSign

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 232
column: 71
content: address[]pendingAddresses

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 261
column: 27
content: bytes_bboDocHash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 261
column: 46
content: bytesuserSign

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 97
column: 4
content: assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 211
column: 6
content: assembly{result:=mload(add(r,32))}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_UPGRADE_TO_050 :15
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_SHOULD_NOT_BE_PURE :2
