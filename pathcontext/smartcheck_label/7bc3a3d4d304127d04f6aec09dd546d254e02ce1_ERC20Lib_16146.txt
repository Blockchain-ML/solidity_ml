C:\Users\hp\DataSet\contracts\mainnet\7b\7bc3a3d4d304127d04f6aec09dd546d254e02ce1_ERC20Lib.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 119
column: 2
content: functionbalanceOf(TokenStoragestorageself,address_owner)constantreturns(uint256balance){returnself.balances[_owner];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 139
column: 2
content: functionallowance(TokenStoragestorageself,address_owner,address_spender)constantreturns(uint256remaining){returnself.allowed[_owner][_spender];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 182
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)jumpi(allGood,or(iszero(b),eq(div(res,b),a)))err:=1res:=0allGood:}if(err)Err("times func overflow");}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 200
column: 2
content: functiondividedBy(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{jumpi(e,iszero(b))res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)e:}Err("tried to divide by zero");return(true,0);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 218
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)jumpi(allGood,and(eq(sub(res,b),a),gt(res,b)))err:=1res:=0allGood:}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 236
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)jumpi(allGood,eq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1))err:=1res:=0allGood:}if(err)Err("minus func underflow");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 182
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)jumpi(allGood,or(iszero(b),eq(div(res,b),a)))err:=1res:=0allGood:}if(err)Err("times func overflow");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 218
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)jumpi(allGood,and(eq(sub(res,b),a),gt(res,b)))err:=1res:=0allGood:}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 236
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)jumpi(allGood,eq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1))err:=1res:=0allGood:}if(err)Err("minus func underflow");}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 144
column: 16
content: ^

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 183
column: 4
content: assembly{res:=mul(a,b)jumpi(allGood,or(iszero(b),eq(div(res,b),a)))err:=1res:=0allGood:}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 201
column: 4
content: assembly{jumpi(e,iszero(b))res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)e:}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 219
column: 4
content: assembly{res:=add(a,b)jumpi(allGood,and(eq(sub(res,b),a),gt(res,b)))err:=1res:=0allGood:}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 237
column: 4
content: assembly{res:=sub(a,b)jumpi(allGood,eq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1))err:=1res:=0allGood:}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 53
column: 2
content: functioninit(TokenStoragestorageself,uint256_initial_supply){require(self.totalSupply==0);self.totalSupply=_initial_supply;self.balances[msg.sender]=_initial_supply;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 64
column: 2
content: functiontransfer(TokenStoragestorageself,address_to,uint256_value)returns(boolsuccess){boolerr;uint256balance;(err,balance)=self.balances[msg.sender].minus(_value);if(err){ErrorMsg("Balance too low for transfer");returnfalse;}self.balances[msg.sender]=balance;self.balances[_to]=self.balances[_to]+_value;Transfer(msg.sender,_to,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 86
column: 2
content: functiontransferFrom(TokenStoragestorageself,address_from,address_to,uint256_value)returns(boolsuccess){var_allowance=self.allowed[_from][msg.sender];boolerr;uint256balanceOwner;uint256balanceSpender;(err,balanceOwner)=self.balances[_from].minus(_value);if(err){ErrorMsg("Balance too low for transfer");returnfalse;}(err,balanceSpender)=_allowance.minus(_value);if(err){ErrorMsg("Transfer exceeds allowance");returnfalse;}self.balances[_from]=balanceOwner;self.allowed[_from][msg.sender]=balanceSpender;self.balances[_to]=self.balances[_to]+_value;Transfer(_from,_to,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 119
column: 2
content: functionbalanceOf(TokenStoragestorageself,address_owner)constantreturns(uint256balance){returnself.balances[_owner];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 128
column: 2
content: functionapprove(TokenStoragestorageself,address_spender,uint256_value)returns(boolsuccess){self.allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 139
column: 2
content: functionallowance(TokenStoragestorageself,address_owner,address_spender)constantreturns(uint256remaining){returnself.allowed[_owner][_spender];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 182
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)jumpi(allGood,or(iszero(b),eq(div(res,b),a)))err:=1res:=0allGood:}if(err)Err("times func overflow");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 200
column: 2
content: functiondividedBy(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{jumpi(e,iszero(b))res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)e:}Err("tried to divide by zero");return(true,0);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 218
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)jumpi(allGood,and(eq(sub(res,b),a),gt(res,b)))err:=1res:=0allGood:}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 236
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)jumpi(allGood,eq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1))err:=1res:=0allGood:}if(err)Err("minus func underflow");}

SOLIDITY_VISIBILITY :10
SOLIDITY_DEPRECATED_CONSTRUCTIONS :6
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_USING_INLINE_ASSEMBLY :4
