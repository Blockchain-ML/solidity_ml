C:\Users\hp\DataSet\contracts\ropsten\52\52894952542ad88706ba68d1c2028480c89884dc_GotCrowdSale.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 42
column: 4
content: owner=address(0)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 479
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 653
column: 2
content: functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){returnsuper.approve(_spender,_value);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 287
column: 8
content: for(uinti=0;i<kycSigners.length;i++){isKycSigner[kycSigners[i]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 799
column: 8
content: for(uint256i=0;i<vestingOffsetsLength;i=i.add(1)){if(block.timestamp>start.add(vesting_offsets[i])){vested=vested.add(vesting_amounts[i]);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 812
column: 8
content: for(uint256i=0;i<vestingOffsetsLength;i=i.add(1)){unreleased=unreleased.add(vesting_amounts[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 885
column: 8
content: for(uint256i=0;i<beneficiaries.length;i=i.add(1)){investments[beneficiaries[i]]=Investment(beneficiaries[i],balances[i],0);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 287
column: 8
content: for(uinti=0;i<kycSigners.length;i++){isKycSigner[kycSigners[i]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 885
column: 8
content: for(uint256i=0;i<beneficiaries.length;i=i.add(1)){investments[beneficiaries[i]]=Investment(beneficiaries[i],balances[i],0);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1151
column: 8
content: for(uint256i=0;i<balancesLength;i++){totalInternalBalance=totalInternalBalance.add(balances[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1180
column: 8
content: for(uint256i=0;i<balancesLength;i++){totalPresaleBalance=totalPresaleBalance.add(balances[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1209
column: 8
content: for(uint256i=0;i<balancesLength;i++){totalReservationBalance=totalReservationBalance.add(balances[i]);uint256amount=balances[i];tokensSold=tokensSold.add(amount);availableTokens=availableTokens.sub(amount);mintTokens(beneficiaries[i],amount);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 278
column: 0
content: contractKYCBase{usingSafeMathforuint256;mapping(address=>bool)publicisKycSigner;mapping(uint64=>uint256)publicalreadyPayed;eventKycVerified(addressindexedsigner,addressbuyerAddress,uint64buyerId,uintmaxAmount);constructor(address[]kycSigners)internal{for(uinti=0;i<kycSigners.length;i++){isKycSigner[kycSigners[i]]=true;}}functionreleaseTokensTo(addressbuyer)internalreturns(bool);functionsenderAllowedFor(addressbuyer)internalviewreturns(bool){returnbuyer==msg.sender;}functionbuyTokensFor(addressbuyerAddress,uint64buyerId,uintmaxAmount,uint8v,bytes32r,bytes32s)publicpayablereturns(bool){require(senderAllowedFor(buyerAddress));returnbuyImplementation(buyerAddress,buyerId,maxAmount,v,r,s);}functionbuyTokens(uint64buyerId,uintmaxAmount,uint8v,bytes32r,bytes32s)publicpayablereturns(bool){returnbuyImplementation(msg.sender,buyerId,maxAmount,v,r,s);}functionbuyImplementation(addressbuyerAddress,uint64buyerId,uintmaxAmount,uint8v,bytes32r,bytes32s)privatereturns(bool){bytes32hash=sha256(abi.encodePacked("Eidoo icoengine authorization",this,buyerAddress,buyerId,maxAmount));addresssigner=ecrecover(hash,v,r,s);if(!isKycSigner[signer]){revert();}else{uint256totalPayed=alreadyPayed[buyerId].add(msg.value);require(totalPayed<=maxAmount);alreadyPayed[buyerId]=totalPayed;emitKycVerified(signer,buyerAddress,buyerId,maxAmount);returnreleaseTokensTo(buyerAddress);}}function()public{revert();}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1143
column: 4
content: functioninitPGOMonthlyInternalVault(address[]beneficiaries,uint256[]balances)publiconlyOwnerequalLength(beneficiaries,balances){uint256totalInternalBalance=0;uint256balancesLength=balances.length;for(uint256i=0;i<balancesLength;i++){totalInternalBalance=totalInternalBalance.add(balances[i]);}require(totalInternalBalance==MONTHLY_INTERNAL_VAULT_CAP);pgoMonthlyInternalVault.init(beneficiaries,balances,END_TIME,token);mintTokens(address(pgoMonthlyInternalVault),MONTHLY_INTERNAL_VAULT_CAP);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1172
column: 4
content: functioninitPGOMonthlyPresaleVault(address[]beneficiaries,uint256[]balances)publiconlyOwnerequalLength(beneficiaries,balances){uint256totalPresaleBalance=0;uint256balancesLength=balances.length;for(uint256i=0;i<balancesLength;i++){totalPresaleBalance=totalPresaleBalance.add(balances[i]);}require(totalPresaleBalance==RESERVED_PRESALE_CAP);pgoMonthlyPresaleVault.init(beneficiaries,balances,END_TIME,token);mintTokens(address(pgoMonthlyPresaleVault),totalPresaleBalance);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 65
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 116
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 132
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 157
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 191
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 219
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 273
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 338
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 374
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 426
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 555
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 618
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 694
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 725
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 829
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 962
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1011
column: 16
content: ^

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 333
column: 23
content: {revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 321
column: 8
content: if(!isKycSigner[signer]){revert();}else{uint256totalPayed=alreadyPayed[buyerId].add(msg.value);require(totalPayed<=maxAmount);alreadyPayed[buyerId]=totalPayed;emitKycVerified(signer,buyerAddress,buyerId,maxAmount);returnreleaseTokensTo(buyerAddress);}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 279
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 386
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 734
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 838
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 333
column: 16
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 286
column: 16
content: address[]kycSigners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 874
column: 18
content: address[]beneficiaries

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 874
column: 43
content: uint256[]balances

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1097
column: 8
content: address[]_kycSigners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1143
column: 41
content: address[]beneficiaries

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1143
column: 66
content: uint256[]balances

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1172
column: 40
content: address[]beneficiaries

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1172
column: 65
content: uint256[]balances

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1199
column: 29
content: address[]beneficiaries

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1199
column: 54
content: uint256[]balances

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 388
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 390
column: 2
content: uint256totalSupply_;

SOLIDITY_VISIBILITY :2
SOLIDITY_SAFEMATH :4
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_PRAGMAS_VERSION :18
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :11
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1
SOLIDITY_ERC20_APPROVE :2
