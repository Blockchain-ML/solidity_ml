C:\Users\hp\DataSet\ByteSlice.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 243
column: 4
content: functiontoBytes(Slicememoryself)internalconstantreturns(bytesmemorybts){uint256length=self._unsafe_length;if(length==0)return;uint256memPtr=self._unsafe_memPtr;bts=newbytes(length);assembly{leti:=0letbtsOffset:=add(bts,0x20)letwords:=div(add(length,31),32)tag_loop:jumpi(end,gt(i,words)){letoffset:=mul(i,32)mstore(add(btsOffset,offset),mload(add(memPtr,offset)))i:=add(i,1)}jump(tag_loop)end:mstore(add(add(bts,length),0x20),0)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 13
column: 4
content: functionslice(bytesmemoryself)internalpurereturns(SlicememorynewSlice){assembly{letlength:=mload(self)letmemPtr:=add(self,0x20)mstore(newSlice,mul(memPtr,iszero(iszero(length))))mstore(add(newSlice,0x20),length)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 183
column: 4
content: functionslice(Slicememoryself,uint256startpos,uint256endpos)internalpurereturns(SlicememorynewSlice){uint256length=self._unsafe_length;if(startpos>length||endpos>length||startpos>endpos)revert();assembly{length:=sub(endpos,startpos)letnewMemPtr:=mul(add(mload(self),startpos),iszero(iszero(length)))mstore(newSlice,newMemPtr)mstore(add(newSlice,0x20),length)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 201
column: 4
content: functionslice(Slicememoryself,intstartpos,intendpos)internalpurereturns(SlicememorynewSlice){uint256startpos_;uint256endpos_;uint256length=self._unsafe_length;if(startpos<0){startpos_=uint256(-startpos);if(startpos_>length)revert();startpos_=length-startpos_;}else{startpos_=uint256(startpos);if(startpos_>length)revert();}if(endpos<0){endpos_=uint256(-endpos);if(endpos_>length)revert();endpos_=length-endpos_;}else{endpos_=uint256(endpos);if(endpos_>length)revert();}if(startpos_>endpos_)revert();assembly{length:=sub(endpos_,startpos_)letnewMemPtr:=mul(add(mload(self),startpos_),iszero(iszero(length)))mstore(newSlice,newMemPtr)mstore(add(newSlice,0x20),length)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 288
column: 4
content: functiontoUint(Slicememoryself)internalpurereturns(uint256data){uint256sliceLength=self._unsafe_length;uint256rStartPos=self._unsafe_memPtr;if(sliceLength>32||sliceLength==0)revert();assembly{data:=div(mload(rStartPos),exp(256,sub(32,sliceLength)))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 298
column: 4
content: functiontoBytes32(Slicememoryself)internalpurereturns(bytes32data){uint256sliceLength=self._unsafe_length;uint256rStartPos=self._unsafe_memPtr;if(sliceLength!=32)revert();assembly{data:=mload(rStartPos)}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 185
column: 8
content: if(startpos>length||endpos>length||startpos>endpos)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 208
column: 12
content: if(startpos_>length)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 214
column: 12
content: if(startpos_>length)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 219
column: 12
content: if(endpos_>length)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 225
column: 12
content: if(endpos_>length)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 228
column: 8
content: if(startpos_>endpos_)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 291
column: 8
content: if(sliceLength>32||sliceLength==0)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 301
column: 8
content: if(sliceLength!=32)revert();

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 13
column: 4
content: functionslice(bytesmemoryself)internalpurereturns(SlicememorynewSlice){assembly{letlength:=mload(self)letmemPtr:=add(self,0x20)mstore(newSlice,mul(memPtr,iszero(iszero(length))))mstore(add(newSlice,0x20),length)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 183
column: 4
content: functionslice(Slicememoryself,uint256startpos,uint256endpos)internalpurereturns(SlicememorynewSlice){uint256length=self._unsafe_length;if(startpos>length||endpos>length||startpos>endpos)revert();assembly{length:=sub(endpos,startpos)letnewMemPtr:=mul(add(mload(self),startpos),iszero(iszero(length)))mstore(newSlice,newMemPtr)mstore(add(newSlice,0x20),length)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 201
column: 4
content: functionslice(Slicememoryself,intstartpos,intendpos)internalpurereturns(SlicememorynewSlice){uint256startpos_;uint256endpos_;uint256length=self._unsafe_length;if(startpos<0){startpos_=uint256(-startpos);if(startpos_>length)revert();startpos_=length-startpos_;}else{startpos_=uint256(startpos);if(startpos_>length)revert();}if(endpos<0){endpos_=uint256(-endpos);if(endpos_>length)revert();endpos_=length-endpos_;}else{endpos_=uint256(endpos);if(endpos_>length)revert();}if(startpos_>endpos_)revert();assembly{length:=sub(endpos_,startpos_)letnewMemPtr:=mul(add(mload(self),startpos_),iszero(iszero(length)))mstore(newSlice,newMemPtr)mstore(add(newSlice,0x20),length)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 288
column: 4
content: functiontoUint(Slicememoryself)internalpurereturns(uint256data){uint256sliceLength=self._unsafe_length;uint256rStartPos=self._unsafe_memPtr;if(sliceLength>32||sliceLength==0)revert();assembly{data:=div(mload(rStartPos),exp(256,sub(32,sliceLength)))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 298
column: 4
content: functiontoBytes32(Slicememoryself)internalpurereturns(bytes32data){uint256sliceLength=self._unsafe_length;uint256rStartPos=self._unsafe_memPtr;if(sliceLength!=32)revert();assembly{data:=mload(rStartPos)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 14
column: 8
content: assembly{letlength:=mload(self)letmemPtr:=add(self,0x20)mstore(newSlice,mul(memPtr,iszero(iszero(length))))mstore(add(newSlice,0x20),length)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 187
column: 8
content: assembly{length:=sub(endpos,startpos)letnewMemPtr:=mul(add(mload(self),startpos),iszero(iszero(length)))mstore(newSlice,newMemPtr)mstore(add(newSlice,0x20),length)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 230
column: 8
content: assembly{length:=sub(endpos_,startpos_)letnewMemPtr:=mul(add(mload(self),startpos_),iszero(iszero(length)))mstore(newSlice,newMemPtr)mstore(add(newSlice,0x20),length)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 251
column: 8
content: assembly{leti:=0letbtsOffset:=add(bts,0x20)letwords:=div(add(length,31),32)tag_loop:jumpi(end,gt(i,words)){letoffset:=mul(i,32)mstore(add(btsOffset,offset),mload(add(memPtr,offset)))i:=add(i,1)}jump(tag_loop)end:mstore(add(add(bts,length),0x20),0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 293
column: 8
content: assembly{data:=div(mload(rStartPos),exp(256,sub(32,sliceLength)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 303
column: 8
content: assembly{data:=mload(rStartPos)}

SOLIDITY_DEPRECATED_CONSTRUCTIONS :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :8
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :5
SOLIDITY_USING_INLINE_ASSEMBLY :6
SOLIDITY_SHOULD_NOT_BE_PURE :5
