C:\Users\hp\DataSet\TestDydxBridge.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: f32db1
severity: 1
line: 71
column: 61
content: 1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 189
column: 15
content: msg.sender==ALWAYS_REVERT_ADDRESS?address(0):msg.sender

ruleId: SOLIDITY_ERC20_TRANSFER_SHOULD_THROW
patternId: 550a42
severity: 1
line: 42
column: 4
content: functiontransferFrom(addressfrom,addressto,uint256amount)externalreturns(bool){if(_balances[from]<amount||_balances[to]+amount<_balances[to]){returnfalse;}_balances[from]-=amount;_balances[to]+=amount;returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 35
column: 8
content: for(uint256i=0;i!=holders.length;++i){_balances[holders[i]]=INIT_HOLDER_BALANCE;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 113
column: 8
content: for(uinti=0;i<accounts.length;++i){emitOperateAccount(accounts[i].owner,accounts[i].number);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 120
column: 8
content: for(uinti=0;i<actions.length;++i){emitOperateAction(actions[i].actionType,actions[i].accountId,actions[i].amount.sign,actions[i].amount.denomination,actions[i].amount.ref,actions[i].amount.value,actions[i].primaryMarketId,actions[i].secondaryMarketId,actions[i].otherAddress,actions[i].otherAccountId,actions[i].data);if(actions[i].actionType==IDydx.ActionType.Withdraw){require(IERC20Token(_testTokenAddress).transferFrom(address(this),actions[i].otherAddress,actions[i].amount.value),"TestDydxBridge/WITHDRAW_FAILED");}elseif(actions[i].actionType==IDydx.ActionType.Deposit){require(IERC20Token(_testTokenAddress).transferFrom(actions[i].otherAddress,address(this),actions[i].amount.value),"TestDydxBridge/DEPOSIT_FAILED");}else{revert("TestDydxBridge/UNSUPPORTED_ACTION");}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 113
column: 8
content: for(uinti=0;i<accounts.length;++i){emitOperateAccount(accounts[i].owner,accounts[i].number);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 120
column: 8
content: for(uinti=0;i<actions.length;++i){emitOperateAction(actions[i].actionType,actions[i].accountId,actions[i].amount.sign,actions[i].amount.denomination,actions[i].amount.ref,actions[i].amount.value,actions[i].primaryMarketId,actions[i].secondaryMarketId,actions[i].otherAddress,actions[i].otherAccountId,actions[i].data);if(actions[i].actionType==IDydx.ActionType.Withdraw){require(IERC20Token(_testTokenAddress).transferFrom(address(this),actions[i].otherAddress,actions[i].amount.value),"TestDydxBridge/WITHDRAW_FAILED");}elseif(actions[i].actionType==IDydx.ActionType.Deposit){require(IERC20Token(_testTokenAddress).transferFrom(actions[i].otherAddress,address(this),actions[i].amount.value),"TestDydxBridge/DEPOSIT_FAILED");}else{revert("TestDydxBridge/UNSUPPORTED_ACTION");}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 19
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 28
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 29
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 71
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 72
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 73
column: 9
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 109
column: 8
content: if(_shouldRevertOnOperate){revert("TestDydxBridge/SHOULD_REVERT_ON_OPERATE");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 144
column: 19
content: if(actions[i].actionType==IDydx.ActionType.Deposit){require(IERC20Token(_testTokenAddress).transferFrom(actions[i].otherAddress,address(this),actions[i].amount.value),"TestDydxBridge/DEPOSIT_FAILED");}else{revert("TestDydxBridge/UNSUPPORTED_ACTION");}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :5
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_ERC20_TRANSFER_SHOULD_THROW :1
