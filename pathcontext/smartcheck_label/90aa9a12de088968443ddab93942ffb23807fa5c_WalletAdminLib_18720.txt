C:\Users\hp\DataSet\contracts\mainnet\90\90aa9a12de088968443ddab93942ffb23807fa5c_WalletAdminLib.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 766
column: 18
content: 0xa9059cbb

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 767
column: 18
content: 0x095ea7b3

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 768
column: 19
content: 0x23b872dd

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 322
column: 6
content: self.owners.length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 1029
column: 6
content: self.transactionInfo[_id].length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 157
column: 10
content: self.transactionInfo[_id].length++

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 229
column: 10
content: self.transactionInfo[_id].length++

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 297
column: 10
content: self.transactionInfo[_id].length++

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 366
column: 10
content: self.transactionInfo[_id].length++

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 432
column: 10
content: self.transactionInfo[_id].length++

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 498
column: 10
content: self.transactionInfo[_id].length++

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 563
column: 10
content: self.transactionInfo[_id].length++

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 43ba1c
severity: 1
line: 898
column: 10
content: self.transactionInfo[_id].length++

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 142
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 210
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 280
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 350
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 416
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 482
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 550
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 871
column: 18
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1074
column: 29
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1085
column: 24
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1088
column: 28
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1090
column: 32
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1102
column: 24
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1105
column: 28
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1107
column: 32
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1131
column: 30
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1136
column: 32
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 1150
column: 30
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 49
column: 2
content: functioncheckChangeOwnerArgs(uint_from,uint_to)constantreturns(bool){if(_from==0){LogErrMsg("Change from address is not an owner");returnfalse;}if(_to!=0){LogErrMsg("Change to address is an owner");returnfalse;}returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 65
column: 2
content: functioncheckNewOwnerArgs(uint_index,uint_length,uint_max)constantreturns(bool){if(_index!=0){LogErrMsg("New owner already owner");returnfalse;}if((_length+1)>_max){LogErrMsg("Too many owners");returnfalse;}returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 84
column: 2
content: functioncheckRemoveOwnerArgs(uint_index,uint_length,uint_min)constantreturns(bool){if(_index==0){LogErrMsg("Owner removing not an owner");returnfalse;}if(_length-1<_min){LogErrMsg("Must reduce requiredAdmin first");returnfalse;}returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 102
column: 2
content: functioncheckRequiredChange(uint_newRequired,uint_length)constantreturns(bool){if(_newRequired==0){LogErrMsg("Cant reduce to 0");returnfalse;}if(_length-1<_newRequired){LogErrMsg("Making requirement too high");returnfalse;}returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 121
column: 2
content: functioncalcConfirmsNeeded(uint_required,uint_count)constantreturns(uint){return_required-_count;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 719
column: 2
content: functioncheckNotConfirmed(WalletDatastorageself,bytes32_id,uint_number)constantreturns(bool){require(self.ownerIndex[msg.sender]>0);uint_txLen=self.transactionInfo[_id].length;if(_txLen==0||_number>=_txLen){LogErrMsg("Tx not initiated");LogTransactionFailed(_id,msg.sender);returnfalse;}if(self.transactionInfo[_id][_number].success){LogErrMsg("Transaction already complete");LogTransactionFailed(_id,msg.sender);returnfalse;}boolfound;uintindex;(found,index)=self.transactionInfo[_id][_number].confirmedOwners.indexOf(uint(msg.sender),false);if(found){LogErrMsg("Owner already confirmed");LogTransactionFailed(_id,msg.sender);returnfalse;}returntrue;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 755
column: 2
content: functioncalcConfirmsNeeded(uint_required,uint_count)constantreturns(uint){return_required-_count;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 763
column: 2
content: functiongetAmount(bytes_txData)constantreturns(bool,uint){bytes32getSig;bytes4sig;bytes4tSig=0xa9059cbb;bytes4aSig=0x095ea7b3;bytes4tfSig=0x23b872dd;booltransfer;bytes32_amountData;uint_amount;assembly{getSig:=mload(add(_txData,0x20))}sig=bytes4(getSig);if(sig==tSig||sig==aSig){transfer=true;assembly{_amountData:=mload(add(_txData,0x44))}_amount=uint(_amountData);}elseif(sig==tfSig){transfer=true;assembly{_amountData:=mload(add(_txData,0x64))}_amount=uint(_amountData);}return(transfer,_amount);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1069
column: 2
content: functionsumElements(uint256[]storageself)constantreturns(uint256sum){assembly{mstore(0x60,self_slot)for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{sum:=add(sload(add(sha3(0x60,0x20),i)),sum)}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1082
column: 2
content: functiongetMax(uint256[]storageself)constantreturns(uint256maxValue){assembly{mstore(0x60,self_slot)maxValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),maxValue)case1{maxValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1099
column: 2
content: functiongetMin(uint256[]storageself)constantreturns(uint256minValue){assembly{mstore(0x60,self_slot)minValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),minValue)case0{minValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1119
column: 2
content: functionindexOf(uint256[]storageself,uint256value,boolisSorted)constantreturns(boolfound,uint256index){assembly{mstore(0x60,self_slot)switchisSortedcase1{lethigh:=sub(sload(self_slot),1)letmid:=0letlow:=0for{}iszero(gt(low,high)){}{mid:=div(add(low,high),2)switchlt(sload(add(sha3(0x60,0x20),mid)),value)case1{low:=add(mid,1)}case0{switchgt(sload(add(sha3(0x60,0x20),mid)),value)case1{high:=sub(mid,1)}case0{found:=1index:=midlow:=add(high,1)}}}}case0{for{letlow:=0}lt(low,sload(self_slot)){low:=add(low,1)}{switcheq(sload(add(sha3(0x60,0x20),low)),value)case1{found:=1index:=lowlow:=sload(self_slot)}}}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1164
column: 2
content: functiongetParentI(uint256index)constantprivatereturns(uint256pI){uint256i=index-1;pI=i/2;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1172
column: 2
content: functiongetLeftChildI(uint256index)constantprivatereturns(uint256lcI){uint256i=index*2;lcI=i+1;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1278
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}if(err)Err("times func overflow");}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1297
column: 2
content: functiondividedBy(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{switchiszero(b)case0{res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)}}Err("tried to divide by zero");return(true,0);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1316
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1335
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}if(err)Err("minus func underflow");}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 698
column: 4
content: for(uinti=0;i<_owners.length;i++){require(_owners[i]!=0);self.owners.push(_owners[i]);self.ownerIndex[_owners[i]]=i+1;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1069
column: 2
content: functionsumElements(uint256[]storageself)constantreturns(uint256sum){assembly{mstore(0x60,self_slot)for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{sum:=add(sload(add(sha3(0x60,0x20),i)),sum)}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1082
column: 2
content: functiongetMax(uint256[]storageself)constantreturns(uint256maxValue){assembly{mstore(0x60,self_slot)maxValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),maxValue)case1{maxValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1099
column: 2
content: functiongetMin(uint256[]storageself)constantreturns(uint256minValue){assembly{mstore(0x60,self_slot)minValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),minValue)case0{minValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1119
column: 2
content: functionindexOf(uint256[]storageself,uint256value,boolisSorted)constantreturns(boolfound,uint256index){assembly{mstore(0x60,self_slot)switchisSortedcase1{lethigh:=sub(sload(self_slot),1)letmid:=0letlow:=0for{}iszero(gt(low,high)){}{mid:=div(add(low,high),2)switchlt(sload(add(sha3(0x60,0x20),mid)),value)case1{low:=add(mid,1)}case0{switchgt(sload(add(sha3(0x60,0x20),mid)),value)case1{high:=sub(mid,1)}case0{found:=1index:=midlow:=add(high,1)}}}}case0{for{letlow:=0}lt(low,sload(self_slot)){low:=add(low,1)}{switcheq(sload(add(sha3(0x60,0x20),low)),value)case1{found:=1index:=lowlow:=sload(self_slot)}}}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1278
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}if(err)Err("times func overflow");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1316
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1335
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}if(err)Err("minus func underflow");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 698
column: 4
content: for(uinti=0;i<_owners.length;i++){require(_owners[i]!=0);self.owners.push(_owners[i]);self.ownerIndex[_owners[i]]=i+1;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1190
column: 12
content: lChild<=end

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1219
column: 12
content: lChild<=end

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1036
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1240
column: 16
content: ^

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: 11ca45b
severity: 3
line: 1187
column: 10
content: start>=0

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: d48ac4
severity: 2
line: 1187
column: 10
content: start>=0

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 773
column: 4
content: assembly{getSig:=mload(add(_txData,0x20))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 777
column: 6
content: assembly{_amountData:=mload(add(_txData,0x44))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 781
column: 6
content: assembly{_amountData:=mload(add(_txData,0x64))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 844
column: 4
content: assembly{_newContract:=create(_value,add(_txData,0x20),mload(_txData))allGood:=gt(extcodesize(_newContract),0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1070
column: 4
content: assembly{mstore(0x60,self_slot)for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{sum:=add(sload(add(sha3(0x60,0x20),i)),sum)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1083
column: 4
content: assembly{mstore(0x60,self_slot)maxValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),maxValue)case1{maxValue:=sload(add(sha3(0x60,0x20),i))}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1100
column: 4
content: assembly{mstore(0x60,self_slot)minValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),minValue)case0{minValue:=sload(add(sha3(0x60,0x20),i))}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1121
column: 4
content: assembly{mstore(0x60,self_slot)switchisSortedcase1{lethigh:=sub(sload(self_slot),1)letmid:=0letlow:=0for{}iszero(gt(low,high)){}{mid:=div(add(low,high),2)switchlt(sload(add(sha3(0x60,0x20),mid)),value)case1{low:=add(mid,1)}case0{switchgt(sload(add(sha3(0x60,0x20),mid)),value)case1{high:=sub(mid,1)}case0{found:=1index:=midlow:=add(high,1)}}}}case0{for{letlow:=0}lt(low,sload(self_slot)){low:=add(low,1)}{switcheq(sload(add(sha3(0x60,0x20),low)),value)case1{found:=1index:=lowlow:=sload(self_slot)}}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1279
column: 4
content: assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1298
column: 4
content: assembly{switchiszero(b)case0{res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1317
column: 4
content: assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1336
column: 4
content: assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 49
column: 2
content: functioncheckChangeOwnerArgs(uint_from,uint_to)constantreturns(bool){if(_from==0){LogErrMsg("Change from address is not an owner");returnfalse;}if(_to!=0){LogErrMsg("Change to address is an owner");returnfalse;}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 65
column: 2
content: functioncheckNewOwnerArgs(uint_index,uint_length,uint_max)constantreturns(bool){if(_index!=0){LogErrMsg("New owner already owner");returnfalse;}if((_length+1)>_max){LogErrMsg("Too many owners");returnfalse;}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 84
column: 2
content: functioncheckRemoveOwnerArgs(uint_index,uint_length,uint_min)constantreturns(bool){if(_index==0){LogErrMsg("Owner removing not an owner");returnfalse;}if(_length-1<_min){LogErrMsg("Must reduce requiredAdmin first");returnfalse;}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 102
column: 2
content: functioncheckRequiredChange(uint_newRequired,uint_length)constantreturns(bool){if(_newRequired==0){LogErrMsg("Cant reduce to 0");returnfalse;}if(_length-1<_newRequired){LogErrMsg("Making requirement too high");returnfalse;}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 121
column: 2
content: functioncalcConfirmsNeeded(uint_required,uint_count)constantreturns(uint){return_required-_count;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 135
column: 2
content: functionchangeOwner(WalletMainLib.WalletDatastorageself,address_from,address_to,bool_confirm,bytes_data)returns(bool,bytes32){bytes32_id=sha3("changeOwner",_from,_to);uint_number=self.transactionInfo[_id].length;boolallGood;if(msg.sender!=address(this)){if(!_confirm){allGood=self.revokeConfirm(_id);return(allGood,_id);}else{if(_number==0||self.transactionInfo[_id][_number-1].success){require(self.ownerIndex[msg.sender]>0);allGood=checkChangeOwnerArgs(self.ownerIndex[_from],self.ownerIndex[_to]);if(!allGood)return(false,0);self.transactionInfo[_id].length++;self.transactionInfo[_id][_number].confirmRequired=self.requiredAdmin;self.transactionInfo[_id][_number].day=now/1days;self.transactions[now/1days].push(_id);}else{_number--;allGood=self.checkNotConfirmed(_id,_number);if(!allGood)return(false,_id);}}self.transactionInfo[_id][_number].confirmedOwners.push(uint256(msg.sender));self.transactionInfo[_id][_number].confirmCount++;}else{_number--;}if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){self.transactionInfo[_id][_number].success=true;uinti=self.ownerIndex[_from];self.ownerIndex[_from]=0;self.owners[i]=_to;self.ownerIndex[_to]=i;deleteself.transactionInfo[_id][_number].data;LogOwnerChanged(_from,_to);}else{if(self.transactionInfo[_id][_number].data.length==0)self.transactionInfo[_id][_number].data=_data;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);}return(true,_id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 204
column: 2
content: functionaddOwner(WalletMainLib.WalletDatastorageself,address_newOwner,bool_confirm,bytes_data)returns(bool,bytes32){bytes32_id=sha3("addOwner",_newOwner);uint_number=self.transactionInfo[_id].length;boolallGood;if(msg.sender!=address(this)){require(_newOwner!=0);if(!_confirm){allGood=self.revokeConfirm(_id);return(allGood,_id);}else{if(_number==0||self.transactionInfo[_id][_number-1].success){require(self.ownerIndex[msg.sender]>0);allGood=checkNewOwnerArgs(self.ownerIndex[_newOwner],self.owners.length,self.maxOwners);if(!allGood)return(false,0);self.transactionInfo[_id].length++;self.transactionInfo[_id][_number].confirmRequired=self.requiredAdmin;self.transactionInfo[_id][_number].day=now/1days;self.transactions[now/1days].push(_id);}else{_number--;allGood=self.checkNotConfirmed(_id,_number);if(!allGood)return(false,_id);}}self.transactionInfo[_id][_number].confirmedOwners.push(uint(msg.sender));self.transactionInfo[_id][_number].confirmCount++;}else{_number--;}if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){self.transactionInfo[_id][_number].success=true;self.owners.push(_newOwner);self.ownerIndex[_newOwner]=self.owners.length-1;deleteself.transactionInfo[_id][_number].data;LogOwnerAdded(_newOwner);}else{if(self.transactionInfo[_id][_number].data.length==0)self.transactionInfo[_id][_number].data=_data;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);}return(true,_id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 274
column: 2
content: functionremoveOwner(WalletMainLib.WalletDatastorageself,address_ownerRemoving,bool_confirm,bytes_data)returns(bool,bytes32){bytes32_id=sha3("removeOwner",_ownerRemoving);uint_number=self.transactionInfo[_id].length;boolallGood;if(msg.sender!=address(this)){if(!_confirm){allGood=self.revokeConfirm(_id);return(allGood,_id);}else{if(_number==0||self.transactionInfo[_id][_number-1].success){require(self.ownerIndex[msg.sender]>0);allGood=checkRemoveOwnerArgs(self.ownerIndex[_ownerRemoving],self.owners.length,self.requiredAdmin);if(!allGood)return(false,0);self.transactionInfo[_id].length++;self.transactionInfo[_id][_number].confirmRequired=self.requiredAdmin;self.transactionInfo[_id][_number].day=now/1days;self.transactions[now/1days].push(_id);}else{_number--;allGood=self.checkNotConfirmed(_id,_number);if(!allGood)return(false,_id);}}self.transactionInfo[_id][_number].confirmedOwners.push(uint(msg.sender));self.transactionInfo[_id][_number].confirmCount++;}else{_number--;}if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){self.transactionInfo[_id][_number].success=true;self.owners[self.ownerIndex[_ownerRemoving]]=self.owners[self.owners.length-1];self.ownerIndex[self.owners[self.owners.length-1]]=self.ownerIndex[_ownerRemoving];self.ownerIndex[_ownerRemoving]=0;self.owners.length--;deleteself.transactionInfo[_id][_number].data;LogOwnerRemoved(_ownerRemoving);}else{if(self.transactionInfo[_id][_number].data.length==0)self.transactionInfo[_id][_number].data=_data;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);}return(true,_id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 344
column: 2
content: functionchangeRequiredAdmin(WalletMainLib.WalletDatastorageself,uint_requiredAdmin,bool_confirm,bytes_data)returns(bool,bytes32){bytes32_id=sha3("changeRequiredAdmin",_requiredAdmin);uint_number=self.transactionInfo[_id].length;if(msg.sender!=address(this)){boolallGood;if(!_confirm){allGood=self.revokeConfirm(_id);return(allGood,_id);}else{if(_number==0||self.transactionInfo[_id][_number-1].success){require(self.ownerIndex[msg.sender]>0);allGood=checkRequiredChange(_requiredAdmin,self.owners.length);if(!allGood)return(false,0);self.transactionInfo[_id].length++;self.transactionInfo[_id][_number].confirmRequired=self.requiredAdmin;self.transactionInfo[_id][_number].day=now/1days;self.transactions[now/1days].push(_id);}else{_number--;allGood=self.checkNotConfirmed(_id,_number);if(!allGood)return(false,_id);}}self.transactionInfo[_id][_number].confirmedOwners.push(uint(msg.sender));self.transactionInfo[_id][_number].confirmCount++;}else{_number--;}if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){self.transactionInfo[_id][_number].success=true;self.requiredAdmin=_requiredAdmin;deleteself.transactionInfo[_id][_number].data;LogRequirementChange(_requiredAdmin);}else{if(self.transactionInfo[_id][_number].data.length==0)self.transactionInfo[_id][_number].data=_data;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);}return(true,_id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 410
column: 2
content: functionchangeRequiredMajor(WalletMainLib.WalletDatastorageself,uint_requiredMajor,bool_confirm,bytes_data)returns(bool,bytes32){bytes32_id=sha3("changeRequiredMajor",_requiredMajor);uint_number=self.transactionInfo[_id].length;if(msg.sender!=address(this)){boolallGood;if(!_confirm){allGood=self.revokeConfirm(_id);return(allGood,_id);}else{if(_number==0||self.transactionInfo[_id][_number-1].success){require(self.ownerIndex[msg.sender]>0);allGood=checkRequiredChange(_requiredMajor,self.owners.length);if(!allGood)return(false,0);self.transactionInfo[_id].length++;self.transactionInfo[_id][_number].confirmRequired=self.requiredAdmin;self.transactionInfo[_id][_number].day=now/1days;self.transactions[now/1days].push(_id);}else{_number--;allGood=self.checkNotConfirmed(_id,_number);if(!allGood)return(false,_id);}}self.transactionInfo[_id][_number].confirmedOwners.push(uint(msg.sender));self.transactionInfo[_id][_number].confirmCount++;}else{_number--;}if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){self.transactionInfo[_id][_number].success=true;self.requiredMajor=_requiredMajor;deleteself.transactionInfo[_id][_number].data;LogRequirementChange(_requiredMajor);}else{if(self.transactionInfo[_id][_number].data.length==0)self.transactionInfo[_id][_number].data=_data;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);}return(true,_id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 476
column: 2
content: functionchangeRequiredMinor(WalletMainLib.WalletDatastorageself,uint_requiredMinor,bool_confirm,bytes_data)returns(bool,bytes32){bytes32_id=sha3("changeRequiredMinor",_requiredMinor);uint_number=self.transactionInfo[_id].length;if(msg.sender!=address(this)){boolallGood;if(!_confirm){allGood=self.revokeConfirm(_id);return(allGood,_id);}else{if(_number==0||self.transactionInfo[_id][_number-1].success){require(self.ownerIndex[msg.sender]>0);allGood=checkRequiredChange(_requiredMinor,self.owners.length);if(!allGood)return(false,0);self.transactionInfo[_id].length++;self.transactionInfo[_id][_number].confirmRequired=self.requiredAdmin;self.transactionInfo[_id][_number].day=now/1days;self.transactions[now/1days].push(_id);}else{_number--;allGood=self.checkNotConfirmed(_id,_number);if(!allGood)return(false,_id);}}self.transactionInfo[_id][_number].confirmedOwners.push(uint(msg.sender));self.transactionInfo[_id][_number].confirmCount++;}else{_number--;}if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){self.transactionInfo[_id][_number].success=true;self.requiredMinor=_requiredMinor;deleteself.transactionInfo[_id][_number].data;LogRequirementChange(_requiredMinor);}else{if(self.transactionInfo[_id][_number].data.length==0)self.transactionInfo[_id][_number].data=_data;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);}return(true,_id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 543
column: 2
content: functionchangeMajorThreshold(WalletMainLib.WalletDatastorageself,address_token,uint_majorThreshold,bool_confirm,bytes_data)returns(bool,bytes32){bytes32_id=sha3("changeMajorThreshold",_token,_majorThreshold);uint_number=self.transactionInfo[_id].length;if(msg.sender!=address(this)){boolallGood;if(!_confirm){allGood=self.revokeConfirm(_id);return(allGood,_id);}else{if(_number==0||self.transactionInfo[_id][_number-1].success){require(self.ownerIndex[msg.sender]>0);self.transactionInfo[_id].length++;self.transactionInfo[_id][_number].confirmRequired=self.requiredAdmin;self.transactionInfo[_id][_number].day=now/1days;self.transactions[now/1days].push(_id);}else{_number--;allGood=self.checkNotConfirmed(_id,_number);if(!allGood)return(false,_id);}}self.transactionInfo[_id][_number].confirmedOwners.push(uint(msg.sender));self.transactionInfo[_id][_number].confirmCount++;}else{_number--;}if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){self.transactionInfo[_id][_number].success=true;self.majorThreshold[_token]=_majorThreshold;deleteself.transactionInfo[_id][_number].data;LogThresholdChange(_token,_majorThreshold);}else{if(self.transactionInfo[_id][_number].data.length==0)self.transactionInfo[_id][_number].data=_data;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);}return(true,_id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 685
column: 2
content: functioninit(WalletDatastorageself,address[]_owners,uint_requiredAdmin,uint_requiredMajor,uint_requiredMinor,uint_majorThreshold)returns(bool){require(self.owners.length==0);require(_owners.length>=_requiredAdmin&&_requiredAdmin>0);require(_owners.length>=_requiredMajor&&_requiredMajor>0);require(_owners.length>=_requiredMinor&&_requiredMinor>0);self.owners.push(0);for(uinti=0;i<_owners.length;i++){require(_owners[i]!=0);self.owners.push(_owners[i]);self.ownerIndex[_owners[i]]=i+1;}self.requiredAdmin=_requiredAdmin;self.requiredMajor=_requiredMajor;self.requiredMinor=_requiredMinor;self.maxOwners=50;self.majorThreshold[0]=_majorThreshold;returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 719
column: 2
content: functioncheckNotConfirmed(WalletDatastorageself,bytes32_id,uint_number)constantreturns(bool){require(self.ownerIndex[msg.sender]>0);uint_txLen=self.transactionInfo[_id].length;if(_txLen==0||_number>=_txLen){LogErrMsg("Tx not initiated");LogTransactionFailed(_id,msg.sender);returnfalse;}if(self.transactionInfo[_id][_number].success){LogErrMsg("Transaction already complete");LogTransactionFailed(_id,msg.sender);returnfalse;}boolfound;uintindex;(found,index)=self.transactionInfo[_id][_number].confirmedOwners.indexOf(uint(msg.sender),false);if(found){LogErrMsg("Owner already confirmed");LogTransactionFailed(_id,msg.sender);returnfalse;}returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 755
column: 2
content: functioncalcConfirmsNeeded(uint_required,uint_count)constantreturns(uint){return_required-_count;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 763
column: 2
content: functiongetAmount(bytes_txData)constantreturns(bool,uint){bytes32getSig;bytes4sig;bytes4tSig=0xa9059cbb;bytes4aSig=0x095ea7b3;bytes4tfSig=0x23b872dd;booltransfer;bytes32_amountData;uint_amount;assembly{getSig:=mload(add(_txData,0x20))}sig=bytes4(getSig);if(sig==tSig||sig==aSig){transfer=true;assembly{_amountData:=mload(add(_txData,0x44))}_amount=uint(_amountData);}elseif(sig==tfSig){transfer=true;assembly{_amountData:=mload(add(_txData,0x64))}_amount=uint(_amountData);}return(transfer,_amount);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 794
column: 2
content: functiongetRequired(WalletDatastorageself,address_to,uint_value,bool_isTransfer,uint_amount)returns(uint){boolerr;uintres;boolmajor=true;if((now/1days)>self.currentSpend[0][0]){self.currentSpend[0][0]=now/1days;self.currentSpend[0][1]=0;}(err,res)=self.currentSpend[0][1].plus(_value);if(err){LogErrMsg("Overflow eth spend");return0;}if(res<self.majorThreshold[0])major=false;if(_to!=0&&_isTransfer){if((now/1days)>self.currentSpend[_to][0]){self.currentSpend[_to][0]=now/1days;self.currentSpend[_to][1]=0;}(err,res)=self.currentSpend[_to][1].plus(_amount);if(err){LogErrMsg("Overflow token spend");return0;}if(res>=self.majorThreshold[_to])major=true;}returnmajor?self.requiredMajor:self.requiredMinor;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 840
column: 2
content: functioncreateContract(bytes_txData,uint_value){address_newContract;boolallGood;assembly{_newContract:=create(_value,add(_txData,0x20),mload(_txData))allGood:=gt(extcodesize(_newContract),0)}require(allGood);LogContractCreated(_newContract,_value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 863
column: 2
content: functionserveTx(WalletDatastorageself,address_to,uint_value,bytes_txData,bool_confirm,bytes_data)returns(bool,bytes32){bytes32_id=sha3("serveTx",_to,_value,_txData);uint_number=self.transactionInfo[_id].length;uint_required=self.requiredMajor;if(msg.sender!=address(this)){boolallGood;uint_amount;if(!_confirm){allGood=revokeConfirm(self,_id);return(allGood,_id);}else{if(_number==0||self.transactionInfo[_id][_number-1].success){require(self.ownerIndex[msg.sender]>0);if(_to!=0)(allGood,_amount)=getAmount(_txData);_required=getRequired(self,_to,_value,allGood,_amount);if(_required==0)return(false,_id);self.transactionInfo[_id].length++;self.transactionInfo[_id][_number].confirmRequired=_required;self.transactionInfo[_id][_number].day=now/1days;self.transactions[now/1days].push(_id);}else{_number--;allGood=checkNotConfirmed(self,_id,_number);if(!allGood)return(false,_id);}}self.transactionInfo[_id][_number].confirmedOwners.push(uint(msg.sender));self.transactionInfo[_id][_number].confirmCount++;}else{_number--;}if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){self.currentSpend[0][1]+=_value;self.currentSpend[_to][1]+=_amount;self.transactionInfo[_id][_number].success=true;if(_to==0){createContract(_txData,_value);}else{require(_to.call.value(_value)(_txData));}deleteself.transactionInfo[_id][_number].data;LogTransactionComplete(_id,_to,_value,_data);}else{if(self.transactionInfo[_id][_number].data.length==0)self.transactionInfo[_id][_number].data=_data;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);}return(true,_id);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 955
column: 2
content: functionconfirmTx(WalletDatastorageself,bytes32_id)returns(bool){require(self.ownerIndex[msg.sender]>0);uint_number=self.transactionInfo[_id].length;boolret;if(_number==0){LogErrMsg("Tx not initiated");LogTransactionFailed(_id,msg.sender);returnfalse;}_number--;boolallGood=checkNotConfirmed(self,_id,_number);if(!allGood)returnfalse;self.transactionInfo[_id][_number].confirmedOwners.push(uint256(msg.sender));self.transactionInfo[_id][_number].confirmCount++;if(self.transactionInfo[_id][_number].confirmCount==self.transactionInfo[_id][_number].confirmRequired){addressa=address(this);require(a.call(self.transactionInfo[_id][_number].data));}else{uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);LogTransactionConfirmed(_id,msg.sender,confirmsNeeded);ret=true;}returnret;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 994
column: 2
content: functionrevokeConfirm(WalletDatastorageself,bytes32_id)returns(bool){require(self.ownerIndex[msg.sender]>0);uint_number=self.transactionInfo[_id].length;if(_number==0){LogErrMsg("Tx not initiated");LogTransactionFailed(_id,msg.sender);returnfalse;}_number--;if(self.transactionInfo[_id][_number].success){LogErrMsg("Transaction already complete");LogTransactionFailed(_id,msg.sender);returnfalse;}boolfound;uintindex;(found,index)=self.transactionInfo[_id][_number].confirmedOwners.indexOf(uint(msg.sender),false);if(!found){LogErrMsg("Owner has not confirmed tx");LogTransactionFailed(_id,msg.sender);returnfalse;}self.transactionInfo[_id][_number].confirmedOwners[index]=0;self.transactionInfo[_id][_number].confirmCount--;uintconfirmsNeeded=calcConfirmsNeeded(self.transactionInfo[_id][_number].confirmRequired,self.transactionInfo[_id][_number].confirmCount);if(self.transactionInfo[_id][_number].confirmCount==0)self.transactionInfo[_id].length--;LogRevokeNotice(_id,msg.sender,confirmsNeeded);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1069
column: 2
content: functionsumElements(uint256[]storageself)constantreturns(uint256sum){assembly{mstore(0x60,self_slot)for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{sum:=add(sload(add(sha3(0x60,0x20),i)),sum)}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1082
column: 2
content: functiongetMax(uint256[]storageself)constantreturns(uint256maxValue){assembly{mstore(0x60,self_slot)maxValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),maxValue)case1{maxValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1099
column: 2
content: functiongetMin(uint256[]storageself)constantreturns(uint256minValue){assembly{mstore(0x60,self_slot)minValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),minValue)case0{minValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1119
column: 2
content: functionindexOf(uint256[]storageself,uint256value,boolisSorted)constantreturns(boolfound,uint256index){assembly{mstore(0x60,self_slot)switchisSortedcase1{lethigh:=sub(sload(self_slot),1)letmid:=0letlow:=0for{}iszero(gt(low,high)){}{mid:=div(add(low,high),2)switchlt(sload(add(sha3(0x60,0x20),mid)),value)case1{low:=add(mid,1)}case0{switchgt(sload(add(sha3(0x60,0x20),mid)),value)case1{high:=sub(mid,1)}case0{found:=1index:=midlow:=add(high,1)}}}}case0{for{letlow:=0}lt(low,sload(self_slot)){low:=add(low,1)}{switcheq(sload(add(sha3(0x60,0x20),low)),value)case1{found:=1index:=lowlow:=sload(self_slot)}}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1179
column: 2
content: functionheapSort(uint256[]storageself){uint256end=self.length-1;uint256start=getParentI(end);uint256root=start;uint256lChild;uint256rChild;uint256swap;uint256temp;while(start>=0){root=start;lChild=getLeftChildI(start);while(lChild<=end){rChild=lChild+1;swap=root;if(self[swap]<self[lChild])swap=lChild;if((rChild<=end)&&(self[swap]<self[rChild]))swap=rChild;if(swap==root)lChild=end+1;else{temp=self[swap];self[swap]=self[root];self[root]=temp;root=swap;lChild=getLeftChildI(root);}}if(start==0)break;elsestart=start-1;}while(end>0){temp=self[end];self[end]=self[0];self[0]=temp;end=end-1;root=0;lChild=getLeftChildI(0);while(lChild<=end){rChild=lChild+1;swap=root;if(self[swap]<self[lChild])swap=lChild;if((rChild<=end)&&(self[swap]<self[rChild]))swap=rChild;if(swap==root)lChild=end+1;else{temp=self[swap];self[swap]=self[root];self[root]=temp;root=swap;lChild=getLeftChildI(root);}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1278
column: 2
content: functiontimes(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}if(err)Err("times func overflow");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1297
column: 2
content: functiondividedBy(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{switchiszero(b)case0{res:=div(a,b)mstore(add(mload(0x40),0x20),res)return(mload(0x40),0x40)}}Err("tried to divide by zero");return(true,0);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1316
column: 2
content: functionplus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}if(err)Err("plus func overflow");}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1335
column: 2
content: functionminus(uint256a,uint256b)constantreturns(boolerr,uint256res){assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}if(err)Err("minus func underflow");}

SOLIDITY_VISIBILITY :30
SOLIDITY_DEPRECATED_CONSTRUCTIONS :36
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_ARRAY_LENGTH_MANIPULATION :10
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :7
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_UINT_CANT_BE_NEGATIVE :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_USING_INLINE_ASSEMBLY :12
