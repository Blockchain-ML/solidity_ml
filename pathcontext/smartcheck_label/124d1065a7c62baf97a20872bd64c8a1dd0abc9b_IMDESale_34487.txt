C:\Users\hp\DataSet\contracts\ropsten\12\124d1065a7c62baf97a20872bd64c8a1dd0abc9b_IMDESale.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 479
column: 18
content: 0xb1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 480
column: 13
content: 0xb1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 481
column: 20
content: 0xb1

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 97
column: 16
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 112
column: 12
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 28
column: 4
content: functiontotalSupply()constantreturns(uintsupply);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 29
column: 4
content: functionbalanceOf(addresswho)constantreturns(uintvalue);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 30
column: 4
content: functionallowance(addressowner,addressspender)constantreturns(uint_allowance);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 41
column: 4
content: functioncanCall(addresssrc,addressdst,bytes4sig)constantreturns(bool);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 147
column: 4
content: functionadd(uint256x,uint256y)constantinternalreturns(uint256z){assert((z=x+y)>=x);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 151
column: 4
content: functionsub(uint256x,uint256y)constantinternalreturns(uint256z){assert((z=x-y)<=x);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 155
column: 4
content: functionmul(uint256x,uint256y)constantinternalreturns(uint256z){assert((z=x*y)>=x);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 159
column: 4
content: functiondiv(uint256x,uint256y)constantinternalreturns(uint256z){z=x/y;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 163
column: 4
content: functionmin(uint256x,uint256y)constantinternalreturns(uint256z){returnx<=y?x:y;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 166
column: 4
content: functionmax(uint256x,uint256y)constantinternalreturns(uint256z){returnx>=y?x:y;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 175
column: 4
content: functionhadd(uint128x,uint128y)constantinternalreturns(uint128z){assert((z=x+y)>=x);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 179
column: 4
content: functionhsub(uint128x,uint128y)constantinternalreturns(uint128z){assert((z=x-y)<=x);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 183
column: 4
content: functionhmul(uint128x,uint128y)constantinternalreturns(uint128z){assert((z=x*y)>=x);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 187
column: 4
content: functionhdiv(uint128x,uint128y)constantinternalreturns(uint128z){z=x/y;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 191
column: 4
content: functionhmin(uint128x,uint128y)constantinternalreturns(uint128z){returnx<=y?x:y;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 194
column: 4
content: functionhmax(uint128x,uint128y)constantinternalreturns(uint128z){returnx>=y?x:y;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 203
column: 4
content: functionimin(int256x,int256y)constantinternalreturns(int256z){returnx<=y?x:y;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 206
column: 4
content: functionimax(int256x,int256y)constantinternalreturns(int256z){returnx>=y?x:y;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 216
column: 4
content: functionwadd(uint128x,uint128y)constantinternalreturns(uint128){returnhadd(x,y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 220
column: 4
content: functionwsub(uint128x,uint128y)constantinternalreturns(uint128){returnhsub(x,y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 224
column: 4
content: functionwmul(uint128x,uint128y)constantinternalreturns(uint128z){z=cast((uint256(x)*y+WAD/2)/WAD);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 228
column: 4
content: functionwdiv(uint128x,uint128y)constantinternalreturns(uint128z){z=cast((uint256(x)*WAD+y/2)/y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 232
column: 4
content: functionwmin(uint128x,uint128y)constantinternalreturns(uint128){returnhmin(x,y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 235
column: 4
content: functionwmax(uint128x,uint128y)constantinternalreturns(uint128){returnhmax(x,y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 245
column: 4
content: functionradd(uint128x,uint128y)constantinternalreturns(uint128){returnhadd(x,y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 249
column: 4
content: functionrsub(uint128x,uint128y)constantinternalreturns(uint128){returnhsub(x,y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 253
column: 4
content: functionrmul(uint128x,uint128y)constantinternalreturns(uint128z){z=cast((uint256(x)*y+RAY/2)/RAY);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 257
column: 4
content: functionrdiv(uint128x,uint128y)constantinternalreturns(uint128z){z=cast((uint256(x)*RAY+y/2)/y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 261
column: 4
content: functionrpow(uint128x,uint64n)constantinternalreturns(uint128z){z=n%2!=0?x:RAY;for(n/=2;n!=0;n/=2){x=rmul(x,x);if(n%2!=0){z=rmul(z,x);}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 288
column: 4
content: functionrmin(uint128x,uint128y)constantinternalreturns(uint128){returnhmin(x,y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 291
column: 4
content: functionrmax(uint128x,uint128y)constantinternalreturns(uint128){returnhmax(x,y);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 295
column: 4
content: functioncast(uint256x)constantinternalreturns(uint128z){assert((z=uint128(x))==x);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 328
column: 4
content: functiontotalSupply()constantreturns(uint256){return_supply;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 331
column: 4
content: functionbalanceOf(addresssrc)constantreturns(uint256){return_balances[src];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 334
column: 4
content: functionallowance(addresssrc,addressguy)constantreturns(uint256){return_approvals[src][guy];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 484
column: 4
content: functiontime()constantreturns(uint){returnblock.timestamp;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 488
column: 4
content: functiontoday()constantreturns(uint){returndayFor(time());}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 494
column: 4
content: functiondayFor(uinttimestamp)constantreturns(uint){returntimestamp<startTime?0:sub(timestamp,startTime)/23hours+1;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 500
column: 4
content: functioncreateOnDay(uintday)constantreturns(uint){returnday==0?createFirstDay:createPerDay;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 362
column: 4
content: functionapprove(addressguy,uint256wad)returns(bool){_approvals[msg.sender][guy]=wad;Approval(msg.sender,guy,wad);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 389
column: 4
content: functionapprove(addressguy,uintwad)stoppablenotereturns(bool){returnsuper.approve(guy,wad);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 419
column: 0
content: contractIMDESaleisDSAuth,DSExec,DSMath{DSTokenpublicIMDE;uint128publictotalSupply;uint128publicfoundersAllocation;stringpublicfoundersKey;uintpublicopenTime;uintpubliccreateFirstDay;uintpublicstartTime;uintpublicnumberOfDays;uintpubliccreatePerDay;mapping(uint=>uint)publicdailyTotals;mapping(uint=>mapping(address=>uint))publicuserBuys;mapping(uint=>mapping(address=>bool))publicclaimed;mapping(address=>string)publickeys;eventLogBuy(uintwindow,addressuser,uintamount);eventLogClaim(uintwindow,addressuser,uintamount);eventLogRegister(addressuser,stringkey);eventLogCollect(uintamount);eventLogFreeze();functionIMDESale(uint_numberOfDays,uint128_totalSupply,uint_openTime,uint_startTime,uint128_foundersAllocation,string_foundersKey){numberOfDays=_numberOfDays;totalSupply=_totalSupply;openTime=_openTime;startTime=_startTime;foundersAllocation=_foundersAllocation;foundersKey=_foundersKey;createFirstDay=wmul(totalSupply,0.2ether);createPerDay=div(sub(sub(totalSupply,foundersAllocation),createFirstDay),numberOfDays);assert(numberOfDays>0);assert(totalSupply>foundersAllocation);assert(openTime<startTime);}functioninitialize(DSTokenimde)auth{assert(address(IMDE)==address(0));assert(imde.owner()==address(this));assert(imde.authority()==DSAuthority(0));assert(imde.totalSupply()==0);IMDE=imde;IMDE.mint(totalSupply);IMDE.push(0xb1,foundersAllocation);keys[0xb1]=foundersKey;LogRegister(0xb1,foundersKey);}functiontime()constantreturns(uint){returnblock.timestamp;}functiontoday()constantreturns(uint){returndayFor(time());}functiondayFor(uinttimestamp)constantreturns(uint){returntimestamp<startTime?0:sub(timestamp,startTime)/23hours+1;}functioncreateOnDay(uintday)constantreturns(uint){returnday==0?createFirstDay:createPerDay;}functionbuyWithLimit(uintday,uintlimit)payable{assert(time()>=openTime&&today()<=numberOfDays);assert(msg.value>=0.01ether);assert(day>=today());assert(day<=numberOfDays);userBuys[day][msg.sender]+=msg.value;dailyTotals[day]+=msg.value;if(limit!=0){assert(dailyTotals[day]<=limit);}LogBuy(day,msg.sender,msg.value);}functionbuy()payable{buyWithLimit(today(),0);}function()payable{buy();}functionclaim(uintday){assert(today()>day);if(claimed[day][msg.sender]||dailyTotals[day]==0){return;}vardailyTotal=cast(dailyTotals[day]);varuserTotal=cast(userBuys[day][msg.sender]);varprice=wdiv(cast(createOnDay(day)),dailyTotal);varreward=wmul(price,userTotal);claimed[day][msg.sender]=true;IMDE.push(msg.sender,reward);LogClaim(day,msg.sender,reward);}functionclaimAll(){for(uinti=0;i<today();i++){claim(i);}}functionregister(stringkey){assert(today()<=numberOfDays+1);assert(bytes(key).length<=64);keys[msg.sender]=key;LogRegister(msg.sender,key);}functioncollect()auth{assert(today()>0);exec(msg.sender,this.balance);LogCollect(this.balance);}functionfreeze(){assert(today()>numberOfDays+1);IMDE.stop();LogFreeze();}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 97
column: 8
content: if(!x)throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 111
column: 8
content: if(!tryExec(target,calldata,value)){throw;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 102
column: 38
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 108
column: 35
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 117
column: 30
content: bytesc

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 127
column: 33
content: bytesc

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 16
column: 8
content: assembly{foo:=calldataload(4)bar:=calldataload(36)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 28
column: 4
content: functiontotalSupply()constantreturns(uintsupply);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 29
column: 4
content: functionbalanceOf(addresswho)constantreturns(uintvalue);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 30
column: 4
content: functionallowance(addressowner,addressspender)constantreturns(uint_allowance);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 32
column: 4
content: functiontransfer(addressto,uintvalue)returns(boolok);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 33
column: 4
content: functiontransferFrom(addressfrom,addressto,uintvalue)returns(boolok);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 34
column: 4
content: functionapprove(addressspender,uintvalue)returns(boolok);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 41
column: 4
content: functioncanCall(addresssrc,addressdst,bytes4sig)constantreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 55
column: 4
content: functionDSAuth(){owner=msg.sender;LogSetOwner(msg.sender);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 60
column: 4
content: functionsetOwner(addressowner_)auth{owner=owner_;LogSetOwner(owner);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 67
column: 4
content: functionsetAuthority(DSAuthorityauthority_)auth{authority=authority_;LogSetAuthority(authority);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 309
column: 4
content: functionstop()authnote{stopped=true;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 312
column: 4
content: functionstart()authnote{stopped=false;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 323
column: 4
content: functionDSTokenBase(uint256supply){_balances[msg.sender]=supply;_supply=supply;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 328
column: 4
content: functiontotalSupply()constantreturns(uint256){return_supply;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 331
column: 4
content: functionbalanceOf(addresssrc)constantreturns(uint256){return_balances[src];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 334
column: 4
content: functionallowance(addresssrc,addressguy)constantreturns(uint256){return_approvals[src][guy];}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 338
column: 4
content: functiontransfer(addressdst,uintwad)returns(bool){assert(_balances[msg.sender]>=wad);_balances[msg.sender]=sub(_balances[msg.sender],wad);_balances[dst]=add(_balances[dst],wad);Transfer(msg.sender,dst,wad);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 349
column: 4
content: functiontransferFrom(addresssrc,addressdst,uintwad)returns(bool){assert(_balances[src]>=wad);assert(_approvals[src][msg.sender]>=wad);_approvals[src][msg.sender]=sub(_approvals[src][msg.sender],wad);_balances[src]=sub(_balances[src],wad);_balances[dst]=add(_balances[dst],wad);Transfer(src,dst,wad);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 362
column: 4
content: functionapprove(addressguy,uint256wad)returns(bool){_approvals[msg.sender][guy]=wad;Approval(msg.sender,guy,wad);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 377
column: 4
content: functionDSToken(bytes32symbol_){symbol=symbol_;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 381
column: 4
content: functiontransfer(addressdst,uintwad)stoppablenotereturns(bool){returnsuper.transfer(dst,wad);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 384
column: 4
content: functiontransferFrom(addresssrc,addressdst,uintwad)stoppablenotereturns(bool){returnsuper.transferFrom(src,dst,wad);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 389
column: 4
content: functionapprove(addressguy,uintwad)stoppablenotereturns(bool){returnsuper.approve(guy,wad);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 393
column: 4
content: functionpush(addressdst,uint128wad)returns(bool){returntransfer(dst,wad);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 396
column: 4
content: functionpull(addresssrc,uint128wad)returns(bool){returntransferFrom(src,msg.sender,wad);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 400
column: 4
content: functionmint(uint128wad)authstoppablenote{_balances[msg.sender]=add(_balances[msg.sender],wad);_supply=add(_supply,wad);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 404
column: 4
content: functionburn(uint128wad)authstoppablenote{_balances[msg.sender]=sub(_balances[msg.sender],wad);_supply=sub(_supply,wad);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 413
column: 4
content: functionsetName(bytes32name_)auth{name=name_;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 443
column: 4
content: functionIMDESale(uint_numberOfDays,uint128_totalSupply,uint_openTime,uint_startTime,uint128_foundersAllocation,string_foundersKey){numberOfDays=_numberOfDays;totalSupply=_totalSupply;openTime=_openTime;startTime=_startTime;foundersAllocation=_foundersAllocation;foundersKey=_foundersKey;createFirstDay=wmul(totalSupply,0.2ether);createPerDay=div(sub(sub(totalSupply,foundersAllocation),createFirstDay),numberOfDays);assert(numberOfDays>0);assert(totalSupply>foundersAllocation);assert(openTime<startTime);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 469
column: 4
content: functioninitialize(DSTokenimde)auth{assert(address(IMDE)==address(0));assert(imde.owner()==address(this));assert(imde.authority()==DSAuthority(0));assert(imde.totalSupply()==0);IMDE=imde;IMDE.mint(totalSupply);IMDE.push(0xb1,foundersAllocation);keys[0xb1]=foundersKey;LogRegister(0xb1,foundersKey);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 484
column: 4
content: functiontime()constantreturns(uint){returnblock.timestamp;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 488
column: 4
content: functiontoday()constantreturns(uint){returndayFor(time());}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 494
column: 4
content: functiondayFor(uinttimestamp)constantreturns(uint){returntimestamp<startTime?0:sub(timestamp,startTime)/23hours+1;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 500
column: 4
content: functioncreateOnDay(uintday)constantreturns(uint){returnday==0?createFirstDay:createPerDay;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 507
column: 4
content: functionbuyWithLimit(uintday,uintlimit)payable{assert(time()>=openTime&&today()<=numberOfDays);assert(msg.value>=0.01ether);assert(day>=today());assert(day<=numberOfDays);userBuys[day][msg.sender]+=msg.value;dailyTotals[day]+=msg.value;if(limit!=0){assert(dailyTotals[day]<=limit);}LogBuy(day,msg.sender,msg.value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 524
column: 4
content: functionbuy()payable{buyWithLimit(today(),0);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 528
column: 4
content: function()payable{buy();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 532
column: 4
content: functionclaim(uintday){assert(today()>day);if(claimed[day][msg.sender]||dailyTotals[day]==0){return;}vardailyTotal=cast(dailyTotals[day]);varuserTotal=cast(userBuys[day][msg.sender]);varprice=wdiv(cast(createOnDay(day)),dailyTotal);varreward=wmul(price,userTotal);claimed[day][msg.sender]=true;IMDE.push(msg.sender,reward);LogClaim(day,msg.sender,reward);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 554
column: 4
content: functionclaimAll(){for(uinti=0;i<today();i++){claim(i);}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 563
column: 4
content: functionregister(stringkey){assert(today()<=numberOfDays+1);assert(bytes(key).length<=64);keys[msg.sender]=key;LogRegister(msg.sender,key);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 573
column: 4
content: functioncollect()auth{assert(today()>0);exec(msg.sender,this.balance);LogCollect(this.balance);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 580
column: 4
content: functionfreeze(){assert(today()>numberOfDays+1);IMDE.stop();LogFreeze();}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 214
column: 4
content: uint128constantWAD=10**18;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 243
column: 4
content: uint128constantRAY=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 319
column: 4
content: uint256_supply;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 320
column: 4
content: mapping(address=>uint256)_balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 321
column: 4
content: mapping(address=>mapping(address=>uint256))_approvals;

SOLIDITY_VISIBILITY :47
SOLIDITY_DEPRECATED_CONSTRUCTIONS :41
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_UPGRADE_TO_050 :4
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_ERC20_APPROVE :2
