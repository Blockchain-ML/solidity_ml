C:\Users\hp\DataSet\contracts\ropsten\70\7028813920d6c9ab36cecd54c279bd99312fa7d3_MosesActivityContract.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 114
column: 4
content: functionbalanceOf(address_owner)constantpublicreturns(uint256);

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 39
column: 8
content: for(uint8i=0;i<_operators.length;i++){if(flag==uint8(0)){operators[_operators[i]]=1;}else{deleteoperators[_operators[i]];}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 284
column: 8
content: for(uint8i=0;i<_options.length;i++){if(optionId==_options[i].id){returntrue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 356
column: 8
content: for(uint8i=0;i<_optionId.length;i++){require(!optionExist(_id,_optionId[i]),"The current optionId already exists !!!");_options.push(Option(_optionId[i],_optionName[i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 456
column: 8
content: for(uint8i=0;i<_operators.length;i++){operators[_operators[i]]=uint8(1);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 35
column: 4
content: functionoperatorManager(address[]_operators,uint8flag)publiconlyOwnerreturns(bool){for(uint8i=0;i<_operators.length;i++){if(flag==uint8(0)){operators[_operators[i]]=1;}else{deleteoperators[_operators[i]];}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 39
column: 8
content: for(uint8i=0;i<_operators.length;i++){if(flag==uint8(0)){operators[_operators[i]]=1;}else{deleteoperators[_operators[i]];}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 284
column: 8
content: for(uint8i=0;i<_options.length;i++){if(optionId==_options[i].id){returntrue;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 356
column: 8
content: for(uint8i=0;i<_optionId.length;i++){require(!optionExist(_id,_optionId[i]),"The current optionId already exists !!!");_options.push(Option(_optionId[i],_optionName[i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 456
column: 8
content: for(uint8i=0;i<_operators.length;i++){operators[_operators[i]]=uint8(1);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 125
column: 0
content: contractGuessBaseBizisPausable{eventCreateGuess(uint256indexedid,addressindexedcreator);eventDepositAgent(addressindexedparticipant,uint256indexedid,uint256optionId,uint256totalBean);eventPublishOption(uint256indexedid,uint256indexedoptionId);eventAbortive(uint256indexedid);eventCreateActivity(uint256indexedid,addressindexedcreator);structGuess{uint256id;stringinfo;uint8disabled;uint256startAt;uint256endAt;uint8finished;uint8abortive;uint256winMultiple;}structAgentOrder{addressparticipant;stringipfsBase58;stringdataHash;uint256bean;}structOption{uint256id;bytes32name;}structActivity{uint256id;addresscreator;stringtitle;uint256startAt;uint256endAt;}mapping(uint256=>mapping(uint256=>Guess))publicguesses;mapping(uint256=>Option[])publicoptions;mapping(uint256=>Activity)publicactivities;mapping(uint256=>uint256[])publicguessIds;mapping(uint256=>mapping(uint256=>AgentOrder[]))publicagentOrders;mapping(uint256=>uint256)publicguessTotalBean;mapping(uint256=>mapping(uint256=>uint256))publicoptionTotalBean;enumGuessStatus{NotStarted,Progress,Deadline,Finished,Abortive}functiondisabled(uint256id,uint256activityId)publicviewreturns(bool){if(guesses[activityId][id].disabled==0){returnfalse;}else{returntrue;}}functionshowGuessIds(uint256activityId)publicviewreturns(uint256[]){returnguessIds[activityId];}functiongetGuessStatus(uint256guessId,uint256activityId)internalviewreturns(GuessStatus){GuessStatusgs;Guessmemoryguess=guesses[activityId][guessId];uint256_now=now;if(guess.startAt>_now){gs=GuessStatus.NotStarted;}elseif((guess.startAt<=_now&&_now<=guess.endAt)&&guess.finished==0&&guess.abortive==0){gs=GuessStatus.Progress;}elseif(_now>guess.endAt&&guess.finished==0){gs=GuessStatus.Deadline;}elseif(_now>guess.endAt&&guess.finished==1&&guess.abortive==0){gs=GuessStatus.Finished;}elseif(guess.abortive==1&&guess.finished==1){gs=GuessStatus.Abortive;}returngs;}functionoptionExist(uint256guessId,uint256optionId)internalviewreturns(bool){Option[]memory_options=options[guessId];for(uint8i=0;i<_options.length;i++){if(optionId==_options[i].id){returntrue;}}returnfalse;}functionactivityExist(uint256activityId)internalviewreturns(bool){if(activities[activityId].id==uint256(0)){returnfalse;}returntrue;}function()publicpayable{}functioncreateActivity(uint256_id,string_title,uint256_startAt,uint256_endAt)publicwhenNotPaused{require(!activityExist(_id),"The current activity already exists !!!");activities[_id]=Activity(_id,msg.sender,_title,_startAt,_endAt);emitCreateActivity(_id,msg.sender);}functionauditActivity(uint256_id,string_title,uint256_startAt,uint256_endAt)publiconlyOwnerwhenNotPaused{require(activityExist(_id),"The current activity not exists !!!");Activitystorageactivity=activities[_id];activity.title=_title;activity.startAt=_startAt;activity.endAt=_endAt;}functioncreateGuess(uint256_id,uint256_activityId,string_info,uint8_disabled,uint256_startAt,uint256_endAt,uint256[]_optionId,bytes32[]_optionName,uint256_winMultiple)publicwhenNotPaused{require(activityExist(_activityId),"The current activity not exists !!!");require(guesses[_activityId][_id].id==uint256(0),"The current guess already exists !!!");require(_optionId.length==_optionName.length,"please check options !!!");guesses[_activityId][_id]=Guess(_id,_info,_disabled,_startAt,_endAt,0,0,_winMultiple);Option[]storage_options=options[_id];for(uint8i=0;i<_optionId.length;i++){require(!optionExist(_id,_optionId[i]),"The current optionId already exists !!!");_options.push(Option(_optionId[i],_optionName[i]));}uint256[]storage_guessIds=guessIds[_activityId];_guessIds.push(_id);emitCreateGuess(_id,msg.sender);}functionauditGuess(uint256_id,string_info,uint8_disabled,uint256_endAt,uint256_winMultiple,uint256_activityId)publiconlyOwner{require(activityExist(_activityId),"The current activity not exists !!!");require(guesses[_activityId][_id].id!=uint256(0),"The current guess not exists !!!");require(getGuessStatus(_id,_activityId)==GuessStatus.NotStarted,"The guess cannot audit !!!");Guessstorageguess=guesses[_activityId][_id];guess.info=_info;guess.disabled=_disabled;guess.endAt=_endAt;guess.winMultiple=_winMultiple;}functiondepositAgent(uint256id,uint256activityId,uint256optionId,stringipfsBase58,uint256totalBean,stringdataHash)publiconlyOperatorwhenNotPausedreturns(bool){require(activityExist(activityId),"The current activity not exists !!!");require(guesses[activityId][id].id!=uint256(0),"The current guess not exists !!!");require(optionExist(id,optionId),"The current optionId not exists !!!");require(!disabled(id,activityId),"The guess disabled!!!");require(getGuessStatus(id,activityId)==GuessStatus.Deadline,"The guess cannot participate !!!");AgentOrder[]storage_agentOrders=agentOrders[id][optionId];AgentOrdermemoryagentOrder=AgentOrder(msg.sender,ipfsBase58,dataHash,totalBean);_agentOrders.push(agentOrder);optionTotalBean[id][optionId]+=totalBean;guessTotalBean[id]+=totalBean;emitDepositAgent(msg.sender,id,optionId,totalBean);returntrue;}functionpublishOption(uint256id,uint256optionId,uint256activityId)publiconlyOwnerwhenNotPausedreturns(bool){require(guesses[activityId][id].id!=uint256(0),"The current guess not exists !!!");require(optionExist(id,optionId),"The current optionId not exists !!!");require(!disabled(id,activityId),"The guess disabled!!!");require(getGuessStatus(id,activityId)==GuessStatus.Deadline,"The guess cannot publish !!!");Guessstorageguess=guesses[activityId][id];guess.finished=1;emitPublishOption(id,optionId);returntrue;}functionabortive(uint256id,uint256activityId)publiconlyOwnerreturns(bool){require(guesses[activityId][id].id!=uint256(0),"The current guess not exists !!!");require(getGuessStatus(id,activityId)==GuessStatus.Progress||getGuessStatus(id,activityId)==GuessStatus.Deadline,"The guess cannot abortive !!!");Guessstorageguess=guesses[activityId][id];guess.abortive=1;guess.finished=1;emitAbortive(id);returntrue;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 301
column: 15
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 35
column: 29
content: address[]_operators

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 237
column: 66
content: uint256[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 306
column: 40
content: string_title

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 315
column: 39
content: string_title

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 331
column: 8
content: string_info

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 335
column: 8
content: uint256[]_optionId

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 336
column: 8
content: bytes32[]_optionName

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 368
column: 36
content: string_info

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 390
column: 8
content: stringipfsBase58

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 392
column: 8
content: stringdataHash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 455
column: 16
content: address[]_operators

SOLIDITY_DEPRECATED_CONSTRUCTIONS :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_UPGRADE_TO_050 :12
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
