C:\Users\hp\DataSet\contracts\ropsten\d7\d768941203dfddf4cdcfbc6f86ebba7c2b7f7721_WalletSimple.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_CALL_WITHOUT_DATA
patternId: om991k
severity: 2
line: 76
column: 23
content: call.value(this.balance)()

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 39
column: 6
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 49
column: 6
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 66
column: 6
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 49bd2a
severity: 1
line: 77
column: 6
content: throw

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 11
column: 2
content: functionbalanceOf(address_owner)constantreturns(uint256balance);

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 151
column: 4
content: for(uinti=0;i<signers.length;i++){if(signers[i]==signer){returntrue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 354
column: 4
content: for(uinti=0;i<SEQUENCE_ID_WINDOW_SIZE;i++){if(recentSequenceIds[i]==sequenceId){revert();}if(recentSequenceIds[i]<recentSequenceIds[lowestValueIndex]){lowestValueIndex=i;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 382
column: 4
content: for(uinti=0;i<SEQUENCE_ID_WINDOW_SIZE;i++){if(recentSequenceIds[i]>highestSequenceId){highestSequenceId=recentSequenceIds[i];}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 151
column: 4
content: for(uinti=0;i<signers.length;i++){if(signers[i]==signer){returntrue;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 38
column: 4
content: if(msg.sender!=parentAddress){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 48
column: 4
content: if(!parentAddress.call.value(msg.value)(msg.data))throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 65
column: 4
content: if(!instance.transfer(parentAddress,forwarderBalance)){throw;}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 76
column: 4
content: if(!parentAddress.call.value(this.balance)())throw;

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 137
column: 4
content: if(allowedSigners.length!=3){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 163
column: 4
content: if(!isSigner(msg.sender)){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 212
column: 4
content: if(!(toAddress.call.value(value)(data))){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 244
column: 4
content: if(!instance.transfer(toAddress,value)){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 284
column: 4
content: if(safeMode&&!isSigner(toAddress)){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 289
column: 4
content: if(expireTime<block.timestamp){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 297
column: 4
content: if(!isSigner(otherSigner)){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 301
column: 4
content: if(otherSigner==msg.sender){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 327
column: 4
content: if(signature.length!=65){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 355
column: 6
content: if(recentSequenceIds[i]==sequenceId){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 363
column: 4
content: if(sequenceId<recentSequenceIds[lowestValueIndex]){revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 368
column: 4
content: if(sequenceId>(recentSequenceIds[lowestValueIndex]+10000)){revert();}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 323
column: 2
content: functionrecoverAddressFromSignature(bytes32operationHash,bytessignature)privatepurereturns(address){if(signature.length!=65){revert();}bytes32r;bytes32s;uint8v;assembly{r:=mload(add(signature,32))s:=mload(add(signature,64))v:=and(mload(add(signature,65)),255)}if(v<27){v+=27;}returnecrecover(operationHash,v,r,s);}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 76
column: 23
content: call.value(this.balance)()

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 207
column: 24
content: keccak256("ETHER",toAddress,value,data,expireTime,sequenceId)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 239
column: 24
content: keccak256("ERC20",toAddress,value,tokenContractAddress,expireTime,sequenceId)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 172
column: 13
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 136
column: 24
content: address[]allowedSigners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 201
column: 6
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 204
column: 6
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 236
column: 6
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 276
column: 6
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 325
column: 4
content: bytessignature

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 334
column: 4
content: assembly{r:=mload(add(signature,32))s:=mload(add(signature,64))v:=and(mload(add(signature,65)),255)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 9
column: 2
content: functiontransfer(address_to,uint256_value)returns(boolsuccess);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 11
column: 2
content: functionbalanceOf(address_owner)constantreturns(uint256balance);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 30
column: 2
content: functionForwarder(){parentAddress=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 47
column: 2
content: function()payable{if(!parentAddress.call.value(msg.value)(msg.data))throw;ForwarderDeposited(msg.sender,msg.value,msg.data);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 58
column: 2
content: functionflushTokens(addresstokenContractAddress)onlyParent{ERC20Interfaceinstance=ERC20Interface(tokenContractAddress);varforwarderAddress=address(this);varforwarderBalance=instance.balanceOf(forwarderAddress);if(forwarderBalance==0){return;}if(!instance.transfer(parentAddress,forwarderBalance)){throw;}TokensFlushed(tokenContractAddress,forwarderBalance);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 75
column: 2
content: functionflush(){if(!parentAddress.call.value(this.balance)())throw;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 125
column: 2
content: uintconstantSEQUENCE_ID_WINDOW_SIZE=10;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 126
column: 2
content: uint[10]recentSequenceIds;

SOLIDITY_VISIBILITY :8
SOLIDITY_DEPRECATED_CONSTRUCTIONS :5
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :16
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_UPGRADE_TO_050 :10
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_CALL_WITHOUT_DATA :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
