C:\Users\hp\DataSet\contracts\ropsten\fe\feca7a3660019d6663c74fa38e35d0582ea99b30_FlightManager.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_CONSTRUCTOR_RETURN
patternId: 8saf21
severity: 3
line: 165
column: 8
content: return(0,0x20)

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 194
column: 15
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 498
column: 15
content: sha3

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 3
column: 0
content: contractFlightManager{constructor(bytes32_flightID,address_admin,uint256_ticketPrice,uint256_numSeats)public{assembly{mstore(0x40,0x60)init()functioninit(){codecopy(0x0,sub(codesize,128),32)let_flightID:=mload(0)codecopy(0x0,sub(codesize,96),32)let_admin:=mload(0)codecopy(0x0,sub(codesize,64),32)let_ticketPrice:=mload(0)codecopy(0x0,sub(codesize,32),32)let_numSeats:=mload(0)let_caller:=caller()sstore(add(0,7),0)sstore(add(0,6),0)sstore(add(0,8),0)FlightInformation_init_String_Int(add(0,0),0,_flightID,_numSeats)sstore(add(0,3),_admin)sstore(add(0,4),_ticketPrice)sstore(add(0,5),_numSeats)}functionFlint$Global_send_Address_$inoutWei(_address,_value,_value$isMem){let_w:=flint$allocateMemory(32)Wei_init_$inoutWei(_w,1,_value,_value$isMem)flint$send(Wei_getRawValue(_w,1),_address)}functionFlint$Global_fatalError(){flint$fatalError()}functionFlint$Global_assert_Bool(_condition){switcheq(_condition,0)case1{Flint$Global_fatalError()}}functionWei_init_Int(_flintSelf,_flintSelf$isMem,_unsafeRawValue){flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_unsafeRawValue,_flintSelf$isMem)}functionWei_init_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,_amount){switchlt(Wei_getRawValue(_source,_source$isMem),_amount)case1{Flint$Global_fatalError()}flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_amount),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_amount,_flintSelf$isMem)}functionWei_init_$inoutWei(_flintSelf,_flintSelf$isMem,_source,_source$isMem){let_value:=Wei_getRawValue(_source,_source$isMem)flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_value),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_value,_flintSelf$isMem)}functionWei_transfer_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,_amount){switchlt(Wei_getRawValue(_source,_source$isMem),_amount)case1{Flint$Global_fatalError()}flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_amount),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),flint$add(flint$load(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flintSelf$isMem),_amount),_flintSelf$isMem)}functionWei_transfer_$inoutWei(_flintSelf,_flintSelf$isMem,_source,_source$isMem){Wei_transfer_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,Wei_getRawValue(_source,_source$isMem))}functionWei_getRawValue(_flintSelf,_flintSelf$isMem)->ret{ret:=flint$load(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flintSelf$isMem)}functionFlightInformation_init_String_Int(_flintSelf,_flintSelf$isMem,_flightID,_numTotalSeats){flint$store(flint$computeOffset(_flintSelf,1,_flintSelf$isMem),0,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),0,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flightID,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),_numTotalSeats,_flintSelf$isMem)}functionFlightInformation_cancelFlight(_flintSelf,_flintSelf$isMem){flint$store(flint$computeOffset(_flintSelf,1,_flintSelf$isMem),0,_flintSelf$isMem)}functionFlightInformation_getNumTotalSeat(_flintSelf,_flintSelf$isMem)->ret{ret:=flint$load(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),_flintSelf$isMem)}functionflint$selector()->ret{ret:=div(calldataload(0),0x100000000000000000000000000000000000000000000000000000000)}functionflint$decodeAsAddress(offset)->ret{ret:=flint$decodeAsUInt(offset)}functionflint$decodeAsUInt(offset)->ret{ret:=calldataload(add(4,mul(offset,0x20)))}functionflint$store(ptr,val,mem){switchiszero(mem)case0{mstore(ptr,val)}default{sstore(ptr,val)}}functionflint$load(ptr,mem)->ret{switchiszero(mem)case0{ret:=mload(ptr)}default{ret:=sload(ptr)}}functionflint$computeOffset(base,offset,mem)->ret{switchiszero(mem)case0{ret:=add(base,mul(offset,32))}default{ret:=add(base,offset)}}functionflint$allocateMemory(size)->ret{ret:=mload(0x40)mstore(0x40,add(ret,size))}functionflint$isValidCallerCapability(_address)->ret{ret:=eq(_address,caller())}functionflint$isCallerCapabilityInArray(arrayOffset)->ret{letsize:=sload(arrayOffset)letfound:=0let_caller:=caller()letarrayStart:=flint$add(arrayOffset,1)for{leti:=0}and(lt(i,size),iszero(found)){i:=add(i,1)}{ifeq(sload(flint$storageArrayOffset(arrayOffset,i)),_caller){found:=1}}ret:=found}functionflint$return32Bytes(v){mstore(0,v)return(0,0x20)}functionflint$isInvalidSubscriptExpression(index,arraySize)->ret{ret:=or(iszero(arraySize),or(lt(index,0),gt(index,flint$sub(arraySize,1))))}functionflint$storageArrayOffset(arrayOffset,index)->ret{letarraySize:=sload(arrayOffset)switcheq(arraySize,index)case0{ifflint$isInvalidSubscriptExpression(index,arraySize){revert(0,0)}}default{sstore(arrayOffset,flint$add(arraySize,1))}ret:=flint$storageDictionaryOffsetForKey(arrayOffset,index)}functionflint$storageFixedSizeArrayOffset(arrayOffset,index,arraySize)->ret{ifflint$isInvalidSubscriptExpression(index,arraySize){revert(0,0)}ret:=flint$add(arrayOffset,index)}functionflint$storageDictionaryOffsetForKey(dictionaryOffset,key)->ret{mstore(0,key)mstore(32,dictionaryOffset)ret:=sha3(0,64)}functionflint$send(_value,_address){letret:=call(gas(),_address,_value,0,0,0,0)ifiszero(ret){revert(0,0)}}functionflint$fatalError(){revert(0,0)}functionflint$add(a,b)->ret{letc:=add(a,b)iflt(c,a){revert(0,0)}ret:=c}functionflint$sub(a,b)->ret{ifgt(b,a){revert(0,0)}ret:=sub(a,b)}functionflint$mul(a,b)->ret{switchiszero(a)case1{ret:=0}default{letc:=mul(a,b)ifiszero(eq(div(c,a),b)){revert(0,0)}ret:=c}}functionflint$div(a,b)->ret{ifeq(b,0){revert(0,0)}ret:=div(a,b)}}}function()publicpayable{assembly{mstore(0x40,0x60)switchflint$selector()case0xa6f2ae3a{buy()}case0x32b4d74c{flint$return32Bytes(getNumRemainingSeats())}case0x09aa69c2{let_flintCallerCheck:=0_flintCallerCheck:=add(_flintCallerCheck,flint$isValidCallerCapability(sload(3)))ifeq(_flintCallerCheck,0){revert(0,0)}cancelFlight()}case0x15981650{let_flintCallerCheck:=0_flintCallerCheck:=add(_flintCallerCheck,flint$isValidCallerCapability(sload(3)))ifeq(_flintCallerCheck,0){revert(0,0)}setTicketPrice(flint$decodeAsUInt(0))}case0x54ddd5d6{let_flintCallerCheck:=0_flintCallerCheck:=add(_flintCallerCheck,flint$isCallerCapabilityInArray(6))ifeq(_flintCallerCheck,0){revert(0,0)}retrieveRefund()}default{revert(0,0)}functionbuy(){let_caller:=caller()let_value:=flint$allocateMemory(32)Wei_init_Int(_value,1,callvalue())let_amountGiven:=Wei_getRawValue(_value,1)Flint$Global_assert_Bool(eq(_amountGiven,sload(add(0,4))))Flint$Global_assert_Bool(gt(sload(add(0,5)),0))Flint$Global_assert_Bool(eq(sload(add(0,1)),0))Wei_transfer_$inoutWei(flint$storageDictionaryOffsetForKey(8,_caller),0,_value,1)sstore(flint$storageArrayOffset(6,sload(add(0,7))),_caller)sstore(add(0,7),flint$add(sload(add(0,7)),1))sstore(add(0,5),flint$sub(sload(add(0,5)),1))}functiongetNumRemainingSeats()->ret{let_caller:=caller()ret:=sload(add(0,5))}functioncancelFlight(){FlightInformation_cancelFlight(add(0,0),0)}functionsetTicketPrice(_ticketPrice){sstore(add(0,4),_ticketPrice)}functionretrieveRefund(){let_passenger:=caller()Flint$Global_assert_Bool(sload(add(0,1)))refund(_passenger)}functionrefund(_passenger){let_refund:=flint$allocateMemory(32)Wei_init_$inoutWei(_refund,1,flint$storageDictionaryOffsetForKey(8,_passenger),0)sstore(add(0,5),flint$add(sload(add(0,5)),1))Flint$Global_send_Address_$inoutWei(_passenger,_refund,1)}functionFlint$Global_send_Address_$inoutWei(_address,_value,_value$isMem){let_w:=flint$allocateMemory(32)Wei_init_$inoutWei(_w,1,_value,_value$isMem)flint$send(Wei_getRawValue(_w,1),_address)}functionFlint$Global_fatalError(){flint$fatalError()}functionFlint$Global_assert_Bool(_condition){switcheq(_condition,0)case1{Flint$Global_fatalError()}}functionWei_init_Int(_flintSelf,_flintSelf$isMem,_unsafeRawValue){flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_unsafeRawValue,_flintSelf$isMem)}functionWei_init_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,_amount){switchlt(Wei_getRawValue(_source,_source$isMem),_amount)case1{Flint$Global_fatalError()}flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_amount),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_amount,_flintSelf$isMem)}functionWei_init_$inoutWei(_flintSelf,_flintSelf$isMem,_source,_source$isMem){let_value:=Wei_getRawValue(_source,_source$isMem)flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_value),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_value,_flintSelf$isMem)}functionWei_transfer_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,_amount){switchlt(Wei_getRawValue(_source,_source$isMem),_amount)case1{Flint$Global_fatalError()}flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_amount),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),flint$add(flint$load(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flintSelf$isMem),_amount),_flintSelf$isMem)}functionWei_transfer_$inoutWei(_flintSelf,_flintSelf$isMem,_source,_source$isMem){Wei_transfer_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,Wei_getRawValue(_source,_source$isMem))}functionWei_getRawValue(_flintSelf,_flintSelf$isMem)->ret{ret:=flint$load(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flintSelf$isMem)}functionFlightInformation_init_String_Int(_flintSelf,_flintSelf$isMem,_flightID,_numTotalSeats){flint$store(flint$computeOffset(_flintSelf,1,_flintSelf$isMem),0,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),0,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flightID,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),_numTotalSeats,_flintSelf$isMem)}functionFlightInformation_cancelFlight(_flintSelf,_flintSelf$isMem){flint$store(flint$computeOffset(_flintSelf,1,_flintSelf$isMem),0,_flintSelf$isMem)}functionFlightInformation_getNumTotalSeat(_flintSelf,_flintSelf$isMem)->ret{ret:=flint$load(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),_flintSelf$isMem)}functionflint$selector()->ret{ret:=div(calldataload(0),0x100000000000000000000000000000000000000000000000000000000)}functionflint$decodeAsAddress(offset)->ret{ret:=flint$decodeAsUInt(offset)}functionflint$decodeAsUInt(offset)->ret{ret:=calldataload(add(4,mul(offset,0x20)))}functionflint$store(ptr,val,mem){switchiszero(mem)case0{mstore(ptr,val)}default{sstore(ptr,val)}}functionflint$load(ptr,mem)->ret{switchiszero(mem)case0{ret:=mload(ptr)}default{ret:=sload(ptr)}}functionflint$computeOffset(base,offset,mem)->ret{switchiszero(mem)case0{ret:=add(base,mul(offset,32))}default{ret:=add(base,offset)}}functionflint$allocateMemory(size)->ret{ret:=mload(0x40)mstore(0x40,add(ret,size))}functionflint$isValidCallerCapability(_address)->ret{ret:=eq(_address,caller())}functionflint$isCallerCapabilityInArray(arrayOffset)->ret{letsize:=sload(arrayOffset)letfound:=0let_caller:=caller()letarrayStart:=flint$add(arrayOffset,1)for{leti:=0}and(lt(i,size),iszero(found)){i:=add(i,1)}{ifeq(sload(flint$storageArrayOffset(arrayOffset,i)),_caller){found:=1}}ret:=found}functionflint$return32Bytes(v){mstore(0,v)return(0,0x20)}functionflint$isInvalidSubscriptExpression(index,arraySize)->ret{ret:=or(iszero(arraySize),or(lt(index,0),gt(index,flint$sub(arraySize,1))))}functionflint$storageArrayOffset(arrayOffset,index)->ret{letarraySize:=sload(arrayOffset)switcheq(arraySize,index)case0{ifflint$isInvalidSubscriptExpression(index,arraySize){revert(0,0)}}default{sstore(arrayOffset,flint$add(arraySize,1))}ret:=flint$storageDictionaryOffsetForKey(arrayOffset,index)}functionflint$storageFixedSizeArrayOffset(arrayOffset,index,arraySize)->ret{ifflint$isInvalidSubscriptExpression(index,arraySize){revert(0,0)}ret:=flint$add(arrayOffset,index)}functionflint$storageDictionaryOffsetForKey(dictionaryOffset,key)->ret{mstore(0,key)mstore(32,dictionaryOffset)ret:=sha3(0,64)}functionflint$send(_value,_address){letret:=call(gas(),_address,_value,0,0,0,0)ifiszero(ret){revert(0,0)}}functionflint$fatalError(){revert(0,0)}functionflint$add(a,b)->ret{letc:=add(a,b)iflt(c,a){revert(0,0)}ret:=c}functionflint$sub(a,b)->ret{ifgt(b,a){revert(0,0)}ret:=sub(a,b)}functionflint$mul(a,b)->ret{switchiszero(a)case1{ret:=0}default{letc:=mul(a,b)ifiszero(eq(div(c,a),b)){revert(0,0)}ret:=c}}functionflint$div(a,b)->ret{ifeq(b,0){revert(0,0)}ret:=div(a,b)}}}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 241
column: 14
content: public

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 6
column: 4
content: assembly{mstore(0x40,0x60)init()functioninit(){codecopy(0x0,sub(codesize,128),32)let_flightID:=mload(0)codecopy(0x0,sub(codesize,96),32)let_admin:=mload(0)codecopy(0x0,sub(codesize,64),32)let_ticketPrice:=mload(0)codecopy(0x0,sub(codesize,32),32)let_numSeats:=mload(0)let_caller:=caller()sstore(add(0,7),0)sstore(add(0,6),0)sstore(add(0,8),0)FlightInformation_init_String_Int(add(0,0),0,_flightID,_numSeats)sstore(add(0,3),_admin)sstore(add(0,4),_ticketPrice)sstore(add(0,5),_numSeats)}functionFlint$Global_send_Address_$inoutWei(_address,_value,_value$isMem){let_w:=flint$allocateMemory(32)Wei_init_$inoutWei(_w,1,_value,_value$isMem)flint$send(Wei_getRawValue(_w,1),_address)}functionFlint$Global_fatalError(){flint$fatalError()}functionFlint$Global_assert_Bool(_condition){switcheq(_condition,0)case1{Flint$Global_fatalError()}}functionWei_init_Int(_flintSelf,_flintSelf$isMem,_unsafeRawValue){flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_unsafeRawValue,_flintSelf$isMem)}functionWei_init_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,_amount){switchlt(Wei_getRawValue(_source,_source$isMem),_amount)case1{Flint$Global_fatalError()}flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_amount),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_amount,_flintSelf$isMem)}functionWei_init_$inoutWei(_flintSelf,_flintSelf$isMem,_source,_source$isMem){let_value:=Wei_getRawValue(_source,_source$isMem)flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_value),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_value,_flintSelf$isMem)}functionWei_transfer_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,_amount){switchlt(Wei_getRawValue(_source,_source$isMem),_amount)case1{Flint$Global_fatalError()}flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_amount),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),flint$add(flint$load(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flintSelf$isMem),_amount),_flintSelf$isMem)}functionWei_transfer_$inoutWei(_flintSelf,_flintSelf$isMem,_source,_source$isMem){Wei_transfer_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,Wei_getRawValue(_source,_source$isMem))}functionWei_getRawValue(_flintSelf,_flintSelf$isMem)->ret{ret:=flint$load(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flintSelf$isMem)}functionFlightInformation_init_String_Int(_flintSelf,_flintSelf$isMem,_flightID,_numTotalSeats){flint$store(flint$computeOffset(_flintSelf,1,_flintSelf$isMem),0,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),0,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flightID,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),_numTotalSeats,_flintSelf$isMem)}functionFlightInformation_cancelFlight(_flintSelf,_flintSelf$isMem){flint$store(flint$computeOffset(_flintSelf,1,_flintSelf$isMem),0,_flintSelf$isMem)}functionFlightInformation_getNumTotalSeat(_flintSelf,_flintSelf$isMem)->ret{ret:=flint$load(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),_flintSelf$isMem)}functionflint$selector()->ret{ret:=div(calldataload(0),0x100000000000000000000000000000000000000000000000000000000)}functionflint$decodeAsAddress(offset)->ret{ret:=flint$decodeAsUInt(offset)}functionflint$decodeAsUInt(offset)->ret{ret:=calldataload(add(4,mul(offset,0x20)))}functionflint$store(ptr,val,mem){switchiszero(mem)case0{mstore(ptr,val)}default{sstore(ptr,val)}}functionflint$load(ptr,mem)->ret{switchiszero(mem)case0{ret:=mload(ptr)}default{ret:=sload(ptr)}}functionflint$computeOffset(base,offset,mem)->ret{switchiszero(mem)case0{ret:=add(base,mul(offset,32))}default{ret:=add(base,offset)}}functionflint$allocateMemory(size)->ret{ret:=mload(0x40)mstore(0x40,add(ret,size))}functionflint$isValidCallerCapability(_address)->ret{ret:=eq(_address,caller())}functionflint$isCallerCapabilityInArray(arrayOffset)->ret{letsize:=sload(arrayOffset)letfound:=0let_caller:=caller()letarrayStart:=flint$add(arrayOffset,1)for{leti:=0}and(lt(i,size),iszero(found)){i:=add(i,1)}{ifeq(sload(flint$storageArrayOffset(arrayOffset,i)),_caller){found:=1}}ret:=found}functionflint$return32Bytes(v){mstore(0,v)return(0,0x20)}functionflint$isInvalidSubscriptExpression(index,arraySize)->ret{ret:=or(iszero(arraySize),or(lt(index,0),gt(index,flint$sub(arraySize,1))))}functionflint$storageArrayOffset(arrayOffset,index)->ret{letarraySize:=sload(arrayOffset)switcheq(arraySize,index)case0{ifflint$isInvalidSubscriptExpression(index,arraySize){revert(0,0)}}default{sstore(arrayOffset,flint$add(arraySize,1))}ret:=flint$storageDictionaryOffsetForKey(arrayOffset,index)}functionflint$storageFixedSizeArrayOffset(arrayOffset,index,arraySize)->ret{ifflint$isInvalidSubscriptExpression(index,arraySize){revert(0,0)}ret:=flint$add(arrayOffset,index)}functionflint$storageDictionaryOffsetForKey(dictionaryOffset,key)->ret{mstore(0,key)mstore(32,dictionaryOffset)ret:=sha3(0,64)}functionflint$send(_value,_address){letret:=call(gas(),_address,_value,0,0,0,0)ifiszero(ret){revert(0,0)}}functionflint$fatalError(){revert(0,0)}functionflint$add(a,b)->ret{letc:=add(a,b)iflt(c,a){revert(0,0)}ret:=c}functionflint$sub(a,b)->ret{ifgt(b,a){revert(0,0)}ret:=sub(a,b)}functionflint$mul(a,b)->ret{switchiszero(a)case1{ret:=0}default{letc:=mul(a,b)ifiszero(eq(div(c,a),b)){revert(0,0)}ret:=c}}functionflint$div(a,b)->ret{ifeq(b,0){revert(0,0)}ret:=div(a,b)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 242
column: 4
content: assembly{mstore(0x40,0x60)switchflint$selector()case0xa6f2ae3a{buy()}case0x32b4d74c{flint$return32Bytes(getNumRemainingSeats())}case0x09aa69c2{let_flintCallerCheck:=0_flintCallerCheck:=add(_flintCallerCheck,flint$isValidCallerCapability(sload(3)))ifeq(_flintCallerCheck,0){revert(0,0)}cancelFlight()}case0x15981650{let_flintCallerCheck:=0_flintCallerCheck:=add(_flintCallerCheck,flint$isValidCallerCapability(sload(3)))ifeq(_flintCallerCheck,0){revert(0,0)}setTicketPrice(flint$decodeAsUInt(0))}case0x54ddd5d6{let_flintCallerCheck:=0_flintCallerCheck:=add(_flintCallerCheck,flint$isCallerCapabilityInArray(6))ifeq(_flintCallerCheck,0){revert(0,0)}retrieveRefund()}default{revert(0,0)}functionbuy(){let_caller:=caller()let_value:=flint$allocateMemory(32)Wei_init_Int(_value,1,callvalue())let_amountGiven:=Wei_getRawValue(_value,1)Flint$Global_assert_Bool(eq(_amountGiven,sload(add(0,4))))Flint$Global_assert_Bool(gt(sload(add(0,5)),0))Flint$Global_assert_Bool(eq(sload(add(0,1)),0))Wei_transfer_$inoutWei(flint$storageDictionaryOffsetForKey(8,_caller),0,_value,1)sstore(flint$storageArrayOffset(6,sload(add(0,7))),_caller)sstore(add(0,7),flint$add(sload(add(0,7)),1))sstore(add(0,5),flint$sub(sload(add(0,5)),1))}functiongetNumRemainingSeats()->ret{let_caller:=caller()ret:=sload(add(0,5))}functioncancelFlight(){FlightInformation_cancelFlight(add(0,0),0)}functionsetTicketPrice(_ticketPrice){sstore(add(0,4),_ticketPrice)}functionretrieveRefund(){let_passenger:=caller()Flint$Global_assert_Bool(sload(add(0,1)))refund(_passenger)}functionrefund(_passenger){let_refund:=flint$allocateMemory(32)Wei_init_$inoutWei(_refund,1,flint$storageDictionaryOffsetForKey(8,_passenger),0)sstore(add(0,5),flint$add(sload(add(0,5)),1))Flint$Global_send_Address_$inoutWei(_passenger,_refund,1)}functionFlint$Global_send_Address_$inoutWei(_address,_value,_value$isMem){let_w:=flint$allocateMemory(32)Wei_init_$inoutWei(_w,1,_value,_value$isMem)flint$send(Wei_getRawValue(_w,1),_address)}functionFlint$Global_fatalError(){flint$fatalError()}functionFlint$Global_assert_Bool(_condition){switcheq(_condition,0)case1{Flint$Global_fatalError()}}functionWei_init_Int(_flintSelf,_flintSelf$isMem,_unsafeRawValue){flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_unsafeRawValue,_flintSelf$isMem)}functionWei_init_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,_amount){switchlt(Wei_getRawValue(_source,_source$isMem),_amount)case1{Flint$Global_fatalError()}flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_amount),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_amount,_flintSelf$isMem)}functionWei_init_$inoutWei(_flintSelf,_flintSelf$isMem,_source,_source$isMem){let_value:=Wei_getRawValue(_source,_source$isMem)flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_value),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_value,_flintSelf$isMem)}functionWei_transfer_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,_amount){switchlt(Wei_getRawValue(_source,_source$isMem),_amount)case1{Flint$Global_fatalError()}flint$store(flint$computeOffset(_source,0,_source$isMem),flint$sub(flint$load(flint$computeOffset(_source,0,_source$isMem),_source$isMem),_amount),_source$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),flint$add(flint$load(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flintSelf$isMem),_amount),_flintSelf$isMem)}functionWei_transfer_$inoutWei(_flintSelf,_flintSelf$isMem,_source,_source$isMem){Wei_transfer_$inoutWei_Int(_flintSelf,_flintSelf$isMem,_source,_source$isMem,Wei_getRawValue(_source,_source$isMem))}functionWei_getRawValue(_flintSelf,_flintSelf$isMem)->ret{ret:=flint$load(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flintSelf$isMem)}functionFlightInformation_init_String_Int(_flintSelf,_flintSelf$isMem,_flightID,_numTotalSeats){flint$store(flint$computeOffset(_flintSelf,1,_flintSelf$isMem),0,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),0,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,0,_flintSelf$isMem),_flightID,_flintSelf$isMem)flint$store(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),_numTotalSeats,_flintSelf$isMem)}functionFlightInformation_cancelFlight(_flintSelf,_flintSelf$isMem){flint$store(flint$computeOffset(_flintSelf,1,_flintSelf$isMem),0,_flintSelf$isMem)}functionFlightInformation_getNumTotalSeat(_flintSelf,_flintSelf$isMem)->ret{ret:=flint$load(flint$computeOffset(_flintSelf,2,_flintSelf$isMem),_flintSelf$isMem)}functionflint$selector()->ret{ret:=div(calldataload(0),0x100000000000000000000000000000000000000000000000000000000)}functionflint$decodeAsAddress(offset)->ret{ret:=flint$decodeAsUInt(offset)}functionflint$decodeAsUInt(offset)->ret{ret:=calldataload(add(4,mul(offset,0x20)))}functionflint$store(ptr,val,mem){switchiszero(mem)case0{mstore(ptr,val)}default{sstore(ptr,val)}}functionflint$load(ptr,mem)->ret{switchiszero(mem)case0{ret:=mload(ptr)}default{ret:=sload(ptr)}}functionflint$computeOffset(base,offset,mem)->ret{switchiszero(mem)case0{ret:=add(base,mul(offset,32))}default{ret:=add(base,offset)}}functionflint$allocateMemory(size)->ret{ret:=mload(0x40)mstore(0x40,add(ret,size))}functionflint$isValidCallerCapability(_address)->ret{ret:=eq(_address,caller())}functionflint$isCallerCapabilityInArray(arrayOffset)->ret{letsize:=sload(arrayOffset)letfound:=0let_caller:=caller()letarrayStart:=flint$add(arrayOffset,1)for{leti:=0}and(lt(i,size),iszero(found)){i:=add(i,1)}{ifeq(sload(flint$storageArrayOffset(arrayOffset,i)),_caller){found:=1}}ret:=found}functionflint$return32Bytes(v){mstore(0,v)return(0,0x20)}functionflint$isInvalidSubscriptExpression(index,arraySize)->ret{ret:=or(iszero(arraySize),or(lt(index,0),gt(index,flint$sub(arraySize,1))))}functionflint$storageArrayOffset(arrayOffset,index)->ret{letarraySize:=sload(arrayOffset)switcheq(arraySize,index)case0{ifflint$isInvalidSubscriptExpression(index,arraySize){revert(0,0)}}default{sstore(arrayOffset,flint$add(arraySize,1))}ret:=flint$storageDictionaryOffsetForKey(arrayOffset,index)}functionflint$storageFixedSizeArrayOffset(arrayOffset,index,arraySize)->ret{ifflint$isInvalidSubscriptExpression(index,arraySize){revert(0,0)}ret:=flint$add(arrayOffset,index)}functionflint$storageDictionaryOffsetForKey(dictionaryOffset,key)->ret{mstore(0,key)mstore(32,dictionaryOffset)ret:=sha3(0,64)}functionflint$send(_value,_address){letret:=call(gas(),_address,_value,0,0,0,0)ifiszero(ret){revert(0,0)}}functionflint$fatalError(){revert(0,0)}functionflint$add(a,b)->ret{letc:=add(a,b)iflt(c,a){revert(0,0)}ret:=c}functionflint$sub(a,b)->ret{ifgt(b,a){revert(0,0)}ret:=sub(a,b)}functionflint$mul(a,b)->ret{switchiszero(a)case1{ret:=0}default{letc:=mul(a,b)ifiszero(eq(div(c,a),b)){revert(0,0)}ret:=c}}functionflint$div(a,b)->ret{ifeq(b,0){revert(0,0)}ret:=div(a,b)}}

SOLIDITY_DEPRECATED_CONSTRUCTIONS :2
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_CONSTRUCTOR_RETURN :1
