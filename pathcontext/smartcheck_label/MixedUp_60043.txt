C:\Users\hp\DataSet\MixedUp.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_CALL_WITHOUT_DATA
patternId: lr991l
severity: 1
line: 49
column: 18
content: call.gas(200000).value(commission)()

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 6
column: 1
content: functiontotalSupply()publicconstantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 7
column: 1
content: functionbalanceOf(address_address)publicconstantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 100
column: 1
content: functioncountTokens(uintvalue,uint[]bonusPeriods,uint[]bonusRates,uintrate)constantreturns(uint){if(bonusRates.length==0)returnvalue*rate;for(uinti=0;i<bonusPeriods.length;i++){if(now<bonusPeriods[i]){rate=bonusRates[i];break;}}uinttokensAmount=SafeMath.mul(value,rate);returntokensAmount;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 122
column: 1
content: functioncountRefundSum(uinttokensAmount,uintetherRate,uintnewRate,uintmultiplier)constantreturns(uint){uintfromPercentDivider=100;return(tokensAmount/fromPercentDivider*newRate)/(multiplier*etherRate);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 510
column: 1
content: functionexists(address_address)externalconstantreturns(bool);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 588
column: 1
content: functionstringToBytes32(stringmemorysource)constantreturns(bytes32result){assembly{result:=mload(add(source,32))}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 594
column: 1
content: functionpercent(uintnumerator,uintdenominator,uintprecision)constantreturns(uintquotient){uint_numerator=numerator*10**(precision+1);quotient=((_numerator/denominator)+5)/10;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 599
column: 1
content: functiontoString(bytes32_bytes)internalconstantreturns(string){bytesmemoryarrayTemp=newbytes(32);uintcurrentLength=0;for(uinti=0;i<32;i++){arrayTemp[i]=_bytes[i];if(arrayTemp[i]!=0)currentLength+=1;}bytesmemoryarrayRes=newbytes(currentLength);for(i=0;i<currentLength;i++){arrayRes[i]=arrayTemp[i];}returnstring(arrayRes);}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 706
column: 1
content: functionisParticipant(address_participantAddress)externalconstantreturns(bool){returntoken.balanceOf(_participantAddress)>0;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 931
column: 1
content: functionisValidWithdrawal(address_dao,uint_sum,bool_dxc)constantreturns(bool){return!_dxc?_dao.balance>=_sum:ICrowdsaleDAO(_dao).DXC().balanceOf(_dao)>=_sum;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 937
column: 1
content: functionisParticipant(address_participantAddress)externalconstantreturns(bool);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 939
column: 1
content: functionteamMap(address_address)externalconstantreturns(bool);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 941
column: 1
content: functionwhiteList(address_address)constantreturns(bool);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 976
column: 1
content: functionteamBonuses(address_address)constantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 978
column: 1
content: functiontoken()constantreturns(TokenInterface);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 980
column: 1
content: functionDXC()constantreturns(TokenInterface);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1004
column: 1
content: functiongetOptions()externalconstantreturns(uint[2]result);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1006
column: 1
content: functionfinished()externalconstantreturns(bool);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1008
column: 1
content: functionvoted(address_address)externalconstantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1017
column: 1
content: functiongetOptions()publicconstantreturns(uint[2]){return[options[1].votes,options[2].votes];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1053
column: 1
content: functiongetOptions()externalconstantreturns(uint[10]){return[options[1].votes,options[2].votes,options[3].votes,options[4].votes,options[5].votes,options[6].votes,options[7].votes,options[8].votes,options[9].votes,options[10].votes];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1393
column: 1
content: functionbalanceOf(addresswho)publicconstantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1423
column: 1
content: functionbalanceOf(address_owner)publicconstantreturns(uint256balance){returnbalances[_owner];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1430
column: 1
content: functionallowance(addressowner,addressspender)publicconstantreturns(uint256);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1484
column: 1
content: functionallowance(address_owner,address_spender)publicconstantreturns(uint256remaining){returnallowed[_owner][_spender];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1516
column: 1
content: functionmul(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a*b;assert(a==0||c/a==b);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1522
column: 1
content: functiondiv(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a/b;returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1529
column: 1
content: functionsub(uint256a,uint256b)internalconstantreturns(uint256){assert(b<=a);returna-b;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1534
column: 1
content: functionadd(uint256a,uint256b)internalconstantreturns(uint256){uint256c=a+b;assert(c>=a);returnc;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 1675
column: 1
content: functionexists(address_address)externalconstantreturns(bool){returnkeccak256(DAOs[_address])!=keccak256("");}

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 48
column: 20
content: (commissionRaised/100)*4

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 125
column: 10
content: tokensAmount/fromPercentDivider*newRate

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 1472
column: 1
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;Approval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 52
column: 2
content: for(uinti=0;i<team.length;i++){uintteamMemberTokensAmount=SafeMath.mul(totalSupply,teamBonuses[i]);teamTokensAmount+=teamMemberTokensAmount;token.mint(team[i],teamMemberTokensAmount);token.hold(team[i],teamHold[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 103
column: 2
content: for(uinti=0;i<bonusPeriods.length;i++){if(now<bonusPeriods[i]){rate=bonusRates[i];break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 834
column: 2
content: for(uinti=0;i<_team.length;i++){teamMap[_team[i]]=true;teamBonuses[_team[i]]=_tokenPercents[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 854
column: 2
content: for(uinti=0;i<_addresses.length;i++){whiteList[_addresses[i]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1078
column: 2
content: for(uinti=0;i<_options.length;i++){options[i+1]=VotingLib.Option(0,_options[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1185
column: 2
content: for(uinti=2;i<options.length;i++){if(_result.votes==options[i].votes)equal=true;elseif(_result.votes<options[i].votes){_result=options[i];equal=false;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1743
column: 2
content: for(uinti=0;i<additionalOwnersList.length;i++){additionalOwners[additionalOwnersList[i]]=false;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1747
column: 2
content: for(i=0;i<_owners.length;i++){additionalOwners[_owners[i]]=true;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 588
column: 1
content: functionstringToBytes32(stringmemorysource)constantreturns(bytes32result){assembly{result:=mload(add(source,32))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 52
column: 2
content: for(uinti=0;i<team.length;i++){uintteamMemberTokensAmount=SafeMath.mul(totalSupply,teamBonuses[i]);teamTokensAmount+=teamMemberTokensAmount;token.mint(team[i],teamMemberTokensAmount);token.hold(team[i],teamHold[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 103
column: 2
content: for(uinti=0;i<bonusPeriods.length;i++){if(now<bonusPeriods[i]){rate=bonusRates[i];break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 834
column: 2
content: for(uinti=0;i<_team.length;i++){teamMap[_team[i]]=true;teamBonuses[_team[i]]=_tokenPercents[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 854
column: 2
content: for(uinti=0;i<_addresses.length;i++){whiteList[_addresses[i]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1078
column: 2
content: for(uinti=0;i<_options.length;i++){options[i+1]=VotingLib.Option(0,_options[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1743
column: 2
content: for(uinti=0;i<additionalOwnersList.length;i++){additionalOwners[additionalOwnersList[i]]=false;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1747
column: 2
content: for(i=0;i<_owners.length;i++){additionalOwners[_owners[i]]=true;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 202
column: 0
content: contractCommission{IDAOPayabledao;functionCommission(address_dao){dao=IDAOPayable(_dao);}function()payable{dao.handleCommissionPayment.value(msg.value)(msg.sender);}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 260
column: 0
content: contractCrowdsaleisCrowdsaleDAOFields{addresspublicowner;functionhandlePayment(address_sender,bool_commission)externalpayableCrowdsaleIsOngoingvalidEtherPurchase(msg.value){require(_sender!=0x0);uintweiAmount=msg.value;if(_commission){commissionRaised=commissionRaised+weiAmount;}weiRaised+=weiAmount;depositedWei[_sender]+=weiAmount;uinttokensAmount=DAOLib.countTokens(weiAmount,bonusPeriods,bonusEtherRates,etherRate);tokensMintedByEther=SafeMath.add(tokensMintedByEther,tokensAmount);token.mint(_sender,tokensAmount);}functionhandleDXCPayment(address_from,uint_dxcAmount)externalCrowdsaleIsOngoingvalidDXCPurchase(_dxcAmount)onlyDXC{DXCRaised+=_dxcAmount;depositedDXC[_from]+=_dxcAmount;uinttokensAmount=DAOLib.countTokens(_dxcAmount,bonusPeriods,bonusDXCRates,DXCRate);tokensMintedByDXC=SafeMath.add(tokensMintedByDXC,tokensAmount);token.mint(_from,tokensAmount);}functioninitCrowdsaleParameters(uint_softCap,uint_hardCap,uint_etherRate,uint_DXCRate,uint_startTime,uint_endTime,bool_dxcPayments)externalonlyOwner(msg.sender)canInit{require(_softCap!=0&&_hardCap!=0&&_etherRate!=0&&_DXCRate!=0&&_startTime!=0&&_endTime!=0);require(_softCap<_hardCap&&_startTime>block.timestamp);softCap=_softCap*1ether;hardCap=_hardCap*1ether;(startTime,endTime)=(_startTime,_endTime);(dxcPayments,etherRate,DXCRate)=(_dxcPayments,_etherRate,_DXCRate);canInitCrowdsaleParameters=false;}functionfinish()external{fundsRaised=DXCRate!=0?weiRaised+(DXC.balanceOf(this))/(etherRate/DXCRate):weiRaised;require((block.timestamp>=endTime||fundsRaised==hardCap)&&!crowdsaleFinished);crowdsaleFinished=true;if(fundsRaised>=softCap){teamTokensAmount=DAOLib.handleFinishedCrowdsale(token,commissionRaised,serviceContract,teamBonusesArr,team,teamHold);}else{refundableSoftCap=true;}token.finishMinting();}modifiercanInit(){require(canInitCrowdsaleParameters);_;}modifieronlyCommission(){require(commissionContract==msg.sender);_;}modifierCrowdsaleIsOngoing(){require(block.timestamp>=startTime&&block.timestamp<endTime&&!crowdsaleFinished);_;}modifiervalidEtherPurchase(uintvalue){require(DXCRate!=0?hardCap-DXCRaised/(etherRate/DXCRate)>=weiRaised+value:hardCap>=weiRaised+value);_;}modifiervalidDXCPurchase(uintvalue){require(dxcPayments&&(hardCap-weiRaised>=(value+DXCRaised)/(etherRate/DXCRate)));_;}modifieronlyDXC(){require(msg.sender==address(DXC));_;}modifieronlyOwner(address_sender){require(_sender==owner);_;}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 617
column: 0
content: contractCrowdsaleDAOisCrowdsaleDAOFields,Owned{addresspublicstateModule;addresspublicpaymentModule;addresspublicvotingDecisionModule;addresspubliccrowdsaleModule;functionCrowdsaleDAO(string_name,string_description,address_serviceContractAddress,address_votingFactoryContractAddress)Owned(msg.sender){(name,description,serviceContract,votingFactory)=(_name,_description,_serviceContractAddress,VotingFactoryInterface(_votingFactoryContractAddress));}function()payable{DAOProxy.delegatedHandlePayment(crowdsaleModule,msg.sender,false);}functionhandleCommissionPayment(address_sender)payable{DAOProxy.delegatedHandlePayment(crowdsaleModule,_sender,true);}functionhandleDXCPayment(address_from,uint_amount){DAOProxy.delegatedHandleDXCPayment(crowdsaleModule,_from,_amount);}functionwithdrawal(address_address,uint_withdrawalSum,bool_dxc)external{DAOProxy.delegatedWithdrawal(votingDecisionModule,_address,_withdrawalSum,_dxc);}functionmakeRefundableByVotingDecision()external{DAOProxy.delegatedMakeRefundableByVotingDecision(votingDecisionModule);}functionholdTokens(address_address,uint_duration)external{DAOProxy.delegatedHoldTokens(votingDecisionModule,_address,_duration);}functionsetStateModule(address_stateModule)externalcanSetAddress(stateModule){stateModule=_stateModule;}functionsetPaymentModule(address_paymentModule)externalcanSetAddress(paymentModule){paymentModule=_paymentModule;}functionsetVotingDecisionModule(address_votingDecisionModule)externalcanSetAddress(votingDecisionModule){votingDecisionModule=_votingDecisionModule;}functionsetCrowdsaleModule(address_crowdsaleModule)externalcanSetAddress(crowdsaleModule){crowdsaleModule=_crowdsaleModule;}functionsetVotingFactoryAddress(address_votingFactory)externalcanSetAddress(votingFactory){votingFactory=VotingFactoryInterface(_votingFactory);}functionisParticipant(address_participantAddress)externalconstantreturns(bool){returntoken.balanceOf(_participantAddress)>0;}functioninitState(address_tokenAddress,address_DXC)public{DAOProxy.delegatedInitState(stateModule,_tokenAddress,_DXC);}functioninitCrowdsaleParameters(uint_softCap,uint_hardCap,uint_etherRate,uint_DXCRate,uint_startTime,uint_endTime,bool_dxcPayments)public{DAOProxy.delegatedInitCrowdsaleParameters(crowdsaleModule,_softCap,_hardCap,_etherRate,_DXCRate,_startTime,_endTime,_dxcPayments);}functionaddRegular(string_name,string_description,uint_duration,bytes32[]_options)public{votings[DAOLib.delegatedCreateRegular(votingFactory,_name,_description,_duration,_options,this)]=true;}functionaddWithdrawal(string_name,string_description,uint_duration,uint_sum,address_withdrawalWallet,bool_dxc)public{votings[DAOLib.delegatedCreateWithdrawal(votingFactory,_name,_description,_duration,_sum,_withdrawalWallet,_dxc,this)]=true;}functionaddRefund(string_name,string_description,uint_duration)public{votings[DAOLib.delegatedCreateRefund(votingFactory,_name,_description,_duration,this)]=true;}functionaddModule(string_name,string_description,uint_duration,uint_module,address_newAddress)public{votings[DAOLib.delegatedCreateModule(votingFactory,_name,_description,_duration,_module,_newAddress,this)]=true;}functionmakeRefundableByUser()public{DAOProxy.delegatedMakeRefundableByUser(votingDecisionModule);}functionrefund()public{DAOProxy.delegatedRefund(paymentModule);}functionrefundSoftCap()public{DAOProxy.delegatedRefundSoftCap(paymentModule);}functionfinish()public{DAOProxy.delegatedFinish(crowdsaleModule);}functioninitBonuses(address[]_team,uint[]_tokenPercents,uint[]_bonusPeriods,uint[]_bonusEtherRates,uint[]_bonusDXCRates,uint[]_teamHold,bool[]_service)publiconlyOwner(msg.sender){require(_team.length==_tokenPercents.length&&_team.length==_teamHold.length&&_team.length==_service.length&&_bonusPeriods.length==_bonusEtherRates.length&&(_bonusDXCRates.length==0||_bonusPeriods.length==_bonusDXCRates.length)&&canInitBonuses&&(block.timestamp<startTime||canInitCrowdsaleParameters));team=_team;teamHold=_teamHold;teamBonusesArr=_tokenPercents;teamServiceMember=_service;for(uinti=0;i<_team.length;i++){teamMap[_team[i]]=true;teamBonuses[_team[i]]=_tokenPercents[i];}bonusPeriods=_bonusPeriods;bonusEtherRates=_bonusEtherRates;bonusDXCRates=_bonusDXCRates;canInitBonuses=false;}functionsetWhiteList(address[]_addresses)publiconlyOwner(msg.sender){require(canSetWhiteList);whiteListArr=_addresses;for(uinti=0;i<_addresses.length;i++){whiteList[_addresses[i]]=true;}canSetWhiteList=false;}modifiercanSetAddress(addressmodule){require(votings[msg.sender]||(module==0x0&&msg.sender==owner));_;}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1740
column: 1
content: functionsetAdditionalOwners(address[]_owners)onlyOwner{SetAdditionalOwners(additionalOwnersList,_owners);for(uinti=0;i<additionalOwnersList.length;i++){additionalOwners[additionalOwnersList[i]]=false;}for(i=0;i<_owners.length;i++){additionalOwners[_owners[i]]=true;}additionalOwnersList=_owners;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1399
column: 1
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 49
column: 18
content: call.gas(200000).value(commission)()

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1026
column: 12
content: delegatecallAddVote(baseVoting,_optionID)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1045
column: 12
content: delegatecallCreate(baseVoting,_dao,_name,_description,_duration,0)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1063
column: 12
content: delegatecallAddVote(baseVoting,_optionID)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1070
column: 12
content: delegatecallFinish(baseVoting)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1093
column: 12
content: delegatecallCreate(baseVoting,_dao,_name,_description,_duration,0)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1104
column: 12
content: delegatecallFinish(baseVoting)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1113
column: 12
content: delegatecallCreate(baseVoting,_dao,_name,_description,_duration,90)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1118
column: 12
content: delegatecallFinish(baseVoting)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1255
column: 12
content: delegatecallCreate(baseVoting,_dao,_name,_description,_duration,80)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1263
column: 12
content: delegatecallFinish(baseVoting)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 49
column: 18
content: call.gas(200000).value(commission)()

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 1666
column: 39
content: call(bytes4(keccak256("setDaoFactory(address)")),this)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 1667
column: 33
content: call(bytes4(keccak256("setDaoFactory(address)")),this)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 1688
column: 14
content: call(bytes4(keccak256("setStateModule(address)")),modules[0])

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 1689
column: 14
content: call(bytes4(keccak256("setPaymentModule(address)")),modules[1])

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 1690
column: 14
content: call(bytes4(keccak256("setVotingDecisionModule(address)")),modules[2])

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 1691
column: 14
content: call(bytes4(keccak256("setCrowdsaleModule(address)")),modules[3])

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 83k1no
severity: 1
line: 1719
column: 14
content: call(bytes4(keccak256("handleDXCPayment(address,uint256)")),msg.sender,_amount)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 599
column: 61
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 741
column: 21
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 741
column: 35
content: string_description

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 741
column: 72
content: bytes32[]_options

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 754
column: 24
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 754
column: 38
content: string_description

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 764
column: 20
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 764
column: 34
content: string_description

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 776
column: 20
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 776
column: 34
content: string_description

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 818
column: 22
content: address[]_team

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 818
column: 39
content: uint[]_tokenPercents

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 818
column: 62
content: uint[]_bonusPeriods

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 818
column: 84
content: uint[]_bonusEtherRates

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 818
column: 109
content: uint[]_bonusDXCRates

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 818
column: 132
content: uint[]_teamHold

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 818
column: 150
content: bool[]_service

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 850
column: 23
content: address[]_addresses

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1077
column: 24
content: bytes32[]_options

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1685
column: 29
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1685
column: 43
content: string_description

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 589
column: 2
content: assembly{result:=mload(add(source,32))}

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 4
column: 45
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 5
column: 26
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 6
column: 24
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 7
column: 38
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 23rt6g
severity: 1
line: 11
column: 53
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 8
column: 1
content: functionburn(addressburner);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 47
column: 1
content: functionhandleFinishedCrowdsale(TokenInterfacetoken,uintcommissionRaised,addressserviceContract,uint[]teamBonuses,address[]team,uint[]teamHold)returns(uint){uintcommission=(commissionRaised/100)*4;serviceContract.call.gas(200000).value(commission)();uinttotalSupply=token.totalSupply()/100;uintteamTokensAmount=0;for(uinti=0;i<team.length;i++){uintteamMemberTokensAmount=SafeMath.mul(totalSupply,teamBonuses[i]);teamTokensAmount+=teamMemberTokensAmount;token.mint(team[i],teamMemberTokensAmount);token.hold(team[i],teamHold[i]);}returnteamTokensAmount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 62
column: 1
content: functiondelegatedCreateRegular(VotingFactoryInterface_votingFactory,string_name,string_description,uint_duration,bytes32[]_options,address_dao)returns(address){address_votingAddress=_votingFactory.createRegular(msg.sender,_name,_description,_duration,_options);VotingCreated(_votingAddress,"Regular",_dao,_name,_description,_duration,msg.sender);return_votingAddress;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 69
column: 1
content: functiondelegatedCreateWithdrawal(VotingFactoryInterface_votingFactory,string_name,string_description,uint_duration,uint_sum,addresswithdrawalWallet,bool_dxc,address_dao)returns(address){address_votingAddress=_votingFactory.createWithdrawal(msg.sender,_name,_description,_duration,_sum,withdrawalWallet,_dxc);VotingCreated(_votingAddress,"Withdrawal",_dao,_name,_description,_duration,msg.sender);return_votingAddress;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 78
column: 1
content: functiondelegatedCreateRefund(VotingFactoryInterface_votingFactory,string_name,string_description,uint_duration,address_dao)returns(address){address_votingAddress=_votingFactory.createRefund(msg.sender,_name,_description,_duration);VotingCreated(_votingAddress,"Refund",_dao,_name,_description,_duration,msg.sender);return_votingAddress;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 85
column: 1
content: functiondelegatedCreateModule(VotingFactoryInterface_votingFactory,string_name,string_description,uint_duration,uint_module,address_newAddress,address_dao)returns(address){address_votingAddress=_votingFactory.createModule(msg.sender,_name,_description,_duration,_module,_newAddress);VotingCreated(_votingAddress,"Module",_dao,_name,_description,_duration,msg.sender);return_votingAddress;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 100
column: 1
content: functioncountTokens(uintvalue,uint[]bonusPeriods,uint[]bonusRates,uintrate)constantreturns(uint){if(bonusRates.length==0)returnvalue*rate;for(uinti=0;i<bonusPeriods.length;i++){if(now<bonusPeriods[i]){rate=bonusRates[i];break;}}uinttokensAmount=SafeMath.mul(value,rate);returntokensAmount;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 122
column: 1
content: functioncountRefundSum(uinttokensAmount,uintetherRate,uintnewRate,uintmultiplier)constantreturns(uint){uintfromPercentDivider=100;return(tokensAmount/fromPercentDivider*newRate)/(multiplier*etherRate);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 184
column: 1
content: functionOwned(address_owner){owner=_owner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 188
column: 1
content: functiontransferOwnership(addressnewOwner)onlyOwner(msg.sender){owner=newOwner;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 199
column: 1
content: functionhandleCommissionPayment(address_sender)payable;

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 205
column: 1
content: functionCommission(address_dao){dao=IDAOPayable(_dao);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 209
column: 1
content: function()payable{dao.handleCommissionPayment.value(msg.value)(msg.sender);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 392
column: 1
content: functionrefund()whenRefundablenotTeamMember{uinttokensMintedSum=SafeMath.add(tokensMintedByEther,tokensMintedByDXC);uintetherPerDXCRate=SafeMath.mul(tokensMintedByEther,percentMultiplier)/tokensMintedSum;uintdxcPerEtherRate=SafeMath.mul(tokensMintedByDXC,percentMultiplier)/tokensMintedSum;uinttokensAmount=token.balanceOf(msg.sender);token.burn(msg.sender);if(etherPerDXCRate!=0)msg.sender.transfer(DAOLib.countRefundSum(etherPerDXCRate*tokensAmount,etherRate,newEtherRate,multiplier));if(dxcPerEtherRate!=0)DXC.transfer(msg.sender,DAOLib.countRefundSum(dxcPerEtherRate*tokensAmount,DXCRate,newDXCRate,multiplier));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 410
column: 1
content: functionrefundSoftCap()whenRefundableSoftCap{require(depositedWei[msg.sender]!=0||depositedDXC[msg.sender]!=0);token.burn(msg.sender);uintweiAmount=depositedWei[msg.sender];uinttokensAmount=depositedDXC[msg.sender];deletedepositedWei[msg.sender];deletedepositedDXC[msg.sender];DXC.transfer(msg.sender,tokensAmount);msg.sender.transfer(weiAmount);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 514
column: 1
content: functiondeployCrowdsaleDAO(string_name,string_description,address_serviceContractAddress,address_votingFactoryContractAddress)returns(CrowdsaleDAOdao){dao=newCrowdsaleDAO(_name,_description,_serviceContractAddress,_votingFactoryContractAddress);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 518
column: 1
content: functiontransferOwnership(address_dao,address_newOwner){CrowdsaleDAO(_dao).transferOwnership(_newOwner);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 524
column: 1
content: functiondelegatedInitState(addressstateModule,address_tokenAddress,address_DXC){require(stateModule.delegatecall(bytes4(keccak256("initState(address,address)")),_tokenAddress,_DXC));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 528
column: 1
content: functiondelegatedHoldState(addressstateModule,uint_tokenHoldTime){require(stateModule.delegatecall(bytes4(keccak256("initHold(uint256)")),_tokenHoldTime));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 532
column: 1
content: functiondelegatedGetCommissionTokens(addresspaymentModule){require(paymentModule.delegatecall(bytes4(keccak256("getCommissionTokens()"))));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 536
column: 1
content: functiondelegatedRefund(addresspaymentModule){require(paymentModule.delegatecall(bytes4(keccak256("refund()"))));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 540
column: 1
content: functiondelegatedRefundSoftCap(addresspaymentModule){require(paymentModule.delegatecall(bytes4(keccak256("refundSoftCap()"))));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 544
column: 1
content: functiondelegatedWithdrawal(addressvotingDecisionModule,address_address,uintwithdrawalSum,booldxc){require(votingDecisionModule.delegatecall(bytes4(keccak256("withdrawal(address,uint256,bool)")),_address,withdrawalSum,dxc));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 548
column: 1
content: functiondelegatedMakeRefundableByUser(addressvotingDecisionModule){require(votingDecisionModule.delegatecall(bytes4(keccak256("makeRefundableByUser()"))));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 552
column: 1
content: functiondelegatedMakeRefundableByVotingDecision(addressvotingDecisionModule){require(votingDecisionModule.delegatecall(bytes4(keccak256("makeRefundableByVotingDecision()"))));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 556
column: 1
content: functiondelegatedHoldTokens(addressvotingDecisionModule,address_address,uintduration){require(votingDecisionModule.delegatecall(bytes4(keccak256("holdTokens(address,uint256)")),_address,duration));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 560
column: 1
content: functiondelegatedInitCrowdsaleParameters(addresscrowdsaleModule,uint_softCap,uint_hardCap,uint_etherRate,uint_DXCRate,uint_startTime,uint_endTime,bool_dxcPayments){require(crowdsaleModule.delegatecall(bytes4(keccak256("initCrowdsaleParameters(uint256,uint256,uint256,uint256,uint256,uint256,bool)")),_softCap,_hardCap,_etherRate,_DXCRate,_startTime,_endTime,_dxcPayments));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 574
column: 1
content: functiondelegatedFinish(addresscrowdsaleModule){require(crowdsaleModule.delegatecall(bytes4(keccak256("finish()"))));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 578
column: 1
content: functiondelegatedHandlePayment(addresscrowdsaleModule,address_sender,bool_commission){require(crowdsaleModule.delegatecall(bytes4(keccak256("handlePayment(address,bool)")),_sender,_commission));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 582
column: 1
content: functiondelegatedHandleDXCPayment(addresscrowdsaleModule,address_from,uint_amount){require(crowdsaleModule.delegatecall(bytes4(keccak256("handleDXCPayment(address,uint256)")),_from,_amount));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 588
column: 1
content: functionstringToBytes32(stringmemorysource)constantreturns(bytes32result){assembly{result:=mload(add(source,32))}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 594
column: 1
content: functionpercent(uintnumerator,uintdenominator,uintprecision)constantreturns(uintquotient){uint_numerator=numerator*10**(precision+1);quotient=((_numerator/denominator)+5)/10;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 623
column: 1
content: functionCrowdsaleDAO(string_name,string_description,address_serviceContractAddress,address_votingFactoryContractAddress)Owned(msg.sender){(name,description,serviceContract,votingFactory)=(_name,_description,_serviceContractAddress,VotingFactoryInterface(_votingFactoryContractAddress));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 631
column: 1
content: function()payable{DAOProxy.delegatedHandlePayment(crowdsaleModule,msg.sender,false);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 640
column: 1
content: functionhandleCommissionPayment(address_sender)payable{DAOProxy.delegatedHandlePayment(crowdsaleModule,_sender,true);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 650
column: 1
content: functionhandleDXCPayment(address_from,uint_amount){DAOProxy.delegatedHandleDXCPayment(crowdsaleModule,_from,_amount);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 882
column: 1
content: functionOwnable(){owner=msg.sender;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 913
column: 1
content: functiondelegatecallCreate(address_v,address_dao,string_name,string_description,uint_duration,uint_quorum){require(_v.delegatecall(bytes4(keccak256("create(address,bytes32,bytes32,uint256,uint256)")),_dao,Common.stringToBytes32(_name),Common.stringToBytes32(_description),_duration,_quorum));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 923
column: 1
content: functiondelegatecallAddVote(address_v,uintoptionID){require(_v.delegatecall(bytes4(keccak256("addVote(uint256)")),optionID));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 927
column: 1
content: functiondelegatecallFinish(address_v){require(_v.delegatecall(bytes4(keccak256("finish()"))));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 931
column: 1
content: functionisValidWithdrawal(address_dao,uint_sum,bool_dxc)constantreturns(bool){return!_dxc?_dao.balance>=_sum:ICrowdsaleDAO(_dao).DXC().balanceOf(_dao)>=_sum;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 941
column: 1
content: functionwhiteList(address_address)constantreturns(bool);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 962
column: 1
content: functionmakeRefundableByVotingDecision();

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 964
column: 1
content: functionwithdrawal(address_address,uintwithdrawalSum,booldxc);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 966
column: 1
content: functionsetStateModule(address_stateModule);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 968
column: 1
content: functionsetPaymentModule(address_paymentModule);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 970
column: 1
content: functionsetVotingDecisionModule(address_votingDecisionModule);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 972
column: 1
content: functionsetCrowdsaleModule(address_crowdsaleModule);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 974
column: 1
content: functionsetVotingFactoryAddress(address_votingFactory);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 976
column: 1
content: functionteamBonuses(address_address)constantreturns(uint);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 978
column: 1
content: functiontoken()constantreturns(TokenInterface);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 980
column: 1
content: functionDXC()constantreturns(TokenInterface);

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1041
column: 1
content: functionRegular(address_baseVoting,address_dao,string_name,string_description,uint_duration,bytes32[]_options){require(_options.length>=2&&_options.length<=10);baseVoting=_baseVoting;votingType="Regular";VotingLib.delegatecallCreate(baseVoting,_dao,_name,_description,_duration,0);createOptions(_options);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1089
column: 1
content: functionWithdrawal(address_baseVoting,address_dao,string_name,string_description,uint_duration,uint_sum,address_withdrawalWallet,bool_dxc){require(_sum>0&&VotingLib.isValidWithdrawal(_dao,_sum,_dxc));baseVoting=_baseVoting;votingType="Withdrawal";VotingLib.delegatecallCreate(baseVoting,_dao,_name,_description,_duration,0);withdrawalSum=_sum;withdrawalWallet=_withdrawalWallet;dxc=_dxc;createOptions();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1110
column: 1
content: functionRefund(address_baseVoting,address_dao,string_name,string_description,uint_duration){baseVoting=_baseVoting;votingType="Refund";VotingLib.delegatecallCreate(baseVoting,_dao,_name,_description,_duration,90);createOptions();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1249
column: 1
content: functionModule(address_baseVoting,address_dao,string_name,string_description,uint_duration,uint_module,address_newAddress){require(_module>=0&&_module<=4);baseVoting=_baseVoting;votingType="Module";module=Modules(_module);newModuleAddress=_newAddress;VotingLib.delegatecallCreate(baseVoting,_dao,_name,_description,_duration,80);createOptions();}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1279
column: 1
content: functionVotingFactory(address_baseVoting){baseVoting=_baseVoting;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1494
column: 1
content: functionincreaseApproval(address_spender,uint_addedValue)returns(boolsuccess){allowed[msg.sender][_spender]=allowed[msg.sender][_spender].add(_addedValue);Approval(msg.sender,_spender,allowed[msg.sender][_spender]);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1501
column: 1
content: functiondecreaseApproval(address_spender,uint_subtractedValue)returns(boolsuccess){uintoldValue=allowed[msg.sender][_spender];if(_subtractedValue>oldValue){allowed[msg.sender][_spender]=0;}else{allowed[msg.sender][_spender]=oldValue.sub(_subtractedValue);}Approval(msg.sender,_spender,allowed[msg.sender][_spender]);returntrue;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1586
column: 1
content: functionToken(string_name,string_symbol){name=_name;symbol=_symbol;TokenCreation(this);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1623
column: 1
content: functionDAOx(){}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1627
column: 1
content: function()payableonlyDAO{balance+=msg.value;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1660
column: 1
content: functionCrowdsaleDAOFactory(address_serviceContractAddress,address_votingFactoryAddress,address[4]_modules){require(_serviceContractAddress!=0x0&&_votingFactoryAddress!=0x0);serviceContractAddress=_serviceContractAddress;votingFactoryContractAddress=_votingFactoryAddress;modules=_modules;require(votingFactoryContractAddress.call(bytes4(keccak256("setDaoFactory(address)")),this));require(serviceContractAddress.call(bytes4(keccak256("setDaoFactory(address)")),this));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1740
column: 1
content: functionsetAdditionalOwners(address[]_owners)onlyOwner{SetAdditionalOwners(additionalOwnersList,_owners);for(uinti=0;i<additionalOwnersList.length;i++){additionalOwners[additionalOwnersList[i]]=false;}for(i=0;i<_owners.length;i++){additionalOwners[_owners[i]]=true;}additionalOwnersList=_owners;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 203
column: 1
content: IDAOPayabledao;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 984
column: 1
content: ICrowdsaleDAOdao;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1012
column: 1
content: addressbaseVoting;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1039
column: 1
content: addressbaseVoting;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1276
column: 1
content: addressbaseVoting;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1401
column: 1
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1438
column: 1
content: mapping(address=>mapping(address=>uint256))allowed;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1656
column: 1
content: mapping(address=>string)DAOs;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1658
column: 1
content: address[4]modules;

SOLIDITY_VISIBILITY :78
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :8
SOLIDITY_UPGRADE_TO_050 :29
SOLIDITY_GAS_LIMIT_IN_LOOPS :7
SOLIDITY_UNCHECKED_CALL :11
SOLIDITY_DIV_MUL :2
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_SAFEMATH :1
SOLIDITY_DEPRECATED_CONSTRUCTIONS :30
SOLIDITY_LOCKED_MONEY :3
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_CALL_WITHOUT_DATA :1
