C:\Users\hp\DataSet\contracts\mainnet\69\6930bdfa27266deca4ef1cd7d89984c3ad0c37d8_WiredToken.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 94
column: 4
content: owner=address(0)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 138
column: 83
content: startLockUpSec.div(secondsPerBlock).mul(10)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 142
column: 87
content: startLockUpSec.div(secondsPerBlock).mul(10)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 164
column: 87
content: startLockUpSec.div(secondsPerBlock).mul(10)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 169
column: 25
content: presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 169
column: 25
content: presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 173
column: 25
content: presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 173
column: 25
content: presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 174
column: 58
content: presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 174
column: 58
content: presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 175
column: 75
content: presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 175
column: 75
content: presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 341
column: 2
content: functionapprove(address_spender,uint256_value)publicreturns(bool){allowed[msg.sender][_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 141
column: 12
content: for(uinti=0;i<presaleInvestors[senderAdr].length;i++){if(presaleInvestors[senderAdr][i].purchaseBlock<=(block.number).sub(startLockUpSec.div(secondsPerBlock).mul(10))){uintmonths=(block.number.sub(presaleInvestors[senderAdr][i].purchaseBlock)).div(secondsPerMonth);if(months>10){months=10;}uintactAmount=(presaleInvestors[senderAdr][i].buyAmount).mul(months).mul(percentagePerMonth).div(100);uintrealAmout=actAmount.sub(presaleInvestors[senderAdr][i].transferredAmount);canTransfer=canTransfer.add(realAmout);}else{break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 160
column: 12
content: for(uinti=0;i<presaleInvestors[senderAdr].length;i++){if(presaleInvestors[senderAdr][i].transferredAmount==presaleInvestors[senderAdr][i].buyAmount){continue;}if(presaleInvestors[senderAdr][i].purchaseBlock<=(block.number).sub(startLockUpSec.div(secondsPerBlock).mul(10))){uintmonths=(block.number.sub(presaleInvestors[senderAdr][i].purchaseBlock)).div(secondsPerMonth);if(months>10){months=10;}if((presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount)>=currentTokens){presaleInvestors[senderAdr][i].transferredAmount=presaleInvestors[senderAdr][i].transferredAmount+currentTokens;currentTokens=0;}if((presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount)<currentTokens){uintremainder=currentTokens-(presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount);presaleInvestors[senderAdr][i].transferredAmount=presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth);currentTokens=remainder;}}else{continue;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 508
column: 8
content: for(uinti=0;i<addresses.length;i++){require(addresses[i]!=0x0);balances[addresses[i]]=balances[addresses[i]].add(amounts);emitTransfer(address(this),addresses[i],amounts);mainSaleInvestors[addresses[i]]=mainSaleInvestors[addresses[i]].add(amounts);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 524
column: 8
content: for(uinti=0;i<addresses.length;i++){require(amount[i]>0&&addresses[i]!=0x0);uint256amounts=amount[i].mul(100000000);totalAmount=totalAmount.add(amounts);require(balances[address(this)]>=totalAmount);balances[addresses[i]]=balances[addresses[i]].add(amounts);emitTransfer(address(this),addresses[i],amounts);mainSaleInvestors[addresses[i]]=mainSaleInvestors[addresses[i]].add(amounts);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 546
column: 8
content: for(uinti=0;i<addresses.length;i++){require(amount[i]>0&&addresses[i]!=0x0);uint256amounts=amount[i].mul(100000000);totalAmount=totalAmount.add(amounts);require(balances[address(this)]>=totalAmount);presaleInvestors[addresses[i]].push(Purchase(amounts,0,blocks[i]));balances[addresses[i]]=balances[addresses[i]].add(amounts);emitTransfer(address(this),addresses[i],amounts);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 158
column: 4
content: functioncleanTokensAmount(addresssenderAdr,uint256currentTokens)publicreturns(bool){if(presaleInvestors[senderAdr].length!=0){for(uinti=0;i<presaleInvestors[senderAdr].length;i++){if(presaleInvestors[senderAdr][i].transferredAmount==presaleInvestors[senderAdr][i].buyAmount){continue;}if(presaleInvestors[senderAdr][i].purchaseBlock<=(block.number).sub(startLockUpSec.div(secondsPerBlock).mul(10))){uintmonths=(block.number.sub(presaleInvestors[senderAdr][i].purchaseBlock)).div(secondsPerMonth);if(months>10){months=10;}if((presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount)>=currentTokens){presaleInvestors[senderAdr][i].transferredAmount=presaleInvestors[senderAdr][i].transferredAmount+currentTokens;currentTokens=0;}if((presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount)<currentTokens){uintremainder=currentTokens-(presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount);presaleInvestors[senderAdr][i].transferredAmount=presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth);currentTokens=remainder;}}else{continue;}}if(currentTokens<=mainSaleInvestors[senderAdr]){mainSaleInvestors[senderAdr]=mainSaleInvestors[senderAdr]-currentTokens;currentTokens=0;}else{revert();}}else{if(currentTokens<=mainSaleInvestors[senderAdr]){mainSaleInvestors[senderAdr]=mainSaleInvestors[senderAdr]-currentTokens;currentTokens=0;}else{revert();}}if(currentTokens!=0){revert();}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 141
column: 12
content: for(uinti=0;i<presaleInvestors[senderAdr].length;i++){if(presaleInvestors[senderAdr][i].purchaseBlock<=(block.number).sub(startLockUpSec.div(secondsPerBlock).mul(10))){uintmonths=(block.number.sub(presaleInvestors[senderAdr][i].purchaseBlock)).div(secondsPerMonth);if(months>10){months=10;}uintactAmount=(presaleInvestors[senderAdr][i].buyAmount).mul(months).mul(percentagePerMonth).div(100);uintrealAmout=actAmount.sub(presaleInvestors[senderAdr][i].transferredAmount);canTransfer=canTransfer.add(realAmout);}else{break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 160
column: 12
content: for(uinti=0;i<presaleInvestors[senderAdr].length;i++){if(presaleInvestors[senderAdr][i].transferredAmount==presaleInvestors[senderAdr][i].buyAmount){continue;}if(presaleInvestors[senderAdr][i].purchaseBlock<=(block.number).sub(startLockUpSec.div(secondsPerBlock).mul(10))){uintmonths=(block.number.sub(presaleInvestors[senderAdr][i].purchaseBlock)).div(secondsPerMonth);if(months>10){months=10;}if((presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount)>=currentTokens){presaleInvestors[senderAdr][i].transferredAmount=presaleInvestors[senderAdr][i].transferredAmount+currentTokens;currentTokens=0;}if((presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount)<currentTokens){uintremainder=currentTokens-(presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth)-presaleInvestors[senderAdr][i].transferredAmount);presaleInvestors[senderAdr][i].transferredAmount=presaleInvestors[senderAdr][i].buyAmount.div(100).mul(months).mul(percentagePerMonth);currentTokens=remainder;}}else{continue;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 508
column: 8
content: for(uinti=0;i<addresses.length;i++){require(addresses[i]!=0x0);balances[addresses[i]]=balances[addresses[i]].add(amounts);emitTransfer(address(this),addresses[i],amounts);mainSaleInvestors[addresses[i]]=mainSaleInvestors[addresses[i]].add(amounts);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 524
column: 8
content: for(uinti=0;i<addresses.length;i++){require(amount[i]>0&&addresses[i]!=0x0);uint256amounts=amount[i].mul(100000000);totalAmount=totalAmount.add(amounts);require(balances[address(this)]>=totalAmount);balances[addresses[i]]=balances[addresses[i]].add(amounts);emitTransfer(address(this),addresses[i],amounts);mainSaleInvestors[addresses[i]]=mainSaleInvestors[addresses[i]].add(amounts);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 546
column: 8
content: for(uinti=0;i<addresses.length;i++){require(amount[i]>0&&addresses[i]!=0x0);uint256amounts=amount[i].mul(100000000);totalAmount=totalAmount.add(amounts);require(balances[address(this)]>=totalAmount);presaleInvestors[addresses[i]].push(Purchase(amounts,0,blocks[i]));balances[addresses[i]]=balances[addresses[i]].add(amounts);emitTransfer(address(this),addresses[i],amounts);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 563
column: 4
content: functionsetDistributeAmount(uint256_unitAmount)onlyOwnerexternal{distributeAmount=_unitAmount;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 567
column: 4
content: functionsetMulBonus(uint256_mulbonus)onlyOwnerexternal{mulbonus=_mulbonus;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 571
column: 4
content: functionsetDivBonus(uint256_divbonus)onlyOwnerexternal{divbonus=_divbonus;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 575
column: 4
content: functionsetNewAgent(address_agent)externalonlyOwner{require(agent!=address(0));agent=_agent;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 183
column: 12
content: if(currentTokens<=mainSaleInvestors[senderAdr]){mainSaleInvestors[senderAdr]=mainSaleInvestors[senderAdr]-currentTokens;currentTokens=0;}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 190
column: 12
content: if(currentTokens<=mainSaleInvestors[senderAdr]){mainSaleInvestors[senderAdr]=mainSaleInvestors[senderAdr]-currentTokens;currentTokens=0;}else{revert();}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 198
column: 8
content: if(currentTokens!=0){revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 116
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 624
column: 23
content: public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 124
column: 2
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 128
column: 2
content: uint256totalSupply_;

SOLIDITY_VISIBILITY :2
SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :4
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :3
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_DIV_MUL :11
SOLIDITY_ERC20_APPROVE :1
