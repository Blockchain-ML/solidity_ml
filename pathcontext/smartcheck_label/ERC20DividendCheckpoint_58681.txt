C:\Users\hp\DataSet\ERC20DividendCheckpoint.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 185
column: 8
content: for(uint256j=0;j<_excluded.length;j++){require(_excluded[j]!=address(0),"Invalid address");require(!dividends[dividendIndex].dividendExcluded[_excluded[j]],"duped exclude address");excludedSupply=excludedSupply.add(securityToken.balanceOfAt(_excluded[j],_checkpointId));dividends[dividendIndex].dividendExcluded[_excluded[j]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 185
column: 8
content: for(uint256j=0;j<_excluded.length;j++){require(_excluded[j]!=address(0),"Invalid address");require(!dividends[dividendIndex].dividendExcluded[_excluded[j]],"duped exclude address");excludedSupply=excludedSupply.add(securityToken.balanceOfAt(_excluded[j],_checkpointId));dividends[dividendIndex].dividendExcluded[_excluded[j]]=true;}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 12
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 233
column: 4
content: function_payDividend(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 233
column: 42
content: _payee,Dividendstorage

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 233
column: 67
content: _dividend,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 233
column: 78
content: uint256_dividendIndex)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 234
column: 8
content: (uint256<missing ')'>claim,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 234
column: 24
content: uint256withheld)=calculateDividend(_dividendIndex,_payee);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 235
column: 8
content: _dividend.claimed[_payee]=true;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 236
column: 8
content: _dividend.claimedAmount=claim.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 236
column: 40
content: add(_dividend.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 236
column: 54
content: claimedAmount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 237
column: 8
content: uint256claimAfterWithheld=claim.sub(withheld);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 238
column: 11
content: (claimAfterWithheld>0){require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 239
column: 19
content: (IERC20<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 239
column: 26
content: (dividendTokens[_dividendIndex]).transfer

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 239
column: 67
content: (_payee,claimAfterWithheld),"transfer failed");

SOLIDITY_VISIBILITY :15
SOLIDITY_SAFEMATH :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
