C:\Users\hp\DataSet\contracts\ropsten\a2\a2768aab99574efa95c4bb33c3717214f15e3d8e_ITCO.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 93
column: 22
content: 0x657Eb3CE439CA61e58FF6Cb106df2e962C5e7890

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 117
column: 4
content: functionapprove(address_spender,uint256_amount)publiconlyFinishedICOreturns(bool){require(!lockstatus,"Token is locked now");require(_spender!=address(0),"Address can not be 0x0");require(balances[msg.sender]>=_amount,"Balance does not have enough tokens");require(!locked[msg.sender],"Sender address is locked");allowed[msg.sender][_spender]=_amount;emitApproval(msg.sender,_spender,_amount);returntrue;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 45
column: 0
content: contractITCOisERC20{usingSafeMathforuint256;stringpublicconstantname="IT01";stringpublicconstantsymbol="IT01";uint8publicconstantdecimals=18;uintpublicmaxCap=2000000000ether;uint256public_totalsupply;uint256publicmintedTokens;addresspublicowner;addresspayablepublicethFundMain;uint256publicicoStartDate=1552536000;uint256publicicoEndDate=1555128000;boolpubliclockstatus=true;boolpublicstopped=false;mapping(address=>uint256)publicbalances;mapping(address=>mapping(address=>uint256))publicallowed;mapping(address=>bool)publiclocked;eventMint(addressindexedfrom,addressindexedto,uint256amount);eventBurn(addressindexedfrom,uint256amount);modifieronlyOwner(){require(msg.sender==owner,"Only owner is allowed");_;}modifieronlyICO(){require(now>=icoStartDate&&now<icoEndDate,"CrowdSale is not running");_;}modifieronlyFinishedICO(){require(now>=icoEndDate,"CrowdSale is running");_;}constructor()public{owner=msg.sender;ethFundMain=0x657Eb3CE439CA61e58FF6Cb106df2e962C5e7890;}functiontotalSupply()publicviewreturns(uint256){return_totalsupply;}functionbalanceOf(address_owner)publicviewreturns(uint256){returnbalances[_owner];}functiontransferFrom(address_from,address_to,uint256_amount)publiconlyFinishedICOreturns(bool){require(_to!=address(0),"Receiver can not be 0x0");require(!lockstatus,"Token is locked now");require(balances[_from]>=_amount,"Source&#39;s balance is not enough");require(allowed[_from][msg.sender]>=_amount,"Allowance is not enough");require(!locked[_from],"From address is locked");balances[_from]=(balances[_from]).sub(_amount);allowed[_from][msg.sender]=(allowed[_from][msg.sender]).sub(_amount);balances[_to]=(balances[_to]).add(_amount);emitTransfer(_from,_to,_amount);returntrue;}functionapprove(address_spender,uint256_amount)publiconlyFinishedICOreturns(bool){require(!lockstatus,"Token is locked now");require(_spender!=address(0),"Address can not be 0x0");require(balances[msg.sender]>=_amount,"Balance does not have enough tokens");require(!locked[msg.sender],"Sender address is locked");allowed[msg.sender][_spender]=_amount;emitApproval(msg.sender,_spender,_amount);returntrue;}functionallowance(address_owner,address_spender)publicviewreturns(uint256){returnallowed[_owner][_spender];}functiontransfer(address_to,uint256_amount)publiconlyFinishedICOreturns(bool){require(!lockstatus,"Token is locked now");require(_to!=address(0),"Receiver can not be 0x0");require(balances[msg.sender]>=_amount,"Balance does not have enough tokens");require(!locked[msg.sender],"Sender address is locked");balances[msg.sender]=(balances[msg.sender]).sub(_amount);balances[_to]=(balances[_to]).add(_amount);emitTransfer(msg.sender,_to,_amount);returntrue;}functionburn(uint256value)publiconlyOwnerreturns(bool){uint256_value=value*10**18;require(balances[msg.sender]>=_value,"Balance does not have enough tokens");balances[msg.sender]=(balances[msg.sender]).sub(_value);_totalsupply=_totalsupply.sub(_value);emitBurn(msg.sender,_value);returntrue;}functionstopTransferToken()externalonlyOwneronlyFinishedICO{require(!lockstatus,"Token is locked");lockstatus=true;}functionstartTransferToken()externalonlyOwneronlyFinishedICO{require(lockstatus,"Token is transferable");lockstatus=false;}function()externalpayableonlyICO{require(!stopped,"CrowdSale is stopping");}functionmanualMint(addressreceiver,uint256_value)publiconlyOwner{uint256value=_value.mul(10**18);mint(owner,receiver,value);}functionmint(addressfrom,addressreceiver,uint256value)internal{require(receiver!=address(0),"Address can not be 0x0");require(value>0,"Value should larger than 0");balances[receiver]=balances[receiver].add(value);_totalsupply=_totalsupply.add(value);mintedTokens=mintedTokens.add(value);require(_totalsupply<=maxCap,"CrowdSale hit max cap");emitMint(from,receiver,value);emitTransfer(address(0),receiver,value);}functionhaltCrowdSale()externalonlyOwneronlyICO{require(!stopped,"CrowdSale is stopping");stopped=true;}functionresumeCrowdSale()externalonlyOwneronlyICO{require(stopped,"CrowdSale is running");stopped=false;}functionchangeReceiveWallet(addresspayablenewAddress)externalonlyOwner{require(newAddress!=address(0),"Address can not be 0x0");ethFundMain=newAddress;}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 46
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 191
column: 4
content: functionchangeReceiveWallet(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 192
column: 8
content: require(newAddress!=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 192
column: 30
content: address

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 192
column: 37
content: (0),"Address can not be 0x0");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 193
column: 8
content: ethFundMain=newAddress;

SOLIDITY_VISIBILITY :5
SOLIDITY_SAFEMATH :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_ERC20_APPROVE :1
