C:\Users\hp\DataSet\contracts\ropsten\a0\a03f6a583c307fd4b6fde70fbbcd3a2b493df990_DragonKing.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 86
column: 4
content: owner=address(0)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 142
column: 29
content: costs[i]/100*fee

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 253
column: 29
content: costs[i]/100*fee

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 838
column: 16
content: totalAmount/100*85

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 840
column: 16
content: totalAmount/100*95

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 140
column: 4
content: for(uint8i=0;i<charactersCosts.length;i++){costs.push(uint128(charactersCosts[i])*1finney);values.push(costs[i]-costs[i]/100*fee);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 227
column: 4
content: for(uint256i=0;i<purchaseRequirements[characterType].tokens.length;i++){if(ERC20(purchaseRequirements[characterType].tokens[i]).balanceOf(buyer)<purchaseRequirements[characterType].amounts[i]){returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 251
column: 4
content: for(uint8i=0;i<prices.length;i++){costs[i]=uint128(prices[i])*1finney;values[i]=costs[i]-costs[i]/100*fee;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 819
column: 4
content: for(uint16i=0;i<numCharacters;i++){if(ids[i]<newOldest&&characters[ids[i]].characterType<=DRAGON_MAX_TYPE)newOldest=ids[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 857
column: 4
content: for(uint16i=0;i<numCharacters;i++){cType=characters[ids[i]].characterType;if(cType<BALLOON_MIN_TYPE||cType>BALLOON_MAX_TYPE)characters[ids[i]].value+=shares[characters[ids[i]].characterType];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 893
column: 4
content: for(uint16i=0;i<numCharacters;i++){characters[ids[i]].owner.transfer(characters[ids[i]].value);deletecharacters[ids[i]];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 941
column: 4
content: for(uinti=0;i<numCharacters;i++){cType=characters[ids[i]].characterType;if((cType>=ARCHER_MIN_TYPE&&cType<=ARCHER_MAX_TYPE)&&(characters[ids[i]].fightCount>=3)&&(now-characters[ids[i]].purchaseTimestamp>=7days)){valueSum+=config.values(cType);archers[archersCount]=ids[i];archersCount++;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 953
column: 6
content: for(uint8j=0;j<NUMBER_OF_LEVELS;j++){shares[j]=amount*config.values(ARCHER_MIN_TYPE+j)/valueSum;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1094
column: 4
content: for(uint16i=0;i<ids.length;i++){if(ids[i]==characterId){returni;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1127
column: 4
content: for(uint8i=DRAGON_MIN_TYPE;i<=DRAGON_MAX_TYPE;i++)numDragons+=numCharactersXType[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1136
column: 4
content: for(uint8i=WIZARD_MIN_TYPE;i<=WIZARD_MAX_TYPE;i++)numWizards+=numCharactersXType[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1144
column: 4
content: for(uint8i=ARCHER_MIN_TYPE;i<=ARCHER_MAX_TYPE;i++)numArchers+=numCharactersXType[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1153
column: 4
content: for(uint8i=KNIGHT_MIN_TYPE;i<=KNIGHT_MAX_TYPE;i++)numKnights+=numCharactersXType[i];

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1162
column: 4
content: for(uint16j=0;j<numCharacters;j++)reserved+=characters[ids[j]].value;

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 547
column: 8
content: while(nchars>0&&characters[ids[nchars-1]].owner==msg.sender&&characters[ids[nchars-1]].purchaseTimestamp+1days<now&&(characters[ids[i]].characterType<BALLOON_MIN_TYPE||characters[ids[i]].characterType>BALLOON_MAX_TYPE)){nchars--;lastId=ids[nchars];numCharactersXType[characters[lastId].characterType]--;playerBalance+=characters[lastId].value;removed[count]=lastId;count++;if(lastId==oldest)oldest=0;deletecharacters[lastId];}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1126
column: 2
content: functiongetNumDragons()viewpublicreturns(uint16numDragons){for(uint8i=DRAGON_MIN_TYPE;i<=DRAGON_MAX_TYPE;i++)numDragons+=numCharactersXType[i];}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1135
column: 2
content: functiongetNumWizards()viewpublicreturns(uint16numWizards){for(uint8i=WIZARD_MIN_TYPE;i<=WIZARD_MAX_TYPE;i++)numWizards+=numCharactersXType[i];}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1143
column: 2
content: functiongetNumArchers()viewpublicreturns(uint16numArchers){for(uint8i=ARCHER_MIN_TYPE;i<=ARCHER_MAX_TYPE;i++)numArchers+=numCharactersXType[i];}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1152
column: 2
content: functiongetNumKnights()viewpublicreturns(uint16numKnights){for(uint8i=KNIGHT_MIN_TYPE;i<=KNIGHT_MAX_TYPE;i++)numKnights+=numCharactersXType[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 140
column: 4
content: for(uint8i=0;i<charactersCosts.length;i++){costs.push(uint128(charactersCosts[i])*1finney);values.push(costs[i]-costs[i]/100*fee);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 227
column: 4
content: for(uint256i=0;i<purchaseRequirements[characterType].tokens.length;i++){if(ERC20(purchaseRequirements[characterType].tokens[i]).balanceOf(buyer)<purchaseRequirements[characterType].amounts[i]){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 251
column: 4
content: for(uint8i=0;i<prices.length;i++){costs[i]=uint128(prices[i])*1finney;values[i]=costs[i]-costs[i]/100*fee;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1094
column: 4
content: for(uint16i=0;i<ids.length;i++){if(ids[i]==characterId){returni;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 547
column: 15
content: nchars>0&&characters[ids[nchars-1]].owner==msg.sender&&characters[ids[nchars-1]].purchaseTimestamp+1days<now&&(characters[ids[i]].characterType<BALLOON_MIN_TYPE||characters[ids[i]].characterType>BALLOON_MAX_TYPE)

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 615
column: 11
content: i<howmany

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 250
column: 2
content: functionsetPrices(uint16[]prices)externalonlyOwner{for(uint8i=0;i<prices.length;i++){costs[i]=uint128(prices[i])*1finney;values[i]=costs[i]-costs[i]/100*fee;}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 261
column: 2
content: functionsetEruptionThreshold(uint256_value)externalonlyOwner{eruptionThreshold=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 269
column: 2
content: functionsetCastleLootDistributionThreshold(uint256_value)externalonlyOwner{castleLootDistributionThreshold=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 277
column: 2
content: functionsetFee(uint8_value)externalonlyOwner{fee=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 285
column: 2
content: functionsetPercentageToKill(uint8_value)externalonlyOwner{percentageToKill=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 293
column: 2
content: functionsetMaxCharacters(uint16_value)externalonlyOwner{maxCharacters=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 301
column: 2
content: functionsetFightFactor(uint8_value)externalonlyOwner{fightFactor=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 309
column: 2
content: functionsetTeleportPrice(uint256_value)externalonlyOwner{teleportPrice=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 317
column: 2
content: functionsetProtectionPrice(uint256_value)externalonlyOwner{protectionPrice=_value;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 325
column: 2
content: functionsetLuckThreshold(uint256_value)externalonlyOwner{luckThreshold=_value;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 19
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 494
column: 4
content: if(characterType>=INVALID_CHARACTER_TYPE||msg.value<config.costs(characterType)||nchars+amount>config.maxCharacters())revert();

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1175
column: 2
content: functiontoUint32(bytesb)internalpurereturns(uint32){bytes32newB;assembly{newB:=mload(0xa0)}returnuint32(newB);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1183
column: 2
content: functionsecondToUint32(bytesb)internalpurereturns(uint32){bytes32newB;assembly{newB:=mload(0xc0)}returnuint32(newB);}

ruleId: SOLIDITY_TRANSFER_IN_LOOP
patternId: 8jdj43
severity: 2
line: 893
column: 4
content: for(uint16i=0;i<numCharacters;i++){characters[ids[i]].owner.transfer(characters[ids[i]].value);deletecharacters[ids[i]];}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 789
column: 16
content: keccak256(block.blockhash(block.number-1),now,numCharacters,nonce)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 138
column: 102
content: uint128[]charactersCosts

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 138
column: 129
content: address[]tokens

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 996
column: 81
content: bytescallData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1175
column: 20
content: bytesb

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1183
column: 26
content: bytesb

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1197
column: 42
content: uint16[]costs

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1207
column: 49
content: uint16[]costs

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1177
column: 4
content: assembly{newB:=mload(0xa0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1185
column: 4
content: assembly{newB:=mload(0xc0)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 333
column: 2
content: functionsetGiftTokenAmount(uint256_value){giftTokenAmount=_value;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 341
column: 2
content: functionsetGiftToken(address_value){giftToken=ERC20(_value);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 745
column: 2
content: functionisValidAdversary(uint8characterType,uint8adversaryType)purereturns(bool){if(characterType>=KNIGHT_MIN_TYPE&&characterType<=KNIGHT_MAX_TYPE){return(adversaryType<=DRAGON_MAX_TYPE);}elseif(characterType>=WIZARD_MIN_TYPE&&characterType<=WIZARD_MAX_TYPE){return(adversaryType<BALLOON_MIN_TYPE||adversaryType>BALLOON_MAX_TYPE);}elseif(characterType>=DRAGON_MIN_TYPE&&characterType<=DRAGON_MAX_TYPE){return(adversaryType>=WIZARD_MIN_TYPE);}elseif(characterType>=ARCHER_MIN_TYPE&&characterType<=ARCHER_MAX_TYPE){return((adversaryType>=BALLOON_MIN_TYPE&&adversaryType<=BALLOON_MAX_TYPE)||(adversaryType>=KNIGHT_MIN_TYPE&&adversaryType<=KNIGHT_MAX_TYPE));}returnfalse;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 199
column: 2
content: PurchaseRequirement[30]purchaseRequirements;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 205
column: 2
content: uint8fee;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 370
column: 2
content: ERC20neverdieToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 2
content: ERC20teleportToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 374
column: 2
content: ERC20luckToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 376
column: 2
content: ERC20sklToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 378
column: 2
content: ERC20xperToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 393
column: 2
content: mapping(uint32=>Character)characters;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 395
column: 2
content: mapping(uint32=>bool)teleported;

SOLIDITY_VISIBILITY :12
SOLIDITY_OVERPOWERED_ROLE :10
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :15
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :8
SOLIDITY_GAS_LIMIT_IN_LOOPS :6
SOLIDITY_DIV_MUL :4
SOLIDITY_SHOULD_NOT_BE_PURE :2
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_TRANSFER_IN_LOOP :1
