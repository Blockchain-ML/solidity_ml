C:\Users\hp\DataSet\contracts\ropsten\7a\7a469bda3bbeb0922bda447d02e484ef638e7b2f_Creator.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 9
column: 0
content: contractCore{addresspayableowner;constructor()public{owner=msg.sender;}modifieronlyOwner(){require(msg.sender==owner);_;}functionsetOwner(addresspayablenewOwner)publiconlyOwnerreturns(bool){require(newOwner!=<missing ';'>address(0)&&address(this)!=newOwner);owner=newOwner;returntrue;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 61
column: 0
content: contractForkisCore{constructor(addresspayable_owner)public{owner=_owner;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 67
column: 0
content: contractForkableisCore{address[]publicAddresses;mapping(address=>bool)forks;function()externalpayable{}functionfork()publiconlyOwnerreturns(address){addressn=address(newFork(address(this)));Addresses.push(n);forks[n]=true;returnn;}functionsetMain(addresspayablenewMain,uint8forkCounts)publiconlyOwnerreturns(bool){require(newMain!=<missing ';'>address(0));require(forkCounts>0&&forkCounts<=Addresses.length);require(!forks[newMain]);uint8i=forkCounts-1;while(i>0){if<missing ';'>(!Core<missing ';'>(Addresses[i]).setOwner(newMain)){revert();}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 109
column: 0
content: contractMainisForkable{constructor(addresspayable_owner)public{owner=_owner;Addresses.push(address<missing ';'>(this));}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 116
column: 0
content: contractCreatorisForkable{constructor()public{owner=msg.sender;Addresses.push(address(this));}function()externalpayable{}functioncreateMain()publicreturns(address){returnaddress(newMain(msg.sender));}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 18
column: 4
content: functionsetOwner(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 62
column: 4
content: constructor(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 77
column: 4
content: functionsetMain(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 110
column: 4
content: constructor(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 10
column: 4
content: addresspayableowner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 18
column: 72
content: (bool){require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 19
column: 15
content: (newOwner!=<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 19
column: 28
content: address

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 19
column: 35
content: (0)&&

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 19
column: 42
content: address(this)!=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 19
column: 59
content: newOwner);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 20
column: 8
content: owner=newOwner;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 69
column: 4
content: mapping(address=>bool)forks;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 77
column: 37
content: newMain,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 77
column: 46
content: uint8forkCounts)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 77
column: 71
content: onlyOwnerreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 77
column: 88
content: (bool){require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 78
column: 15
content: (newMain!=<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 78
column: 27
content: address

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 78
column: 34
content: (0));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 79
column: 8
content: require(forkCounts>0&&

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 79
column: 34
content: forkCounts<=Addresses.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 79
column: 58
content: length);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 80
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 80
column: 15
content: (!forks[newMain]);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 81
column: 8
content: uint8i=forkCounts-1;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 82
column: 14
content: (i>0){if<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 83
column: 15
content: (!Core<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 83
column: 21
content: (Addresses[i]).setOwner

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 83
column: 44
content: (newMain)){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 84
column: 16
content: revert

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 84
column: 22
content: ();

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 112
column: 8
content: Addresses.push

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 112
column: 22
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 112
column: 30
content: (this));

SOLIDITY_VISIBILITY :35
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :5
