C:\Users\hp\DataSet\contracts\ropsten\41\41bdf046360f55b0f257ea5edd4c3cf901463e43_HenaCoin.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 283
column: 12
content: lockInfo.lockTime.length--

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 285
column: 12
content: lockInfo.lockPercent.length--

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 334
column: 19
content: lockUser[_owner].lockBalanceStandard.div(100).mul(percent)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 163
column: 4
content: functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){require(_value>0);user[msg.sender].allowed[_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 252
column: 8
content: for(uinti=0;i<lockInfo.lockTime.length;i++){if(lockInfo.lockTime[i]==_second){isExists=true;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 269
column: 8
content: for(uinti=0;i<lockInfo.lockTime.length;i++){if(lockInfo.lockTime[i]==_second){isExists=true;index=i;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 278
column: 12
content: for(uintk=index;k<lockInfo.lockTime.length-1;k++){lockInfo.lockTime[k]=lockInfo.lockTime[k+1];lockInfo.lockPercent[k]=lockInfo.lockPercent[k+1];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 320
column: 16
content: for(uinti=0;i<lockInfo.lockTime.length;i++){if(remain>lockInfo.lockTime[i]){if(percent<lockInfo.lockPercent[i]){percent=lockInfo.lockPercent[i];break;}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 387
column: 8
content: for(uinti=0;i<_to.length;i++){setLockUser(_to[i],_type,balanceOf(_to[i]));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 401
column: 8
content: for(uinti=0;i<specialUser.length;i++){if(specialUser[i]==_to){isContain=true;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 252
column: 8
content: for(uinti=0;i<lockInfo.lockTime.length;i++){if(lockInfo.lockTime[i]==_second){isExists=true;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 269
column: 8
content: for(uinti=0;i<lockInfo.lockTime.length;i++){if(lockInfo.lockTime[i]==_second){isExists=true;index=i;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 320
column: 16
content: for(uinti=0;i<lockInfo.lockTime.length;i++){if(remain>lockInfo.lockTime[i]){if(percent<lockInfo.lockPercent[i]){percent=lockInfo.lockPercent[i];break;}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 387
column: 8
content: for(uinti=0;i<_to.length;i++){setLockUser(_to[i],_type,balanceOf(_to[i]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 401
column: 8
content: for(uinti=0;i<specialUser.length;i++){if(specialUser[i]==_to){isContain=true;break;}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 92
column: 0
content: contractTokenisERC20,Ownable,Pausable{structsUserInfo{uint256balance;boollock;mapping(address=>uint256)allowed;}usingSafeMathforuint256;stringpublicname;stringpublicsymbol;uint8publicdecimals;uint256publictotalSupply;mapping(address=>sUserInfo)publicuser;constructor()public{name="TOKEN";symbol="TK";decimals=18;uint256initialSupply=10000;totalSupply=initialSupply*10**uint(decimals);user[owner].balance=totalSupply;emitTransfer(address(0),owner,totalSupply);}function()publicpayable{revert();}functionbalanceOf(address_owner)publicviewreturns(uint256balance){returnuser[_owner].balance;}functionlockState(address_owner)publicviewreturns(bool){returnuser[_owner].lock;}functionallowance(address_owner,address_spender)publicviewreturns(uint256){returnuser[_owner].allowed[_spender];}functionlock(address_owner)publiconlyOwnerreturns(bool){require(user[_owner].lock==false);user[_owner].lock=true;returntrue;}functionunlock(address_owner)publiconlyOwnerreturns(bool){require(user[_owner].lock==true);user[_owner].lock=false;returntrue;}functionmint(uint256_amount)onlyOwnerpublicreturns(bool){totalSupply=totalSupply.add(_amount);user[owner].balance=user[owner].balance.add(_amount);emitMint(_amount);returntrue;}functionburn(address_to,uint256_value)publiconlyOwnerreturns(bool){require(_value<=user[_to].balance);user[_to].balance=user[_to].balance.sub(_value);totalSupply=totalSupply.sub(_value);emitBurn(_value);returntrue;}functionapprove(address_spender,uint256_value)publicwhenNotPausedreturns(bool){require(_value>0);user[msg.sender].allowed[_spender]=_value;emitApproval(msg.sender,_spender,_value);returntrue;}functionvalidTransfer(address_from,address_to,uint256_value,bool_lockCheck)internal{require(_from!=address(0));require(_to!=address(0));require(user[_from].balance>=_value);if(_lockCheck){require(user[_from].lock==false);}}functiontransfer(address_to,uint256_value)publicwhenNotPausedreturns(bool){validTransfer(msg.sender,_to,_value,true);user[msg.sender].balance=user[msg.sender].balance.sub(_value);user[_to].balance=user[_to].balance.add(_value);emitTransfer(msg.sender,_to,_value);returntrue;}functiontransferFrom(address_from,address_to,uint256_value)publicwhenNotPausedreturns(bool){validTransfer(_from,_to,_value,true);require(_value<=user[_from].allowed[msg.sender]);user[_from].balance=user[_from].balance.sub(_value);user[_to].balance=user[_to].balance.add(_value);user[_from].allowed[msg.sender]=user[_from].allowed[msg.sender].sub(_value);emitTransfer(_from,_to,_value);returntrue;}functiondistribute(address_to,uint256_value)publiconlyOwnerreturns(bool){validTransfer(owner,_to,_value,false);user[owner].balance=user[owner].balance.sub(_value);user[_to].balance=user[_to].balance.add(_value);emitTransfer(owner,_to,_value);returntrue;}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 290
column: 4
content: functionsetGoalTime(eLockType_type,uint256_timeStamp)onlyOwnerpublic{lockDate[uint(_type)].goalTime=_timeStamp;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 295
column: 4
content: functionsetLockUser(address_to,eLockType_lockType,uint256_value)onlyOwnerpublic{lockUser[_to].lockType=_lockType;lockUser[_to].lockBalanceStandard=_value;setLockBalance(_to);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 378
column: 4
content: functionsetInterRefreshLock(bool_lock)onlyOwnerpublic{internalRefreshLock=_lock;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 382
column: 4
content: functionsetRefreshLockBalance(address_owner)onlyOwnerpublic{setLockBalance(_owner);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 386
column: 4
content: functionsetLockUser(eLockType_type,address[]_to)onlyOwnerpublic{for(uinti=0;i<_to.length;i++){setLockUser(_to[i],_type,balanceOf(_to[i]));}emitLockUser(_type,_to);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REDUNDANT_FALLBACK_REJECT
patternId: b85a32
severity: 1
line: 119
column: 31
content: {revert();}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 100
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 228
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 119
column: 16
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 338
column: 73
content: uint256[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 338
column: 84
content: uint8[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 386
column: 42
content: address[]_to

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 417
column: 49
content: address[]

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 230
column: 4
content: mapping(uint=>sLockDate)lockDate;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 231
column: 4
content: mapping(address=>sLockInfo)lockUser;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 350
column: 4
content: address[]specialUser;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 352
column: 4
content: boolinternalRefreshLock=false;

SOLIDITY_VISIBILITY :4
SOLIDITY_SAFEMATH :2
SOLIDITY_OVERPOWERED_ROLE :5
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :6
SOLIDITY_UPGRADE_TO_050 :5
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_DIV_MUL :1
SOLIDITY_REDUNDANT_FALLBACK_REJECT :1
SOLIDITY_ERC20_APPROVE :1
