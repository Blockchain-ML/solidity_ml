C:\Users\hp\DataSet\contracts\mainnet\6c\6c5e18b3f0c243fc345095960fdb0e7aa61cd02b_WyvernExchange.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 132
column: 36
content: 0x20

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 133
column: 29
content: 0x20

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 134
column: 23
content: 0x20

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 149
column: 31
content: 0x20

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 159
column: 39
content: 0xff

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 262
column: 36
content: 0x60

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 544
column: 17
content: 0x14

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 544
column: 30
content: 0x20

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1096
column: 37
content: 0x14

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 87
column: 4
content: owner=address(0)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 158
column: 12
content: for(i=index;i<array.length;i++){array[i]=((mask[i]^0xff)&array[i])|(mask[i]&desired[i]);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1051
column: 0
content: contractExchangeisExchangeCore{functionguardedArrayReplace(bytesarray,bytesdesired,bytesmask)publicpurereturns(bytes){ArrayUtils.guardedArrayReplace(array,desired,mask);returnarray;}functiontestCopy(bytesarrToCopy)publicpurereturns(bytes){bytesmemoryarr=newbytes(arrToCopy.length);uintindex;assembly{index:=add(arr,0x20)}ArrayUtils.unsafeWriteBytes(index,arrToCopy);returnarr;}functiontestCopyAddress(addressaddr)publicpurereturns(bytes){bytesmemoryarr=newbytes(0x14);uintindex;assembly{index:=add(arr,0x20)}ArrayUtils.unsafeWriteAddress(index,addr);returnarr;}functioncalculateFinalPrice(SaleKindInterface.Sideside,SaleKindInterface.SaleKindsaleKind,uintbasePrice,uintextra,uintlistingTime,uintexpirationTime)publicviewreturns(uint){returnSaleKindInterface.calculateFinalPrice(side,saleKind,basePrice,extra,listingTime,expirationTime);}functionhashOrder_(address[7]addrs,uint[9]uints,FeeMethodfeeMethod,SaleKindInterface.Sideside,SaleKindInterface.SaleKindsaleKind,AuthenticatedProxy.HowToCallhowToCall,bytescalldata,bytesreplacementPattern,bytesstaticExtradata)publicpurereturns(bytes32){returnhashOrder(Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],feeMethod,side,saleKind,addrs[4],howToCall,calldata,replacementPattern,addrs[5],staticExtradata,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]));}functionhashToSign_(address[7]addrs,uint[9]uints,FeeMethodfeeMethod,SaleKindInterface.Sideside,SaleKindInterface.SaleKindsaleKind,AuthenticatedProxy.HowToCallhowToCall,bytescalldata,bytesreplacementPattern,bytesstaticExtradata)publicpurereturns(bytes32){returnhashToSign(Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],feeMethod,side,saleKind,addrs[4],howToCall,calldata,replacementPattern,addrs[5],staticExtradata,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]));}functionvalidateOrderParameters_(address[7]addrs,uint[9]uints,FeeMethodfeeMethod,SaleKindInterface.Sideside,SaleKindInterface.SaleKindsaleKind,AuthenticatedProxy.HowToCallhowToCall,bytescalldata,bytesreplacementPattern,bytesstaticExtradata)viewpublicreturns(bool){Ordermemoryorder=Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],feeMethod,side,saleKind,addrs[4],howToCall,calldata,replacementPattern,addrs[5],staticExtradata,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]);returnvalidateOrderParameters(order);}functionvalidateOrder_(address[7]addrs,uint[9]uints,FeeMethodfeeMethod,SaleKindInterface.Sideside,SaleKindInterface.SaleKindsaleKind,AuthenticatedProxy.HowToCallhowToCall,bytescalldata,bytesreplacementPattern,bytesstaticExtradata,uint8v,bytes32r,bytes32s)viewpublicreturns(bool){Ordermemoryorder=Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],feeMethod,side,saleKind,addrs[4],howToCall,calldata,replacementPattern,addrs[5],staticExtradata,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]);returnvalidateOrder(hashToSign(order),order,Sig(v,r,s));}functionapproveOrder_(address[7]addrs,uint[9]uints,FeeMethodfeeMethod,SaleKindInterface.Sideside,SaleKindInterface.SaleKindsaleKind,AuthenticatedProxy.HowToCallhowToCall,bytescalldata,bytesreplacementPattern,bytesstaticExtradata,boolorderbookInclusionDesired)public{Ordermemoryorder=Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],feeMethod,side,saleKind,addrs[4],howToCall,calldata,replacementPattern,addrs[5],staticExtradata,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]);returnapproveOrder(order,orderbookInclusionDesired);}functioncancelOrder_(address[7]addrs,uint[9]uints,FeeMethodfeeMethod,SaleKindInterface.Sideside,SaleKindInterface.SaleKindsaleKind,AuthenticatedProxy.HowToCallhowToCall,bytescalldata,bytesreplacementPattern,bytesstaticExtradata,uint8v,bytes32r,bytes32s)public{returncancelOrder(Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],feeMethod,side,saleKind,addrs[4],howToCall,calldata,replacementPattern,addrs[5],staticExtradata,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]),Sig(v,r,s));}functioncalculateCurrentPrice_(address[7]addrs,uint[9]uints,FeeMethodfeeMethod,SaleKindInterface.Sideside,SaleKindInterface.SaleKindsaleKind,AuthenticatedProxy.HowToCallhowToCall,bytescalldata,bytesreplacementPattern,bytesstaticExtradata)publicviewreturns(uint){returncalculateCurrentPrice(Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],feeMethod,side,saleKind,addrs[4],howToCall,calldata,replacementPattern,addrs[5],staticExtradata,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]));}functionordersCanMatch_(address[14]addrs,uint[18]uints,uint8[8]feeMethodsSidesKindsHowToCalls,bytescalldataBuy,bytescalldataSell,bytesreplacementPatternBuy,bytesreplacementPatternSell,bytesstaticExtradataBuy,bytesstaticExtradataSell)publicviewreturns(bool){Ordermemorybuy=Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],FeeMethod(feeMethodsSidesKindsHowToCalls[0]),SaleKindInterface.Side(feeMethodsSidesKindsHowToCalls[1]),SaleKindInterface.SaleKind(feeMethodsSidesKindsHowToCalls[2]),addrs[4],AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[3]),calldataBuy,replacementPatternBuy,addrs[5],staticExtradataBuy,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]);Ordermemorysell=Order(addrs[7],addrs[8],addrs[9],uints[9],uints[10],uints[11],uints[12],addrs[10],FeeMethod(feeMethodsSidesKindsHowToCalls[4]),SaleKindInterface.Side(feeMethodsSidesKindsHowToCalls[5]),SaleKindInterface.SaleKind(feeMethodsSidesKindsHowToCalls[6]),addrs[11],AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[7]),calldataSell,replacementPatternSell,addrs[12],staticExtradataSell,ERC20(addrs[13]),uints[13],uints[14],uints[15],uints[16],uints[17]);returnordersCanMatch(buy,sell);}functionorderCalldataCanMatch(bytesbuyCalldata,bytesbuyReplacementPattern,bytessellCalldata,bytessellReplacementPattern)publicpurereturns(bool){if(buyReplacementPattern.length>0){ArrayUtils.guardedArrayReplace(buyCalldata,sellCalldata,buyReplacementPattern);}if(sellReplacementPattern.length>0){ArrayUtils.guardedArrayReplace(sellCalldata,buyCalldata,sellReplacementPattern);}returnArrayUtils.arrayEq(buyCalldata,sellCalldata);}functioncalculateMatchPrice_(address[14]addrs,uint[18]uints,uint8[8]feeMethodsSidesKindsHowToCalls,bytescalldataBuy,bytescalldataSell,bytesreplacementPatternBuy,bytesreplacementPatternSell,bytesstaticExtradataBuy,bytesstaticExtradataSell)publicviewreturns(uint){Ordermemorybuy=Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],FeeMethod(feeMethodsSidesKindsHowToCalls[0]),SaleKindInterface.Side(feeMethodsSidesKindsHowToCalls[1]),SaleKindInterface.SaleKind(feeMethodsSidesKindsHowToCalls[2]),addrs[4],AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[3]),calldataBuy,replacementPatternBuy,addrs[5],staticExtradataBuy,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]);Ordermemorysell=Order(addrs[7],addrs[8],addrs[9],uints[9],uints[10],uints[11],uints[12],addrs[10],FeeMethod(feeMethodsSidesKindsHowToCalls[4]),SaleKindInterface.Side(feeMethodsSidesKindsHowToCalls[5]),SaleKindInterface.SaleKind(feeMethodsSidesKindsHowToCalls[6]),addrs[11],AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[7]),calldataSell,replacementPatternSell,addrs[12],staticExtradataSell,ERC20(addrs[13]),uints[13],uints[14],uints[15],uints[16],uints[17]);returncalculateMatchPrice(buy,sell);}functionatomicMatch_(address[14]addrs,uint[18]uints,uint8[8]feeMethodsSidesKindsHowToCalls,bytescalldataBuy,bytescalldataSell,bytesreplacementPatternBuy,bytesreplacementPatternSell,bytesstaticExtradataBuy,bytesstaticExtradataSell,uint8[2]vs,bytes32[5]rssMetadata)publicpayable{returnatomicMatch(Order(addrs[0],addrs[1],addrs[2],uints[0],uints[1],uints[2],uints[3],addrs[3],FeeMethod(feeMethodsSidesKindsHowToCalls[0]),SaleKindInterface.Side(feeMethodsSidesKindsHowToCalls[1]),SaleKindInterface.SaleKind(feeMethodsSidesKindsHowToCalls[2]),addrs[4],AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[3]),calldataBuy,replacementPatternBuy,addrs[5],staticExtradataBuy,ERC20(addrs[6]),uints[4],uints[5],uints[6],uints[7],uints[8]),Sig(vs[0],rssMetadata[0],rssMetadata[1]),Order(addrs[7],addrs[8],addrs[9],uints[9],uints[10],uints[11],uints[12],addrs[10],FeeMethod(feeMethodsSidesKindsHowToCalls[4]),SaleKindInterface.Side(feeMethodsSidesKindsHowToCalls[5]),SaleKindInterface.SaleKind(feeMethodsSidesKindsHowToCalls[6]),addrs[11],AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[7]),calldataSell,replacementPatternSell,addrs[12],staticExtradataSell,ERC20(addrs[13]),uints[13],uints[14],uints[15],uints[16],uints[17]),Sig(vs[1],rssMetadata[2],rssMetadata[3]),rssMetadata[4]);}}

ruleId: SOLIDITY_MSGVALUE_EQUALS_ZERO
patternId: 1df89a
severity: 1
line: 791
column: 20
content: msg.value==0

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1511
column: 4
content: functionsetRevoke(boolrevoke)public{require(msg.sender==user);revoked=revoke;emitRevoked(revoke);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 316
column: 8
content: if(reentrancyLock){revert();}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 125
column: 4
content: functionguardedArrayReplace(bytesmemoryarray,bytesmemorydesired,bytesmemorymask)internalpure{require(array.length==desired.length);require(array.length==mask.length);uintwords=array.length/0x20;uintindex=words*0x20;assert(index/0x20==words);uinti;for(i=0;i<words;i++){assembly{letcommonIndex:=mul(0x20,add(1,i))letmaskValue:=mload(add(mask,commonIndex))mstore(add(array,commonIndex),or(and(not(maskValue),mload(add(array,commonIndex))),and(maskValue,mload(add(mask,commonIndex)))))}}if(words>0){i=array.length-0x20;assembly{letcommonIndex:=mul(0x20,add(1,i))letmaskValue:=mload(add(mask,commonIndex))mstore(add(array,commonIndex),or(and(not(maskValue),mload(add(array,commonIndex))),and(maskValue,mload(add(mask,commonIndex)))))}}else{for(i=index;i<array.length;i++){array[i]=((mask[i]^0xff)&array[i])|(mask[i]&desired[i]);}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 173
column: 4
content: functionarrayEq(bytesmemorya,bytesmemoryb)internalpurereturns(bool){boolsuccess=true;assembly{letlength:=mload(a)switcheq(length,mload(b))case1{letcb:=1letmc:=add(a,0x20)letend:=add(mc,length)for{letcc:=add(b,0x20)}eq(add(lt(mc,end),cb),2){mc:=add(mc,0x20)cc:=add(cc,0x20)}{ifiszero(eq(mload(mc),mload(cc))){success:=0cb:=0}}}default{success:=0}}returnsuccess;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 227
column: 4
content: functionunsafeWriteBytes(uintindex,bytessource)internalpurereturns(uint){if(source.length>0){assembly{letlength:=mload(source)letend:=add(source,add(0x20,length))letarrIndex:=add(source,0x20)lettempIndex:=indexfor{}eq(lt(arrIndex,end),1){arrIndex:=add(arrIndex,0x20)tempIndex:=add(tempIndex,0x20)}{mstore(tempIndex,mload(arrIndex))}index:=add(index,length)}}returnindex;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 257
column: 4
content: functionunsafeWriteAddress(uintindex,addresssource)internalpurereturns(uint){uintconv=uint(source)<<0x60;assembly{mstore(index,conv)index:=add(index,0x14)}returnindex;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 277
column: 4
content: functionunsafeWriteUint(uintindex,uintsource)internalpurereturns(uint){assembly{mstore(index,source)index:=add(index,0x20)}returnindex;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 296
column: 4
content: functionunsafeWriteUint8(uintindex,uint8source)internalpurereturns(uint){assembly{mstore8(index,source)index:=add(index,0x1)}returnindex;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 552
column: 4
content: functionhashOrder(Ordermemoryorder)internalpurereturns(bytes32hash){uintsize=sizeOf(order);bytesmemoryarray=newbytes(size);uintindex;assembly{index:=add(array,0x20)}index=ArrayUtils.unsafeWriteAddress(index,order.exchange);index=ArrayUtils.unsafeWriteAddress(index,order.maker);index=ArrayUtils.unsafeWriteAddress(index,order.taker);index=ArrayUtils.unsafeWriteUint(index,order.makerRelayerFee);index=ArrayUtils.unsafeWriteUint(index,order.takerRelayerFee);index=ArrayUtils.unsafeWriteUint(index,order.makerProtocolFee);index=ArrayUtils.unsafeWriteUint(index,order.takerProtocolFee);index=ArrayUtils.unsafeWriteAddress(index,order.feeRecipient);index=ArrayUtils.unsafeWriteUint8(index,uint8(order.feeMethod));index=ArrayUtils.unsafeWriteUint8(index,uint8(order.side));index=ArrayUtils.unsafeWriteUint8(index,uint8(order.saleKind));index=ArrayUtils.unsafeWriteAddress(index,order.target);index=ArrayUtils.unsafeWriteUint8(index,uint8(order.howToCall));index=ArrayUtils.unsafeWriteBytes(index,order.calldata);index=ArrayUtils.unsafeWriteBytes(index,order.replacementPattern);index=ArrayUtils.unsafeWriteAddress(index,order.staticTarget);index=ArrayUtils.unsafeWriteBytes(index,order.staticExtradata);index=ArrayUtils.unsafeWriteAddress(index,order.paymentToken);index=ArrayUtils.unsafeWriteUint(index,order.basePrice);index=ArrayUtils.unsafeWriteUint(index,order.extra);index=ArrayUtils.unsafeWriteUint(index,order.listingTime);index=ArrayUtils.unsafeWriteUint(index,order.expirationTime);index=ArrayUtils.unsafeWriteUint(index,order.salt);assembly{hash:=keccak256(add(array,0x20),size)}returnhash;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1071
column: 4
content: functiontestCopy(bytesarrToCopy)publicpurereturns(bytes){bytesmemoryarr=newbytes(arrToCopy.length);uintindex;assembly{index:=add(arr,0x20)}ArrayUtils.unsafeWriteBytes(index,arrToCopy);returnarr;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1091
column: 4
content: functiontestCopyAddress(addressaddr)publicpurereturns(bytes){bytesmemoryarr=newbytes(0x14);uintindex;assembly{index:=add(arr,0x20)}ArrayUtils.unsafeWriteAddress(index,addr);returnarr;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 515
column: 4
content: functionstaticCall(addresstarget,bytesmemorycalldata,bytesmemoryextradata)publicviewreturns(boolresult){bytesmemorycombined=newbytes(calldata.length+extradata.length);uintindex;assembly{index:=add(combined,0x20)}index=ArrayUtils.unsafeWriteBytes(index,extradata);ArrayUtils.unsafeWriteBytes(index,calldata);assembly{result:=staticcall(gas,target,add(combined,0x20),mload(combined),mload(0x40),0)}returnresult;}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 901eae
severity: 1
line: 603
column: 15
content: keccak256("\x19Ethereum Signed Message:\n32",hashOrder(order))

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 346
column: 24
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 227
column: 42
content: bytessource

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 337
column: 73
content: bytesextraData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1056
column: 33
content: bytesarray

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1056
column: 46
content: bytesdesired

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1056
column: 61
content: bytesmask

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1059
column: 17
content: bytes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1071
column: 22
content: bytesarrToCopy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1074
column: 17
content: bytes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1094
column: 17
content: bytes

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1126
column: 8
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1127
column: 8
content: bytesreplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1128
column: 8
content: bytesstaticExtradata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1148
column: 8
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1149
column: 8
content: bytesreplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1150
column: 8
content: bytesstaticExtradata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1170
column: 8
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1171
column: 8
content: bytesreplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1172
column: 8
content: bytesstaticExtradata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1193
column: 8
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1194
column: 8
content: bytesreplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1195
column: 8
content: bytesstaticExtradata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1221
column: 8
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1222
column: 8
content: bytesreplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1223
column: 8
content: bytesstaticExtradata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1241
column: 8
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1242
column: 8
content: bytesreplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1243
column: 8
content: bytesstaticExtradata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1266
column: 8
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1267
column: 8
content: bytesreplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1268
column: 8
content: bytesstaticExtradata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1285
column: 8
content: bytescalldataBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1286
column: 8
content: bytescalldataSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1287
column: 8
content: bytesreplacementPatternBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1288
column: 8
content: bytesreplacementPatternSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1289
column: 8
content: bytesstaticExtradataBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1290
column: 8
content: bytesstaticExtradataSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1311
column: 35
content: bytesbuyCalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1311
column: 54
content: bytesbuyReplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1311
column: 83
content: bytessellCalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1311
column: 103
content: bytessellReplacementPattern

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1332
column: 8
content: bytescalldataBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1333
column: 8
content: bytescalldataSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1334
column: 8
content: bytesreplacementPatternBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1335
column: 8
content: bytesreplacementPatternSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1336
column: 8
content: bytesstaticExtradataBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1337
column: 8
content: bytesstaticExtradataSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1357
column: 8
content: bytescalldataBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1358
column: 8
content: bytescalldataSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1359
column: 8
content: bytesreplacementPatternBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1360
column: 8
content: bytesreplacementPatternSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1361
column: 8
content: bytesstaticExtradataBuy

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1362
column: 8
content: bytesstaticExtradataSell

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1528
column: 54
content: bytescalldata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1549
column: 60
content: bytescalldata

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 139
column: 12
content: assembly{letcommonIndex:=mul(0x20,add(1,i))letmaskValue:=mload(add(mask,commonIndex))mstore(add(array,commonIndex),or(and(not(maskValue),mload(add(array,commonIndex))),and(maskValue,mload(add(mask,commonIndex)))))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 150
column: 12
content: assembly{letcommonIndex:=mul(0x20,add(1,i))letmaskValue:=mload(add(mask,commonIndex))mstore(add(array,commonIndex),or(and(not(maskValue),mload(add(array,commonIndex))),and(maskValue,mload(add(mask,commonIndex)))))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 180
column: 8
content: assembly{letlength:=mload(a)switcheq(length,mload(b))case1{letcb:=1letmc:=add(a,0x20)letend:=add(mc,length)for{letcc:=add(b,0x20)}eq(add(lt(mc,end),cb),2){mc:=add(mc,0x20)cc:=add(cc,0x20)}{ifiszero(eq(mload(mc),mload(cc))){success:=0cb:=0}}}default{success:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 233
column: 12
content: assembly{letlength:=mload(source)letend:=add(source,add(0x20,length))letarrIndex:=add(source,0x20)lettempIndex:=indexfor{}eq(lt(arrIndex,end),1){arrIndex:=add(arrIndex,0x20)tempIndex:=add(tempIndex,0x20)}{mstore(tempIndex,mload(arrIndex))}index:=add(index,length)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 263
column: 8
content: assembly{mstore(index,conv)index:=add(index,0x14)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 282
column: 8
content: assembly{mstore(index,source)index:=add(index,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 301
column: 8
content: assembly{mstore8(index,source)index:=add(index,0x1)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 522
column: 8
content: assembly{index:=add(combined,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 527
column: 8
content: assembly{result:=staticcall(gas,target,add(combined,0x20),mload(combined),mload(0x40),0)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 561
column: 8
content: assembly{index:=add(array,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 587
column: 8
content: assembly{hash:=keccak256(add(array,0x20),size)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1078
column: 8
content: assembly{index:=add(arr,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1098
column: 8
content: assembly{index:=add(arr,0x20)}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 312
column: 4
content: boolreentrancyLock=false;

SOLIDITY_VISIBILITY :1
SOLIDITY_MSGVALUE_EQUALS_ZERO :1
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :10
SOLIDITY_UPGRADE_TO_050 :56
SOLIDITY_USING_INLINE_ASSEMBLY :13
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_SHOULD_NOT_BE_PURE :9
