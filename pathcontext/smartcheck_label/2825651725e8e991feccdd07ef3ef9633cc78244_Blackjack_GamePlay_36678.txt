C:\Users\hp\DataSet\contracts\ropsten\28\2825651725e8e991feccdd07ef3ef9633cc78244_Blackjack_GamePlay.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 225
column: 38
content: 0x2d2805a8B232D979eF3cDCC193Bf7312A75662f7

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 438
column: 4
content: functionapprove(addressspender,uinttokens)publicwhenNotPausedreturns(boolsuccess){uintSender_UserId=Mapping__UserAddress_UserId[msg.sender];require(Mapping__OwnerUserId_ERC20Amount[Sender_UserId]>=tokens);uintApprove_to_UserId=Mapping__UserAddress_UserId[spender];Mapping__OwnerUserId_ERC20Amount[Sender_UserId]=Mapping__OwnerUserId_ERC20Amount[Sender_UserId]-tokens;Mapping__OwnerUserIdAlloweUserId_ERC20Amount[Sender_UserId][Approve_to_UserId]=Mapping__OwnerUserIdAlloweUserId_ERC20Amount[Sender_UserId][Approve_to_UserId]+tokens;emitApproval({tokenOwner:msg.sender,spender:spender,tokens:tokens});returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 317
column: 8
content: for(uintIm_PlayUnitCounter=0;Im_PlayUnitCounter<=Im_GameUnit_Instance.Player_UserIds.length;Im_PlayUnitCounter++){require(Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand[Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand.length-1]==1111);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 678
column: 8
content: for(uintIm_UserIdCounter=0;Im_UserIdCounter<_Player_UserIds.length;Im_UserIdCounter++){Mapping__GameRoundId_GameRoundStruct[_ImGameRoundId].Mapping__Index_PlayUnitStruct[Im_UserIdCounter]=Initialize_PlayUnit({_GameRoundId:_ImGameRoundId,_UserId:_Player_UserIds[Im_UserIdCounter],_Betting:Mapping__GameRoundIdUserId_Bettings[_ImGameRoundId][_Player_UserIds[Im_UserIdCounter]]});}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 755
column: 8
content: for(uint_Im_CheckCounter=0;_Im_CheckCounter<=CheckNumberSet.length;_Im_CheckCounter++){while(Im_UnCheck_Number==CheckNumberSet[_Im_CheckCounter]){Im_UnCheck_Number=GetRandom_In52(Im_UnCheck_Number);Im_UnCheck_Number=Im_Cute_RecusiveFunction(Im_UnCheck_Number,CheckNumberSet);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 803
column: 8
content: for(uintIm_CardCounter=0;Im_CardCounter<_Card_InHand.length;Im_CardCounter++){_Im_Card_Number=_Card_InHand[Im_CardCounter];Im_AccumulatedPoints=Im_AccumulatedPoints+Counting_CardPoint(_Im_Card_Number);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 811
column: 8
content: for(uintIm_CardCounter=0;Im_CardCounter<_Card_InHand.length;Im_CardCounter++){_Im_Card_Number=_Card_InHand[Im_CardCounter];if((_Im_Card_Number%13)==0&&Im_AccumulatedPoints<=11){Im_AccumulatedPoints=Im_AccumulatedPoints+10;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 840
column: 8
content: for(uintIm_PlayUnitCounter=0;Im_PlayUnitCounter<=Im_GameUnit_Instance.Player_UserIds.length;Im_PlayUnitCounter++){Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand.pop;uintIm_PlayerUserId=Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Player_UserId;Im_PlayerTotalPoint=Counting_HandCardPoint(Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand);if(Im_PlayerTotalPoint>21&&Im_DealerTotalPoint>21){Im_DrawIdSet[Im_DrawIdSet.length]=Im_PlayerUserId;}elseif(Im_PlayerTotalPoint>21){Im_LoserIdSet[Im_LoserIdSet.length]=Im_PlayerUserId;}elseif(Im_DealerTotalPoint>21){Im_WinnerUserIdSet[Im_WinnerUserIdSet.length]=Im_PlayerUserId;}elseif(Im_PlayerTotalPoint==Im_DealerTotalPoint){Im_DrawIdSet[Im_DrawIdSet.length]=Im_PlayerUserId;}elseif(Im_DealerTotalPoint>Im_PlayerTotalPoint){Im_LoserIdSet[Im_LoserIdSet.length]=Im_PlayerUserId;}elseif(Im_PlayerTotalPoint>Im_DealerTotalPoint){Im_WinnerUserIdSet[Im_WinnerUserIdSet.length]=Im_PlayerUserId;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1078
column: 12
content: for(uintIm_PlayerCounter=0;Im_PlayerCounter<=Im_PlayerUserIdSet.length;Im_PlayerCounter++){uintIm_PlayerUserId=Im_PlayerUserIdSet[Im_PlayerCounter];uintIm_UserBettingAmount=Mapping__GameRoundIdUserId_Bettings[Im_GameRoundId][Im_PlayerUserId];require(Im_UserBettingAmount>=Im_MIN_BettingLimit&&Im_UserBettingAmount<=Im_MAX_BettingLimit);emitCheckBetting_Anouncement({GameRoundId:Im_GameRoundId,UserId:Im_PlayerUserId,UserBettingAmount:Im_UserBettingAmount,MinBettingLimit:Im_MIN_BettingLimit,MaxBettingLimit:Im_MAX_BettingLimit});}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1116
column: 8
content: for(uintIm_PlayUnitCounter=0;Im_PlayUnitCounter<=Im_GameUnit_Instance.Player_UserIds.length;Im_PlayUnitCounter++){if(Mapping__UserAddress_UserId[msg.sender]==Im_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Player_UserId){if(Hit_or_Stand){Im_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand=GetCard({_Im_GameRoundId:Im_RoundId,_Im_Original_CardInHand:Im_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand});returnIm_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand;}elseif(Hit_or_Stand==false){Im_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand.push(1111);returnIm_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand;}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1168
column: 12
content: for(uintIm_WinnerCounter=0;Im_WinnerCounter<=WeR_WinnerId.length;Im_WinnerCounter++){uintIm_WinnerUserId=WeR_WinnerId[Im_WinnerCounter];uintIm_WinnerBettingAmount=Mapping__GameRoundIdUserId_Bettings[Im_RoundId][Im_WinnerUserId];Mapping__OwnerUserId_ERC20Amount[Im_DealerUserId]-Im_WinnerBettingAmount;Mapping__OwnerUserId_ERC20Amount[Im_WinnerUserId]+Im_WinnerBettingAmount;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1178
column: 12
content: for(uintIm_LoserCounter=0;Im_LoserCounter<=WeR_LoserId.length;Im_LoserCounter++){uintIm_LoserUserId=WeR_WinnerId[Im_LoserCounter];uintIm_LoserBettingAmount=Mapping__GameRoundIdUserId_Bettings[Im_RoundId][Im_LoserUserId];Mapping__OwnerUserId_ERC20Amount[Im_DealerUserId]+Im_LoserBettingAmount;Mapping__OwnerUserId_ERC20Amount[Im_LoserUserId]-Im_LoserBettingAmount;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 317
column: 8
content: for(uintIm_PlayUnitCounter=0;Im_PlayUnitCounter<=Im_GameUnit_Instance.Player_UserIds.length;Im_PlayUnitCounter++){require(Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand[Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand.length-1]==1111);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 678
column: 8
content: for(uintIm_UserIdCounter=0;Im_UserIdCounter<_Player_UserIds.length;Im_UserIdCounter++){Mapping__GameRoundId_GameRoundStruct[_ImGameRoundId].Mapping__Index_PlayUnitStruct[Im_UserIdCounter]=Initialize_PlayUnit({_GameRoundId:_ImGameRoundId,_UserId:_Player_UserIds[Im_UserIdCounter],_Betting:Mapping__GameRoundIdUserId_Bettings[_ImGameRoundId][_Player_UserIds[Im_UserIdCounter]]});}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 755
column: 8
content: for(uint_Im_CheckCounter=0;_Im_CheckCounter<=CheckNumberSet.length;_Im_CheckCounter++){while(Im_UnCheck_Number==CheckNumberSet[_Im_CheckCounter]){Im_UnCheck_Number=GetRandom_In52(Im_UnCheck_Number);Im_UnCheck_Number=Im_Cute_RecusiveFunction(Im_UnCheck_Number,CheckNumberSet);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 803
column: 8
content: for(uintIm_CardCounter=0;Im_CardCounter<_Card_InHand.length;Im_CardCounter++){_Im_Card_Number=_Card_InHand[Im_CardCounter];Im_AccumulatedPoints=Im_AccumulatedPoints+Counting_CardPoint(_Im_Card_Number);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 811
column: 8
content: for(uintIm_CardCounter=0;Im_CardCounter<_Card_InHand.length;Im_CardCounter++){_Im_Card_Number=_Card_InHand[Im_CardCounter];if((_Im_Card_Number%13)==0&&Im_AccumulatedPoints<=11){Im_AccumulatedPoints=Im_AccumulatedPoints+10;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 840
column: 8
content: for(uintIm_PlayUnitCounter=0;Im_PlayUnitCounter<=Im_GameUnit_Instance.Player_UserIds.length;Im_PlayUnitCounter++){Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand.pop;uintIm_PlayerUserId=Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Player_UserId;Im_PlayerTotalPoint=Counting_HandCardPoint(Im_GameRoundUnit_Instance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand);if(Im_PlayerTotalPoint>21&&Im_DealerTotalPoint>21){Im_DrawIdSet[Im_DrawIdSet.length]=Im_PlayerUserId;}elseif(Im_PlayerTotalPoint>21){Im_LoserIdSet[Im_LoserIdSet.length]=Im_PlayerUserId;}elseif(Im_DealerTotalPoint>21){Im_WinnerUserIdSet[Im_WinnerUserIdSet.length]=Im_PlayerUserId;}elseif(Im_PlayerTotalPoint==Im_DealerTotalPoint){Im_DrawIdSet[Im_DrawIdSet.length]=Im_PlayerUserId;}elseif(Im_DealerTotalPoint>Im_PlayerTotalPoint){Im_LoserIdSet[Im_LoserIdSet.length]=Im_PlayerUserId;}elseif(Im_PlayerTotalPoint>Im_DealerTotalPoint){Im_WinnerUserIdSet[Im_WinnerUserIdSet.length]=Im_PlayerUserId;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1078
column: 12
content: for(uintIm_PlayerCounter=0;Im_PlayerCounter<=Im_PlayerUserIdSet.length;Im_PlayerCounter++){uintIm_PlayerUserId=Im_PlayerUserIdSet[Im_PlayerCounter];uintIm_UserBettingAmount=Mapping__GameRoundIdUserId_Bettings[Im_GameRoundId][Im_PlayerUserId];require(Im_UserBettingAmount>=Im_MIN_BettingLimit&&Im_UserBettingAmount<=Im_MAX_BettingLimit);emitCheckBetting_Anouncement({GameRoundId:Im_GameRoundId,UserId:Im_PlayerUserId,UserBettingAmount:Im_UserBettingAmount,MinBettingLimit:Im_MIN_BettingLimit,MaxBettingLimit:Im_MAX_BettingLimit});}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1116
column: 8
content: for(uintIm_PlayUnitCounter=0;Im_PlayUnitCounter<=Im_GameUnit_Instance.Player_UserIds.length;Im_PlayUnitCounter++){if(Mapping__UserAddress_UserId[msg.sender]==Im_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Player_UserId){if(Hit_or_Stand){Im_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand=GetCard({_Im_GameRoundId:Im_RoundId,_Im_Original_CardInHand:Im_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand});returnIm_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand;}elseif(Hit_or_Stand==false){Im_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand.push(1111);returnIm_GameRoundUnit_StorageInstance.Mapping__Index_PlayUnitStruct[Im_PlayUnitCounter].Cards_InHand;}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1168
column: 12
content: for(uintIm_WinnerCounter=0;Im_WinnerCounter<=WeR_WinnerId.length;Im_WinnerCounter++){uintIm_WinnerUserId=WeR_WinnerId[Im_WinnerCounter];uintIm_WinnerBettingAmount=Mapping__GameRoundIdUserId_Bettings[Im_RoundId][Im_WinnerUserId];Mapping__OwnerUserId_ERC20Amount[Im_DealerUserId]-Im_WinnerBettingAmount;Mapping__OwnerUserId_ERC20Amount[Im_WinnerUserId]+Im_WinnerBettingAmount;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1178
column: 12
content: for(uintIm_LoserCounter=0;Im_LoserCounter<=WeR_LoserId.length;Im_LoserCounter++){uintIm_LoserUserId=WeR_WinnerId[Im_LoserCounter];uintIm_LoserBettingAmount=Mapping__GameRoundIdUserId_Bettings[Im_RoundId][Im_LoserUserId];Mapping__OwnerUserId_ERC20Amount[Im_DealerUserId]+Im_LoserBettingAmount;Mapping__OwnerUserId_ERC20Amount[Im_LoserUserId]-Im_LoserBettingAmount;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 758
column: 19
content: Im_UnCheck_Number==CheckNumberSet[_Im_CheckCounter]

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 370
column: 0
content: contractMoneyMoney_TransectionisERC20_Interface,Blackjack_DataSets,Functionality_Event,AccessControl{functiontotalSupply()publicviewreturns(uint){returnTotalERC20Amount_LuToken;}functionbalanceOf(addresstokenOwner)publicviewreturns(uintbalance){uintUserId=Mapping__UserAddress_UserId[tokenOwner];uintERC20_Amount=Mapping__OwnerUserId_ERC20Amount[UserId];returnERC20_Amount;}functionallowance(addresstokenOwner,addressspender)publicviewreturns(uintremaining){uintERC20TokenOwnerId=Mapping__UserAddress_UserId[tokenOwner];uintERC20TokenSpenderId=Mapping__UserAddress_UserId[spender];uintAllowance_Remaining=Mapping__OwnerUserIdAlloweUserId_ERC20Amount[ERC20TokenOwnerId][ERC20TokenSpenderId];returnAllowance_Remaining;}functiontransfer(addressto,uinttokens)publicwhenNotPausedreturns(boolsuccess){uintSender_UserId=Mapping__UserAddress_UserId[msg.sender];require(Mapping__OwnerUserId_ERC20Amount[Sender_UserId]>=tokens);uintTransfer_to_UserId=Mapping__UserAddress_UserId[to];Mapping__OwnerUserId_ERC20Amount[Sender_UserId]=Mapping__OwnerUserId_ERC20Amount[Sender_UserId]-tokens;Mapping__OwnerUserId_ERC20Amount[Transfer_to_UserId]=Mapping__OwnerUserId_ERC20Amount[Transfer_to_UserId]+tokens;emitTransfer({from:msg.sender,to:to,tokens:tokens});returntrue;}functionapprove(addressspender,uinttokens)publicwhenNotPausedreturns(boolsuccess){uintSender_UserId=Mapping__UserAddress_UserId[msg.sender];require(Mapping__OwnerUserId_ERC20Amount[Sender_UserId]>=tokens);uintApprove_to_UserId=Mapping__UserAddress_UserId[spender];Mapping__OwnerUserId_ERC20Amount[Sender_UserId]=Mapping__OwnerUserId_ERC20Amount[Sender_UserId]-tokens;Mapping__OwnerUserIdAlloweUserId_ERC20Amount[Sender_UserId][Approve_to_UserId]=Mapping__OwnerUserIdAlloweUserId_ERC20Amount[Sender_UserId][Approve_to_UserId]+tokens;emitApproval({tokenOwner:msg.sender,spender:spender,tokens:tokens});returntrue;}functiontransferFrom(addressfrom,addressto,uinttokens)publicwhenNotPausedreturns(boolsuccess){uintSender_UserId=Mapping__UserAddress_UserId[from];require(Mapping__OwnerUserId_ERC20Amount[Sender_UserId]>=tokens);uintApprover_UserId=Mapping__UserAddress_UserId[msg.sender];uintTransfer_to_UserId=Mapping__UserAddress_UserId[to];Mapping__OwnerUserIdAlloweUserId_ERC20Amount[Sender_UserId][Approver_UserId]=Mapping__OwnerUserIdAlloweUserId_ERC20Amount[Sender_UserId][Approver_UserId]-tokens;Mapping__OwnerUserId_ERC20Amount[Transfer_to_UserId]=Mapping__OwnerUserId_ERC20Amount[Transfer_to_UserId]+tokens;emitTransfer({from:msg.sender,to:to,tokens:tokens});returntrue;}functionExchange_ETH2LuToken(uint_UserId)publicpayablewhenNotPausedreturns(uintUserId,uintGetLuTokenAmount,uintAccountRemainLuToken){uintIm_CreateLuTokenAmount=(msg.value)/101;TotalERC20Amount_LuToken=TotalERC20Amount_LuToken+Im_CreateLuTokenAmount;Mapping__OwnerUserId_ERC20Amount[_UserId]=Mapping__OwnerUserId_ERC20Amount[_UserId]+Im_CreateLuTokenAmount;emitExchangeLuTokenEvent({_ETH_AddressEvent:msg.sender,_ETH_ExchangeAmountEvent:msg.value,_LuToken_UserIdEvnet:UserId,_LuToken_ExchangeAmountEvnet:Im_CreateLuTokenAmount,_LuToken_RemainAmountEvent:Mapping__OwnerUserId_ERC20Amount[_UserId]});return(_UserId,Im_CreateLuTokenAmount,Mapping__OwnerUserId_ERC20Amount[_UserId]);}functionExchange_LuToken2ETH(addresspayable_GetPayAddress,uintLuTokenAmount)publicwhenNotPausedreturns(bool<missing ')'>SuccessMessage,uintPayerUserId,addressGetPayAddress,uintPayETH_Amount,uintAccountRemainLuToken){uintIm_PayerUserId=Mapping__UserAddress_UserId[msg.sender];require(Mapping__OwnerUserId_ERC20Amount[Im_PayerUserId]>=LuTokenAmount);Mapping__OwnerUserId_ERC20Amount[Im_PayerUserId]=Mapping__OwnerUserId_ERC20Amount[Im_PayerUserId]-LuTokenAmount;boolSuccess=_GetPayAddress.send(LuTokenAmount*100);emitExchangeLuTokenEvent({_ETH_AddressEvent:_GetPayAddress,_ETH_ExchangeAmountEvent:LuTokenAmount*100,_LuToken_UserIdEvnet:Im_PayerUserId,_LuToken_ExchangeAmountEvnet:LuTokenAmount,_LuToken_RemainAmountEvent:Mapping__OwnerUserId_ERC20Amount[Im_PayerUserId]}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 490
column: 12
content: (uintUserId,uintGetLuTokenAmount,uintAccountRemainLuToken)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 572
column: 12
content: (uintUserId,addressUserAddress,stringmemoryUserName,stringmemoryUserDescription)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 642
column: 12
content: (uintGameId,uintGameRoundId,uintBettingAmount)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 828
column: 12
content: (uint[]memory_WinnerUserId,uint[]memory_LoserUserId)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 964
column: 12
content: (uint_UserId,address_UserAddress,stringmemory_UserName,stringmemory_UserDescription)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 990
column: 12
content: (bool_SuccessMessage,uint_CreateGameId)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1019
column: 16
content: (bool_SuccessMessage,uint_CreateGameId)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1042
column: 12
content: (uint_GameId,uintGameRoundId,uintBettingAmount)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 529
column: 38
content: send(LuTokenAmount*100)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 513
column: 4
content: functionExchange_LuToken2ETH(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 52
column: 4
content: mapping(address=>uint)Mapping__UserAddress_UserId;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 53
column: 4
content: mapping(uint=>User_AccountStruct)Mapping__UserId_UserAccountStruct;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 55
column: 4
content: mapping(uint=>Game_Unit)Mapping__GameUnitId_GameUnitStruct;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 56
column: 4
content: mapping(uint=>Game_Round_Unit)Mapping__GameRoundId_GameRoundStruct;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 59
column: 4
content: mapping(uint=>uint)Mapping__OwnerUserId_ERC20Amount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 60
column: 4
content: mapping(uint=>mapping(uint=>uint))Mapping__OwnerUserIdAlloweUserId_ERC20Amount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 61
column: 4
content: mapping(uint=>mapping(uint=>uint))Mapping__GameRoundIdUserId_Bettings;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 63
column: 4
content: mapping(uint=>string)Mapping__SuitNumber_String;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 64
column: 4
content: mapping(uint=>string)Mapping__FigureNumber_String;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 66
column: 4
content: uint[13]Im_BlackJack_CardFigureToPoint=[1,2,3,4,5,6,7,8,9,10,10,10,10];

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 513
column: 50
content: _GetPayAddress,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 513
column: 66
content: uintLuTokenAmount)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 514
column: 11
content: whenNotPausedreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 516
column: 4
content: (bool<missing ')'>SuccessMessage,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 518
column: 8
content: uintPayerUserId,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 519
column: 8
content: addressGetPayAddress,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 520
column: 8
content: uintPayETH_Amount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 521
column: 8
content: uintAccountRemainLuToken){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 524
column: 8
content: uintIm_PayerUserId=Mapping__UserAddress_UserId[msg.sender];

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 526
column: 8
content: require(Mapping__OwnerUserId_ERC20Amount[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 526
column: 49
content: Im_PayerUserId]>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 526
column: 68
content: LuTokenAmount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 527
column: 8
content: Mapping__OwnerUserId_ERC20Amount[Im_PayerUserId]=Mapping__OwnerUserId_ERC20Amount[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 527
column: 92
content: Im_PayerUserId]-

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 527
column: 110
content: LuTokenAmount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 529
column: 8
content: boolSuccess=_GetPayAddress.send(LuTokenAmount*100);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 531
column: 8
content: emitExchangeLuTokenEvent

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 532
column: 8
content: ({_ETH_AddressEvent:_GetPayAddress,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 534
column: 12
content: _ETH_ExchangeAmountEvent:LuTokenAmount*100,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 535
column: 12
content: _LuToken_UserIdEvnet:Im_PayerUserId,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 536
column: 12
content: _LuToken_ExchangeAmountEvnet:LuTokenAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 537
column: 12
content: _LuToken_RemainAmountEvent:Mapping__OwnerUserId_ERC20Amount[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 537
column: 73
content: Im_PayerUserId]

SOLIDITY_VISIBILITY :34
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :10
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :11
SOLIDITY_UNCHECKED_CALL :1
SOLIDITY_SHOULD_RETURN_STRUCT :8
SOLIDITY_ERC20_APPROVE :1
