C:\Users\hp\DataSet\contracts\ropsten\2d\2dd8e886893df72f39d43dbbd7ac76af6b7ed072_Evabot.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 148
column: 6
content: whitelists.length--

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 31
column: 4
content: functiontotalSupply()publicconstantreturns(uint);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 32
column: 4
content: functionbalanceOf(addresstokenOwner)publicconstantreturns(uintbalance);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 33
column: 4
content: functionallowance(addresstokenOwner,addressspender)publicconstantreturns(uintremaining);

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 165
column: 2
content: functiongetWhitelists()publicconstantreturns(address[]){returnwhitelists;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 300
column: 2
content: functiongetEvotTokenAddress()publicconstantreturns(address){returntokenEVOT;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 305
column: 2
content: functionbalanceOfPendingToken(addressuser)publicconstantreturns(uint256){returnpendingToken[user];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 310
column: 2
content: functionbalanceOfActiveToken(addressuser)publicconstantreturns(uint256){returnactiveToken[user];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 315
column: 2
content: functionbalanceOfETH(addressuser)publicconstantreturns(uint256){returnmyEthBalance[user];}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 320
column: 2
content: functiongetDailyProfitSumForAllUsers()publicconstantreturns(uint256){returndailyProfitSumForAllUsers;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 325
column: 2
content: functiongetReadyTime()publicconstantreturns(uint256){if(now>=readyTime){return0;}else{returnreadyTime.sub(now);}}

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 229
column: 21
content: (activeToken[whitelists[i]].div(whitelists.length)).mul(eth_value_amount)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 240
column: 22
content: (activeToken[whitelists[i]].div(whitelists.length)).mul(eth_value_amount)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 212
column: 6
content: for(uint256i=0;i<whitelists.length;i++){activeToken[whitelists[i]]=pendingToken[whitelists[i]];totalInvested[whitelists[i]]=totalInvested[whitelists[i]].sub(pendingToken[whitelists[i]]);pendingToken[whitelists[i]]=0;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 226
column: 6
content: for(uint256i=0;i<whitelists.length;i++){if(isAutoInvest[whitelists[i]]==true){profit=(activeToken[whitelists[i]].div(whitelists.length)).mul(eth_value_amount);dailyProfitSumForAllUsers=dailyProfitSumForAllUsers.add(profit);myEthBalance[whitelists[i]]=myEthBalance[whitelists[i]].sub(profit);dailyEthProfit[whitelists[i]]=profit;totalProfit[whitelists[i]]=totalProfit[whitelists[i]].sub(profit);pendingToken[whitelists[i]]=pendingToken[whitelists[i]].sub(activeToken[whitelists[i]]);activeToken[whitelists[i]]=0;}else{profit=(activeToken[whitelists[i]].div(whitelists.length)).mul(eth_value_amount);dailyProfitSumForAllUsers=dailyProfitSumForAllUsers.add(profit);myEthBalance[whitelists[i]]=myEthBalance[whitelists[i]].sub(profit);dailyEthProfit[whitelists[i]]=profit;totalProfit[whitelists[i]]=totalProfit[whitelists[i]].sub(profit);if(!ERC20(tokenEVOT).transfer(wallet_contract,activeToken[whitelists[i]]))revert();Evoai(wallet_contract).recevedTokenFromEvabot(whitelists[i],activeToken[whitelists[i]]);activeToken[whitelists[i]]=0;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 132
column: 6
content: while(whitelists[i]!=value){i++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 144
column: 6
content: while(i<whitelists.length-1){whitelists[i]=whitelists[i+1];i++;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 212
column: 6
content: for(uint256i=0;i<whitelists.length;i++){activeToken[whitelists[i]]=pendingToken[whitelists[i]];totalInvested[whitelists[i]]=totalInvested[whitelists[i]].sub(pendingToken[whitelists[i]]);pendingToken[whitelists[i]]=0;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 226
column: 6
content: for(uint256i=0;i<whitelists.length;i++){if(isAutoInvest[whitelists[i]]==true){profit=(activeToken[whitelists[i]].div(whitelists.length)).mul(eth_value_amount);dailyProfitSumForAllUsers=dailyProfitSumForAllUsers.add(profit);myEthBalance[whitelists[i]]=myEthBalance[whitelists[i]].sub(profit);dailyEthProfit[whitelists[i]]=profit;totalProfit[whitelists[i]]=totalProfit[whitelists[i]].sub(profit);pendingToken[whitelists[i]]=pendingToken[whitelists[i]].sub(activeToken[whitelists[i]]);activeToken[whitelists[i]]=0;}else{profit=(activeToken[whitelists[i]].div(whitelists.length)).mul(eth_value_amount);dailyProfitSumForAllUsers=dailyProfitSumForAllUsers.add(profit);myEthBalance[whitelists[i]]=myEthBalance[whitelists[i]].sub(profit);dailyEthProfit[whitelists[i]]=profit;totalProfit[whitelists[i]]=totalProfit[whitelists[i]].sub(profit);if(!ERC20(tokenEVOT).transfer(wallet_contract,activeToken[whitelists[i]]))revert();Evoai(wallet_contract).recevedTokenFromEvabot(whitelists[i],activeToken[whitelists[i]]);activeToken[whitelists[i]]=0;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 132
column: 13
content: whitelists[i]!=value

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 144
column: 13
content: i<whitelists.length-1

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 246
column: 12
content: if(!ERC20(tokenEVOT).transfer(wallet_contract,activeToken[whitelists[i]]))revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 265
column: 4
content: if(tokenEVOT==0)revert();

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 268
column: 4
content: if(!ERC20(tokenEVOT).transfer(wallet_contract,amount))revert();

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 52
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 123
column: 21
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 165
column: 51
content: address[]

SOLIDITY_SAFEMATH :1
SOLIDITY_DEPRECATED_CONSTRUCTIONS :10
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_REVERT_REQUIRE :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :4
SOLIDITY_UPGRADE_TO_050 :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_DIV_MUL :2
