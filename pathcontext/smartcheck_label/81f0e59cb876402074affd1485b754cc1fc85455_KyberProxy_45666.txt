C:\Users\hp\DataSet\contracts\ropsten\81\81f0e59cb876402074affd1485b754cc1fc85455_KyberProxy.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 39
column: 0
content: contractTokenConverter{functionconvert(Token_fromToken,Token_toToken)externalpayablereturns(uint256amount);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 43
column: 0
content: contractKyberProxyisTokenConverter,Ownable{uint256constantinternalMAX_UINT=uint256(0)-1;ERC20constantinternalETH_TOKEN_ADDRESS=ERC20(0x00eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee);eventETHReceived(addressindexedsender,uintamount);eventSwap(addressindexedsender,ERC20srcToken,ERC20destToken,uintamount);eventTest(addressindexedfrom,addressindexedto,stringmsg);functionconvert(Tokenfrom,Tokento)externalpayablereturns(uint256destAmount){ERC20srcToken=ERC20(from);ERC20destToken=ERC20(to);if(srcToken==ETH_TOKEN_ADDRESS&&destToken!=ETH_TOKEN_ADDRESS){emitTest(srcToken,destToken,"execSwapEtherToToken");}elseif(srcToken!=ETH_TOKEN_ADDRESS&&destToken==ETH_TOKEN_ADDRESS){emitTest(srcToken,destToken,"execSwapTokenToEther");}else{emitTest(srcToken,destToken,"execSwapTokenToToken");}return1;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :2
