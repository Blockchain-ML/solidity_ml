C:\Users\hp\DataSet\contracts\mainnet\cb\cbe717fb2923f4226271cc4c1d5ef2c076fb3247_Array256Lib.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 39
column: 29
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 50
column: 24
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 53
column: 28
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 55
column: 32
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 67
column: 24
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 70
column: 28
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 72
column: 32
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 96
column: 30
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 101
column: 32
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 187b5a
severity: 1
line: 115
column: 30
content: sha3

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 34
column: 2
content: functionsumElements(uint256[]storageself)constantreturns(uint256sum){assembly{mstore(0x60,self_slot)for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{sum:=add(sload(add(sha3(0x60,0x20),i)),sum)}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 47
column: 2
content: functiongetMax(uint256[]storageself)constantreturns(uint256maxValue){assembly{mstore(0x60,self_slot)maxValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),maxValue)case1{maxValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 64
column: 2
content: functiongetMin(uint256[]storageself)constantreturns(uint256minValue){assembly{mstore(0x60,self_slot)minValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),minValue)case0{minValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 84
column: 2
content: functionindexOf(uint256[]storageself,uint256value,boolisSorted)constantreturns(boolfound,uint256index){assembly{mstore(0x60,self_slot)switchisSortedcase1{lethigh:=sub(sload(self_slot),1)letmid:=0letlow:=0for{}iszero(gt(low,high)){}{mid:=div(add(low,high),2)switchlt(sload(add(sha3(0x60,0x20),mid)),value)case1{low:=add(mid,1)}case0{switchgt(sload(add(sha3(0x60,0x20),mid)),value)case1{high:=sub(mid,1)}case0{found:=1index:=midlow:=add(high,1)}}}}case0{for{letlow:=0}lt(low,sload(self_slot)){low:=add(low,1)}{switcheq(sload(add(sha3(0x60,0x20),low)),value)case1{found:=1index:=lowlow:=sload(self_slot)}}}}}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 129
column: 2
content: functiongetParentI(uint256index)constantprivatereturns(uint256pI){uint256i=index-1;pI=i/2;}

ruleId: SOLIDITY_DEPRECATED_CONSTRUCTIONS
patternId: 28fa69
severity: 1
line: 137
column: 2
content: functiongetLeftChildI(uint256index)constantprivatereturns(uint256lcI){uint256i=index*2;lcI=i+1;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 34
column: 2
content: functionsumElements(uint256[]storageself)constantreturns(uint256sum){assembly{mstore(0x60,self_slot)for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{sum:=add(sload(add(sha3(0x60,0x20),i)),sum)}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 47
column: 2
content: functiongetMax(uint256[]storageself)constantreturns(uint256maxValue){assembly{mstore(0x60,self_slot)maxValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),maxValue)case1{maxValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 64
column: 2
content: functiongetMin(uint256[]storageself)constantreturns(uint256minValue){assembly{mstore(0x60,self_slot)minValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),minValue)case0{minValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 84
column: 2
content: functionindexOf(uint256[]storageself,uint256value,boolisSorted)constantreturns(boolfound,uint256index){assembly{mstore(0x60,self_slot)switchisSortedcase1{lethigh:=sub(sload(self_slot),1)letmid:=0letlow:=0for{}iszero(gt(low,high)){}{mid:=div(add(low,high),2)switchlt(sload(add(sha3(0x60,0x20),mid)),value)case1{low:=add(mid,1)}case0{switchgt(sload(add(sha3(0x60,0x20),mid)),value)case1{high:=sub(mid,1)}case0{found:=1index:=midlow:=add(high,1)}}}}case0{for{letlow:=0}lt(low,sload(self_slot)){low:=add(low,1)}{switcheq(sload(add(sha3(0x60,0x20),low)),value)case1{found:=1index:=lowlow:=sload(self_slot)}}}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 155
column: 12
content: lChild<=end

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 184
column: 12
content: lChild<=end

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: 11ca45b
severity: 3
line: 152
column: 10
content: start>=0

ruleId: SOLIDITY_UINT_CANT_BE_NEGATIVE
patternId: d48ac4
severity: 2
line: 152
column: 10
content: start>=0

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 35
column: 4
content: assembly{mstore(0x60,self_slot)for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{sum:=add(sload(add(sha3(0x60,0x20),i)),sum)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 48
column: 4
content: assembly{mstore(0x60,self_slot)maxValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),maxValue)case1{maxValue:=sload(add(sha3(0x60,0x20),i))}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 65
column: 4
content: assembly{mstore(0x60,self_slot)minValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),minValue)case0{minValue:=sload(add(sha3(0x60,0x20),i))}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 86
column: 4
content: assembly{mstore(0x60,self_slot)switchisSortedcase1{lethigh:=sub(sload(self_slot),1)letmid:=0letlow:=0for{}iszero(gt(low,high)){}{mid:=div(add(low,high),2)switchlt(sload(add(sha3(0x60,0x20),mid)),value)case1{low:=add(mid,1)}case0{switchgt(sload(add(sha3(0x60,0x20),mid)),value)case1{high:=sub(mid,1)}case0{found:=1index:=midlow:=add(high,1)}}}}case0{for{letlow:=0}lt(low,sload(self_slot)){low:=add(low,1)}{switcheq(sload(add(sha3(0x60,0x20),low)),value)case1{found:=1index:=lowlow:=sload(self_slot)}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 34
column: 2
content: functionsumElements(uint256[]storageself)constantreturns(uint256sum){assembly{mstore(0x60,self_slot)for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{sum:=add(sload(add(sha3(0x60,0x20),i)),sum)}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 47
column: 2
content: functiongetMax(uint256[]storageself)constantreturns(uint256maxValue){assembly{mstore(0x60,self_slot)maxValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),maxValue)case1{maxValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 64
column: 2
content: functiongetMin(uint256[]storageself)constantreturns(uint256minValue){assembly{mstore(0x60,self_slot)minValue:=sload(sha3(0x60,0x20))for{leti:=0}lt(i,sload(self_slot)){i:=add(i,1)}{switchgt(sload(add(sha3(0x60,0x20),i)),minValue)case0{minValue:=sload(add(sha3(0x60,0x20),i))}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 84
column: 2
content: functionindexOf(uint256[]storageself,uint256value,boolisSorted)constantreturns(boolfound,uint256index){assembly{mstore(0x60,self_slot)switchisSortedcase1{lethigh:=sub(sload(self_slot),1)letmid:=0letlow:=0for{}iszero(gt(low,high)){}{mid:=div(add(low,high),2)switchlt(sload(add(sha3(0x60,0x20),mid)),value)case1{low:=add(mid,1)}case0{switchgt(sload(add(sha3(0x60,0x20),mid)),value)case1{high:=sub(mid,1)}case0{found:=1index:=midlow:=add(high,1)}}}}case0{for{letlow:=0}lt(low,sload(self_slot)){low:=add(low,1)}{switcheq(sload(add(sha3(0x60,0x20),low)),value)case1{found:=1index:=lowlow:=sload(self_slot)}}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 144
column: 2
content: functionheapSort(uint256[]storageself){uint256end=self.length-1;uint256start=getParentI(end);uint256root=start;uint256lChild;uint256rChild;uint256swap;uint256temp;while(start>=0){root=start;lChild=getLeftChildI(start);while(lChild<=end){rChild=lChild+1;swap=root;if(self[swap]<self[lChild])swap=lChild;if((rChild<=end)&&(self[swap]<self[rChild]))swap=rChild;if(swap==root)lChild=end+1;else{temp=self[swap];self[swap]=self[root];self[root]=temp;root=swap;lChild=getLeftChildI(root);}}if(start==0)break;elsestart=start-1;}while(end>0){temp=self[end];self[end]=self[0];self[0]=temp;end=end-1;root=0;lChild=getLeftChildI(0);while(lChild<=end){rChild=lChild+1;swap=root;if(self[swap]<self[lChild])swap=lChild;if((rChild<=end)&&(self[swap]<self[rChild]))swap=rChild;if(swap==root)lChild=end+1;else{temp=self[swap];self[swap]=self[root];self[root]=temp;root=swap;lChild=getLeftChildI(root);}}}}

SOLIDITY_VISIBILITY :5
SOLIDITY_DEPRECATED_CONSTRUCTIONS :16
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :4
SOLIDITY_UINT_CANT_BE_NEGATIVE :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_USING_INLINE_ASSEMBLY :4
