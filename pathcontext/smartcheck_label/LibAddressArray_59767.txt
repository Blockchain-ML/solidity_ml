C:\Users\hp\DataSet\LibAddressArray.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 19
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 35
column: 4
content: functionappend(address[]memoryaddressArray,addressaddressToAppend)internalpurereturns(address[]memory){uint256freeMemPtr=0;uint256addressArrayBeginPtr=0;uint256addressArrayEndPtr=0;uint256addressArrayLength=addressArray.length;uint256addressArrayMemSizeInBytes=32+(32*addressArrayLength);assembly{freeMemPtr:=mload(0x40)addressArrayBeginPtr:=addressArrayaddressArrayEndPtr:=add(addressArray,addressArrayMemSizeInBytes)}if(freeMemPtr<addressArrayEndPtr){LibRichErrors.rrevert(LibAddressArrayRichErrors.MismanagedMemoryError(freeMemPtr,addressArrayEndPtr));}if(freeMemPtr>addressArrayEndPtr){LibBytes.memCopy(freeMemPtr,addressArrayBeginPtr,addressArrayMemSizeInBytes);assembly{addressArray:=freeMemPtraddressArrayBeginPtr:=addressArray}}addressArrayLength+=1;addressArrayMemSizeInBytes+=32;addressArrayEndPtr=addressArrayBeginPtr+addressArrayMemSizeInBytes;freeMemPtr=addressArrayEndPtr;assembly{mstore(addressArray,addressArrayLength)mstore(0x40,freeMemPtr)}addressArray[addressArrayLength-1]=addressToAppend;returnaddressArray;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 95
column: 4
content: functioncontains(address[]memoryaddressArray,addresstarget)internalpurereturns(boolsuccess){assembly{letarrayByteLen:=mul(mload(addressArray),32)letarrayContentsStart:=add(addressArray,32)letarrayContentsEnd:=add(arrayContentsStart,arrayByteLen)for{leti:=arrayContentsStart}lt(i,arrayContentsEnd){i:=add(i,32)}{letarrayElement:=mload(i)ifeq(target,arrayElement){success:=1i:=arrayContentsEnd}}}returnsuccess;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 131
column: 4
content: functionindexOf(address[]memoryaddressArray,addresstarget)internalpurereturns(boolsuccess,uint256index){assembly{letarrayByteLen:=mul(mload(addressArray),32)letarrayContentsStart:=add(addressArray,32)letarrayContentsEnd:=add(arrayContentsStart,arrayByteLen)for{leti:=arrayContentsStart}lt(i,arrayContentsEnd){i:=add(i,32)}{letarrayElement:=mload(i)ifeq(target,arrayElement){success:=1index:=div(sub(i,arrayContentsStart),32)i:=arrayContentsEnd}}}return(success,index);}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 134
column: 16
content: (boolsuccess,uint256index)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 46
column: 8
content: assembly{freeMemPtr:=mload(0x40)addressArrayBeginPtr:=addressArrayaddressArrayEndPtr:=add(addressArray,addressArrayMemSizeInBytes)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 69
column: 12
content: assembly{addressArray:=freeMemPtraddressArrayBeginPtr:=addressArray}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 80
column: 8
content: assembly{mstore(addressArray,addressArrayLength)mstore(0x40,freeMemPtr)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 100
column: 8
content: assembly{letarrayByteLen:=mul(mload(addressArray),32)letarrayContentsStart:=add(addressArray,32)letarrayContentsEnd:=add(arrayContentsStart,arrayByteLen)for{leti:=arrayContentsStart}lt(i,arrayContentsEnd){i:=add(i,32)}{letarrayElement:=mload(i)ifeq(target,arrayElement){success:=1i:=arrayContentsEnd}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 136
column: 8
content: assembly{letarrayByteLen:=mul(mload(addressArray),32)letarrayContentsStart:=add(addressArray,32)letarrayContentsEnd:=add(arrayContentsStart,arrayByteLen)for{leti:=arrayContentsStart}lt(i,arrayContentsEnd){i:=add(i,32)}{letarrayElement:=mload(i)ifeq(target,arrayElement){success:=1index:=div(sub(i,arrayContentsStart),32)i:=arrayContentsEnd}}}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_USING_INLINE_ASSEMBLY :5
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_PURE :3
