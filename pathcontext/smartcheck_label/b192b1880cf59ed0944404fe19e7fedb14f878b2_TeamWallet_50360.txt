C:\Users\hp\DataSet\contracts\ropsten\b1\b192b1880cf59ed0944404fe19e7fedb14f878b2_TeamWallet.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 16
column: 19
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 36
column: 19
content: (address(0))

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 200
column: 8
content: owners.length-=1

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 162
column: 8
content: for(uinti=0;i<_owners.length;i++){require(!isOwner[_owners[i]]&&_owners[i]!=0,"Invalid owner");isOwner[_owners[i]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 195
column: 8
content: for(uinti=0;i<owners.length-1;i++)if(owners[i]==owner){owners[i]=owners[owners.length-1];break;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 358
column: 8
content: for(uinti=0;i<owners.length;i++){if(approvals[transactionId][owners[i]])count+=1;if(count==required)returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 402
column: 8
content: for(uinti=0;i<owners.length;i++)if(approvals[transactionId][owners[i]])count+=1;

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 414
column: 8
content: for(uinti=0;i<owners.length;i++)if(rejections[transactionId][owners[i]])count+=1;

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 427
column: 8
content: for(uinti=0;i<transactionCount;i++)if(pending&&!transactions[i].executed||executed&&transactions[i].executed)count+=1;

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 453
column: 8
content: for(i=0;i<owners.length;i++)if(approvals[transactionId][owners[i]]){approvalsTemp[count]=owners[i];count+=1;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 474
column: 8
content: for(i=0;i<owners.length;i++)if(rejections[transactionId][owners[i]]){rejectionsTemp[count]=owners[i];count+=1;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 498
column: 8
content: for(i=0;i<transactionCount;i++)if(pending&&!transactions[i].executed||executed&&transactions[i].executed){transactionIdsTemp[count]=i;count+=1;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 397
column: 4
content: functiongetApprovalCount(uinttransactionId)publicviewreturns(uintcount){for(uinti=0;i<owners.length;i++)if(approvals[transactionId][owners[i]])count+=1;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 409
column: 4
content: functiongetRejectionCount(uinttransactionId)publicviewreturns(uintcount){for(uinti=0;i<owners.length;i++)if(rejections[transactionId][owners[i]])count+=1;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 422
column: 4
content: functiongetTransactionCount(boolpending,boolexecuted)publicviewreturns(uintcount){for(uinti=0;i<transactionCount;i++)if(pending&&!transactions[i].executed||executed&&transactions[i].executed)count+=1;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 162
column: 8
content: for(uinti=0;i<_owners.length;i++){require(!isOwner[_owners[i]]&&_owners[i]!=0,"Invalid owner");isOwner[_owners[i]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 358
column: 8
content: for(uinti=0;i<owners.length;i++){if(approvals[transactionId][owners[i]])count+=1;if(count==required)returntrue;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 402
column: 8
content: for(uinti=0;i<owners.length;i++)if(approvals[transactionId][owners[i]])count+=1;

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 414
column: 8
content: for(uinti=0;i<owners.length;i++)if(rejections[transactionId][owners[i]])count+=1;

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 453
column: 8
content: for(i=0;i<owners.length;i++)if(approvals[transactionId][owners[i]]){approvalsTemp[count]=owners[i];count+=1;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 474
column: 8
content: for(i=0;i<owners.length;i++)if(rejections[transactionId][owners[i]]){rejectionsTemp[count]=owners[i];count+=1;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 47
column: 0
content: contractTeamWallet{usingECDSAforbytes32;eventTeamCreated(address[]owners,addresscontractAddress,stringid);eventApproval(addressindexedsender,uintindexedtransactionId);eventRejection(addressindexedsender,uintindexedtransactionId);eventSubmission(uintindexedtransactionId,uinttrackingId);eventExecution(uintindexedtransactionId);eventExecutionFailure(uintindexedtransactionId);eventDeposit(addressindexedsender,uintvalue);eventOwnerAddition(addressindexedowner,stringname);eventOwnerRemoval(addressindexedowner,stringname);eventRequirementChange(uintoldRequired,uintnewRequired);uintconstantpublicMAX_OWNER_COUNT=50;mapping(uint=>Transaction)publictransactions;mapping(uint=>mapping(address=>bool))publicapprovals;mapping(uint=>mapping(address=>bool))publicrejections;mapping(address=>bool)publicisOwner;address[]publicowners;mapping(address=>string)publicownerNames;uintpublicrequired;uintpublictransactionCount;stringpublicid;structTransaction{addressdestination;uintvalue;bytesdata;bytesreasonHash;boolexecuted;}modifieronlyWallet(){require(msg.sender==address(this),"Sender is not wallet");_;}modifierownerDoesNotExist(addressowner){require(!isOwner[owner],"Owner existed");_;}modifierownerExists(addressowner){require(isOwner[owner],"Owner does not existed");_;}modifiertransactionExists(uinttransactionId){require(transactions[transactionId].destination!=0,"Transaction was not existed");_;}modifierapproved(uinttransactionId,addressowner){require(approvals[transactionId][owner],"Transaction was not approved");_;}modifiernotApproved(uinttransactionId,addressowner){require(!approvals[transactionId][owner],"Transaction was approved");_;}modifiernotRejected(uinttransactionId,addressowner){require(!rejections[transactionId][owner],"Transaction was rejected");_;}modifiernotExecuted(uinttransactionId){require(!transactions[transactionId].executed,"Transaction was executed");_;}modifiernotNull(address_address){require(_address!=0,"Null address");_;}modifiervalidRequirement(uintownerCount,uint_required){require(ownerCount<=MAX_OWNER_COUNT&&_required<=ownerCount&&_required!=0&&ownerCount!=0,"Invalid required");_;}function()publicpayable{if(msg.value>0)emitDeposit(msg.sender,msg.value);}constructor(address[]_owners,uint_required,string_id)publicvalidRequirement(_owners.length,_required){for(uinti=0;i<_owners.length;i++){require(!isOwner[_owners[i]]&&_owners[i]!=0,"Invalid owner");isOwner[_owners[i]]=true;}owners=_owners;required=_required;id=_id;emitTeamCreated(owners,this,id);}functionaddOwner(addressowner,stringname)publiconlyWalletownerDoesNotExist(owner)notNull(owner)validRequirement(owners.length+1,required){isOwner[owner]=true;owners.push(owner);ownerNames[owner]=name;emitOwnerAddition(owner,name);}functionremoveOwner(addressowner)publiconlyWalletownerExists(owner){isOwner[owner]=false;for(uinti=0;i<owners.length-1;i++)if(owners[i]==owner){owners[i]=owners[owners.length-1];break;}owners.length-=1;if(required>owners.length)changeRequirement(owners.length);emitOwnerRemoval(owner,ownerNames[owner]);}functionchangeRequirement(uint_required)publiconlyWalletvalidRequirement(owners.length,_required){uintoldRequired=required;required=_required;emitRequirementChange(oldRequired,_required);}function_submitTransaction(addressdestination,uintvalue,bytesdata,bytesreasonHash,addressowner,uinttrackingId)internalreturns(uinttransactionId){transactionId=addTransaction(destination,value,data,reasonHash,trackingId);_approveTransaction(transactionId,owner);}functionsubmitTransaction(addressdestination,uintvalue,bytesdata,bytesreasonHash,bytessignature,uinttrackingId)publicreturns(uinttransactionId){bytes32opHash=keccak256(abi.encodePacked(destination,value,data,reasonHash));addressopSigner=opHash.recover(signature);transactionId=_submitTransaction(destination,value,data,reasonHash,opSigner,trackingId);}function_approveTransaction(uinttransactionId,addressowner)internalownerExists(owner)transactionExists(transactionId)notApproved(transactionId,owner)notRejected(transactionId,owner){approvals[transactionId][owner]=true;emitApproval(owner,transactionId);_executeTransaction(transactionId,owner);}functionapproveTransaction(uinttransactionId,bytessignature)public{bytes32opHash=keccak256(abi.encodePacked(transactionId));addressopSigner=opHash.recover(signature);_approveTransaction(transactionId,opSigner);}function_rejectTransaction(uinttransactionId,addressowner)internalownerExists(owner)notApproved(transactionId,owner)notExecuted(transactionId){rejections[transactionId][owner]=true;emitRejection(owner,transactionId);}functionrejectTransaction(uinttransactionId,bytessignature)public{bytes32opHash=keccak256(abi.encodePacked(transactionId));addressopSigner=opHash.recover(signature);_rejectTransaction(transactionId,opSigner);}function_executeTransaction(uinttransactionId,addressowner)internalownerExists(owner)approved(transactionId,owner)notExecuted(transactionId){if(isApproved(transactionId)){Transactionstoragetxn=transactions[transactionId];txn.executed=true;if(external_call(txn.destination,txn.value,txn.data.length,txn.data))emitExecution(transactionId);else{emitExecutionFailure(transactionId);txn.executed=false;}}}functionexecuteTransaction(uinttransactionId,bytessignature)public{bytes32opHash=keccak256(abi.encodePacked(transactionId));addressopSigner=opHash.recover(signature);_executeTransaction(transactionId,opSigner);}functionexternal_call(addressdestination,uintvalue,uintdataLength,bytesdata)privatereturns(bool){boolresult;assembly{letx:=mload(0x40)letd:=add(data,32)result:=call(sub(gas,34710),destination,value,d,dataLength,x,0)}returnresult;}functionisApproved(uinttransactionId)publicviewreturns(bool){uintcount=0;for(uinti=0;i<owners.length;i++){if(approvals[transactionId][owners[i]])count+=1;if(count==required)returntrue;}}functionaddTransaction(addressdestination,uintvalue,bytesdata,bytesreasonHash,uinttrackingId)internalnotNull(destination)returns(uinttransactionId){transactionId=transactionCount;transactions[transactionId]=Transaction({destination:destination,value:value,data:data,reasonHash:reasonHash,executed:false});transactionCount+=1;emitSubmission(transactionId,trackingId);}functiongetApprovalCount(uinttransactionId)publicviewreturns(uintcount){for(uinti=0;i<owners.length;i++)if(approvals[transactionId][owners[i]])count+=1;}functiongetRejectionCount(uinttransactionId)publicviewreturns(uintcount){for(uinti=0;i<owners.length;i++)if(rejections[transactionId][owners[i]])count+=1;}functiongetTransactionCount(boolpending,boolexecuted)publicviewreturns(uintcount){for(uinti=0;i<transactionCount;i++)if(pending&&!transactions[i].executed||executed&&transactions[i].executed)count+=1;}functiongetOwners()publicviewreturns(address[]){returnowners;}functiongetApprovals(uinttransactionId)publicviewreturns(address[]_approvals){address[]memoryapprovalsTemp=newaddress[](owners.length);uintcount=0;uinti;for(i=0;i<owners.length;i++)if(approvals[transactionId][owners[i]]){approvalsTemp[count]=owners[i];count+=1;}_approvals=newaddress[](count);for(i=0;i<count;i++)_approvals[i]=approvalsTemp[i];}functiongetRejections(uinttransactionId)publicviewreturns(address[]_rejections){address[]memoryrejectionsTemp=newaddress[](owners.length);uintcount=0;uinti;for(i=0;i<owners.length;i++)if(rejections[transactionId][owners[i]]){rejectionsTemp[count]=owners[i];count+=1;}_rejections=newaddress[](count);for(i=0;i<count;i++)_rejections[i]=rejectionsTemp[i];}functiongetTransactionIds(uintfrom,uintto,boolpending,boolexecuted)publicviewreturns(uint[]_transactionIds){uint[]memorytransactionIdsTemp=newuint[](transactionCount);uintcount=0;uinti;for(i=0;i<transactionCount;i++)if(pending&&!transactions[i].executed||executed&&transactions[i].executed){transactionIdsTemp[count]=i;count+=1;}_transactionIds=newuint[](to-from);for(i=from;i<to;i++)_transactionIds[i-from]=transactionIdsTemp[i];}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 9
column: 4
content: functionrecover(bytes32hash,bytessignature)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(signature.length!=65){return(address(0));}assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 91h3sa
severity: 1
line: 145
column: 8
content: public

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 9
column: 35
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 158
column: 16
content: address[]_owners

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 158
column: 51
content: string_id

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 174
column: 37
content: stringname

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 224
column: 65
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 224
column: 77
content: bytesreasonHash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 238
column: 64
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 238
column: 76
content: bytesreasonHash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 238
column: 94
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 264
column: 52
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 287
column: 51
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 318
column: 52
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 329
column: 77
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 374
column: 61
content: bytesdata

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 374
column: 73
content: bytesreasonHash

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 437
column: 17
content: address[]

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 448
column: 17
content: address[]_approvals

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 469
column: 17
content: address[]_rejections

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 493
column: 17
content: uint[]_transactionIds

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 23
column: 8
content: assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 331
column: 8
content: assembly{letx:=mload(0x40)letd:=add(data,32)result:=call(sub(gas,34710),destination,value,d,dataLength,x,0)}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :9
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UPGRADE_TO_050 :20
SOLIDITY_GAS_LIMIT_IN_LOOPS :6
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_SHOULD_NOT_BE_PURE :1
