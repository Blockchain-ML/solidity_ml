C:\Users\hp\DataSet\contracts\mainnet\f0\f0dd2b26f38f2a3e3dc9c555c1356476a1adba44_Main0019_noTransferFee.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 852
column: 84
content: 0xde36a8773531406dCBefFdfd3C7b89fCed7A9F84

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 853
column: 56
content: 0xE3ED84A163b9EeaF4f69B4890ae45cC52171Aa7E

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 288
column: 13
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 308
column: 13
content: (address(0))

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 391
column: 4
content: functionapprove(address_spender,uint256amount)externalreturns(bool){require(_spender!=0x0,"spender must be set");allowed[msg.sender][_spender]=amount;emitApproval(msg.sender,_spender,amount);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 766
column: 8
content: for(uinti=0;i<signers.length;i++){if(!isSigner[signers[i]]){require(signers[i]!=address(0),"new signer must not be 0x0");activeSignersCount++;allSigners.push(signers[i]);isSigner[signers[i]]=true;emitSignerAdded(signers[i]);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 780
column: 8
content: for(uinti=0;i<signers.length;i++){if(isSigner[signers[i]]){require(activeSignersCount>1,"must not remove last signer");activeSignersCount--;isSigner[signers[i]]=false;emitSignerRemoved(signers[i]);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 111
column: 8
content: for(uint256i=0;i<length;i++){grantPermission(agent,requiredPermissions[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 125
column: 8
content: for(uint256i=0;i<length;i++){revokePermission(agent,requiredPermissions[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 766
column: 8
content: for(uinti=0;i<signers.length;i++){if(!isSigner[signers[i]]){require(signers[i]!=address(0),"new signer must not be 0x0");activeSignersCount++;allSigners.push(signers[i]);isSigner[signers[i]]=true;emitSignerAdded(signers[i]);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 780
column: 8
content: for(uinti=0;i<signers.length;i++){if(isSigner[signers[i]]){require(activeSignersCount>1,"must not remove last signer");activeSignersCount--;isSigner[signers[i]]=false;emitSignerRemoved(signers[i]);}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 604
column: 0
content: contractFeeAccountisSystemAccount,TransferFeeInterface{usingSafeMathforuint256;structTransferFee{uintpt;uintmin;uintmax;}TransferFeepublictransferFee;eventTransferFeesChanged(uinttransferFeePt,uinttransferFeeMin,uinttransferFeeMax);constructor(addresspermissionGranterContract,uinttransferFeePt,uinttransferFeeMin,uinttransferFeeMax)publicSystemAccount(permissionGranterContract){transferFee=TransferFee(transferFeePt,transferFeeMin,transferFeeMax);}function()externalpayable{}functionsetTransferFees(uinttransferFeePt,uinttransferFeeMin,uinttransferFeeMax)externalrestrict("StabilityBoard"){transferFee=TransferFee(transferFeePt,transferFeeMin,transferFeeMax);emitTransferFeesChanged(transferFeePt,transferFeeMin,transferFeeMax);}functioncalculateTransferFee(addressfrom,addressto,uintamount)externalviewreturns(uint256fee){if(!permissions[from]["NoTransferFee"]&&!permissions[to]["NoTransferFee"]){fee=amount.mul(transferFee.pt).div(1000000);if(fee>transferFee.max){fee=transferFee.max;}elseif(fee<transferFee.min){fee=transferFee.min;}}returnfee;}functioncalculateExchangeFee(uintweiAmount)externalviewreturns(uint256weiFee){require(weiAmount!=weiAmount,"not yet implemented");weiFee=transferFee.max;}}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 196
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 606
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 672
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 277
column: 2
content: functionrecover(bytes32hash,bytessig)internalpurereturns(address){bytes32r;bytes32s;uint8v;if(sig.length!=65){return(address(0));}assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 107
column: 53
content: bytes32[]requiredPermissions

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 123
column: 54
content: bytes32[]requiredPermissions

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 277
column: 33
content: bytessig

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 355
column: 51
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 355
column: 65
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 516
column: 62
content: bytessignature

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 528
column: 69
content: stringnarrative

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 542
column: 70
content: stringnarrative

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 547
column: 70
content: stringnarrative

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 764
column: 24
content: address[]signers

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 778
column: 27
content: address[]signers

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 295
column: 4
content: assembly{r:=mload(add(sig,32))s:=mload(add(sig,64))v:=byte(0,mload(add(sig,96)))}

SOLIDITY_SAFEMATH :3
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :4
SOLIDITY_UPGRADE_TO_050 :11
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :1
