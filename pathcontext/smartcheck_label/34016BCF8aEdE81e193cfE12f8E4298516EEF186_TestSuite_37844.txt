C:\Users\hp\DataSet\contracts\ropsten\34\34016BCF8aEdE81e193cfE12f8E4298516EEF186_TestSuite.sol
jar:file:/C:/Users/hp/AppData/Roaming/npm/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 141
column: 4
content: functionreturnAndRevert(boolresult)internalreturns(bool){assembly{letmemOffset:=mload(0x40)mstore(memOffset,result)mstore(0x40,add(memOffset,32))revert(memOffset,32)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 259
column: 4
content: functionexistenceTransferTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].transfer(testAccounts[1],1000,token).expectTrue();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 264
column: 4
content: functionexistenceApproveTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].approve(testAccounts[1],1000,token).expectTrue();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 268
column: 4
content: functionexistenceTransferFromTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].approve(testAccounts[1],1000,token).expectTrue();testAccounts[1].transferFrom(testAccounts[0],testAccounts[1],1000,token).expectTrue();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 273
column: 4
content: functionexistenceTotalSupplyTest(addresstoken)externalrevertAfterreturns(bool){token.totalSupply().expectUInt();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 277
column: 4
content: functionexistenceBalanceOf(addresstoken)externalrevertAfterreturns(bool){token.balanceOf(testAccounts[0]).expectUInt();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 281
column: 4
content: functionexistenceAllowance(addresstoken)externalrevertAfterreturns(bool){token.allowance(testAccounts[0],testAccounts[1]).expectUInt();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 285
column: 4
content: functionexistenceName(addresstoken)externalrevertAfterreturns(bool){token.name().expectNonEmptyResult();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 289
column: 4
content: functionexistenceSymbol(addresstoken)externalrevertAfterreturns(bool){token.symbol().expectNonEmptyResult();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 293
column: 4
content: functionexistenceDecimals(addresstoken)externalrevertAfterreturns(bool){uinttokenDecimals=token.decimals().toUInt();if(tokenDecimals>=77){TestUtils.returnAndRevert(false);}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 300
column: 4
content: functionbasicApproveTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].approve(testAccounts[1],1000,token).expectTrue();token.allowance(testAccounts[0],testAccounts[1]).expectEqual(1000);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 305
column: 4
content: functionapproveZeroTokensTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].approve(testAccounts[1],0,token).expectTrue();token.allowance(testAccounts[0],testAccounts[1]).expectEqual(0);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 310
column: 4
content: functionallowanceRewriteTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].approve(testAccounts[1],1000,token).expectTrue();token.allowance(testAccounts[0],testAccounts[1]).expectEqual(1000);testAccounts[0].approve(testAccounts[1],2000,token).expectTrue();token.allowance(testAccounts[0],testAccounts[1]).expectEqual(2000);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 317
column: 4
content: functionbasicTransferTest(addresstoken)externalrevertAfterreturns(bool){uintbalance0Old=token.balanceOf(testAccounts[0]).toUInt();uintbalance1Old=token.balanceOf(testAccounts[1]).toUInt();testAccounts[0].transfer(testAccounts[1],1000,token).expectTrue();token.balanceOf(testAccounts[0]).expectEqual(balance0Old-1000);token.balanceOf(testAccounts[1]).expectEqual(balance1Old+1000);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 326
column: 4
content: functiontransferZeroTokensTest(addresstoken)externalrevertAfterreturns(bool){uintbalance0Old=token.balanceOf(testAccounts[0]).toUInt();uintbalance1Old=token.balanceOf(testAccounts[1]).toUInt();testAccounts[0].transfer(testAccounts[1],0,token).expectTrue();token.balanceOf(testAccounts[0]).expectEqual(balance0Old);token.balanceOf(testAccounts[1]).expectEqual(balance1Old);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 335
column: 4
content: functiontransferMoreThanBalanceTest(addresstoken)externalrevertAfterreturns(bool){uintbalance0Old=token.balanceOf(testAccounts[0]).toUInt();token.balanceOf(testAccounts[1]).toUInt();testAccounts[0].transfer(testAccounts[1],balance0Old+1,token).expectRevert();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 342
column: 4
content: functionbasicTransferFromTest(addresstoken)externalrevertAfterreturns(bool){uintbalance0Old=token.balanceOf(testAccounts[0]).toUInt();uintbalance1Old=token.balanceOf(testAccounts[1]).toUInt();testAccounts[0].approve(testAccounts[1],1000,token).expectTrue();testAccounts[1].transferFrom(testAccounts[0],testAccounts[1],1000,token).expectTrue();token.balanceOf(testAccounts[0]).expectEqual(balance0Old-1000);token.balanceOf(testAccounts[1]).expectEqual(balance1Old+1000);token.allowance(testAccounts[0],testAccounts[1]).expectEqual(0);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 354
column: 4
content: functiontransferFromWithoutAllowanceTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].approve(testAccounts[1],0,token).expectTrue();token.balanceOf(testAccounts[0]).toUInt();token.balanceOf(testAccounts[1]).toUInt();testAccounts[1].transferFrom(testAccounts[0],testAccounts[1],1,token).expectRevert();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 362
column: 4
content: functiontransferFromNotFullAllowanceTest(addresstoken)externalrevertAfterreturns(bool){uintbalance0Old=token.balanceOf(testAccounts[0]).toUInt();uintbalance1Old=token.balanceOf(testAccounts[1]).toUInt();testAccounts[0].approve(testAccounts[1],1000,token).expectTrue();testAccounts[1].transferFrom(testAccounts[0],testAccounts[1],600,token).expectTrue();token.balanceOf(testAccounts[0]).expectEqual(balance0Old-600);token.balanceOf(testAccounts[1]).expectEqual(balance1Old+600);token.allowance(testAccounts[0],testAccounts[1]).expectEqual(400);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 374
column: 4
content: functiontransferFromMoreThanAllowedTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].approve(testAccounts[1],600,token).expectTrue();token.balanceOf(testAccounts[0]).toUInt();token.balanceOf(testAccounts[1]).toUInt();testAccounts[1].transferFrom(testAccounts[0],testAccounts[1],601,token).expectRevert();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 382
column: 4
content: functiontransferFromChangeAllowanceTest(addresstoken)externalrevertAfterreturns(bool){testAccounts[0].approve(testAccounts[1],1000,token).expectTrue();uintbalance0Old=token.balanceOf(testAccounts[0]).toUInt();uintbalance1Old=token.balanceOf(testAccounts[1]).toUInt();testAccounts[1].transferFrom(testAccounts[0],testAccounts[1],600,token).expectTrue();token.balanceOf(testAccounts[0]).expectEqual(balance0Old-600);token.balanceOf(testAccounts[1]).expectEqual(balance1Old+600);testAccounts[0].approve(testAccounts[1],0,token).expectTrue();testAccounts[1].transferFrom(testAccounts[0],testAccounts[1],400,token).expectRevert();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 395
column: 4
content: functiontransferFromLowFunds(addresstoken)externalrevertAfterreturns(bool){uintbalance0=token.balanceOf(testAccounts[0]).toUInt();testAccounts[0].approve(testAccounts[1],balance0+1,token).expectTrue();testAccounts[1].transferFrom(testAccounts[0],testAccounts[1],balance0+1,token).expectRevert();}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 401
column: 4
content: functiontransferFromOnBehalf(addresstoken)externalrevertAfterreturns(bool){uintbalance0Old=token.balanceOf(testAccounts[0]).toUInt();uintbalance1Old=token.balanceOf(testAccounts[1]).toUInt();uintbalance2Old=token.balanceOf(testAccounts[2]).toUInt();testAccounts[0].approve(testAccounts[2],1000,token).expectTrue();testAccounts[2].transferFrom(testAccounts[0],testAccounts[1],1000,token).expectTrue();token.allowance(testAccounts[0],testAccounts[2]).expectEqual(0);token.balanceOf(testAccounts[0]).expectEqual(balance0Old-1000);token.balanceOf(testAccounts[1]).expectEqual(balance1Old+1000);token.balanceOf(testAccounts[2]).expectEqual(balance2Old);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 419
column: 4
content: functionrunTests(addresstoken,addresscustomer)externalreturns(uint){require(msg.sender==address(this),"use check() function to run tests");IERC20(token).transferFrom(customer,address(testAccounts[0]),1000);uinttestsPassed=1;uinttotalTests=testSignatures.length;for(uinttestNum=0;testNum<totalTests;++testNum){booltestResult=callTest(testNum,token);if(testResult){testsPassed+=1<<(testNum+1);}}assembly{letmemOffset:=mload(0x40)mstore(memOffset,testsPassed)mstore(0x40,add(memOffset,32))revert(memOffset,32)}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 426
column: 8
content: for(uinttestNum=0;testNum<totalTests;++testNum){booltestResult=callTest(testNum,token);if(testResult){testsPassed+=1<<(testNum+1);}}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 223
column: 15
content: private

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 88
column: 61
content: call(payload)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 142
column: 8
content: assembly{letmemOffset:=mload(0x40)mstore(memOffset,result)mstore(0x40,add(memOffset,32))revert(memOffset,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 436
column: 8
content: assembly{letmemOffset:=mload(0x40)mstore(memOffset,testsPassed)mstore(0x40,add(memOffset,32))revert(memOffset,32)}

SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :24
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_UNCHECKED_CALL :1
